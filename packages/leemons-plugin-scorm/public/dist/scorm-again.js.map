{"version":3,"file":"scorm-again.js","mappings":"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,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE;AACjE,CAAC;AAED,+DAAeA,cAAc;;;;;;;;;;;;;;;;;;ACzE7B,IAAM1S,OAAO,GAAG;EACd8a,YAAY,EAAE,YAAY;EAC1BgJ,aAAa,EAAE,aAAa;EAC5B3E,OAAO,EAAE,uDAAuD;EAAE;EAClEgG,WAAW,EAAE,oDAAoD;EAAE;EACnE0I,UAAU,EAAE,QAAQ;EACpB1H,WAAW,EAAE,cAAc;EAC3B3D,UAAU,EAAE,6BAA6B;EAAE;EAC3C0E,aAAa,EAAE,+BAA+B;EAC9CK,WAAW,EAAE,YAAY;EAAE;EAC3BuG,QAAQ,EAAE,aAAa;EAEvB;EACAhJ,SAAS,EAAE,gDAAgD;EAC3D1F,UAAU,EAAE,8DAA8D;EAC1E6F,OAAO,EAAE,8BAA8B;EACvCkC,OAAO,EAAE,8EAA8E;EACvFK,SAAS,EAAE,mEAAmE;EAAE;EAChFS,QAAQ,EAAE,uBAAuB;EAEjC;EACAjI,WAAW,EAAE,OAAO;EACpBoG,WAAW,EAAE,QAAQ;EACrBC,WAAW,EAAE,UAAU;EACvBgB,eAAe,EAAE,UAAU;EAC3Bf,UAAU,EAAE;AACd,CAAC;AAED,IAAM3O,IAAI,GAAAlZ,aAAA,CAAAA,aAAA,KACLuB,OAAO,GAAK;EACbknB,aAAa,EAAE;AACjB,CAAC,CACF;AAED,IAAM/e,SAAS,GAAG;EAChB4lB,YAAY,EAAE,4BAA4B;EAC1C9B,YAAY,EAAE,4BAA4B;EAC1CnC,aAAa,EAAE,6BAA6B;EAC5CkE,aAAa,EAAE,6BAA6B;EAC5C/D,cAAc,EAAE,8BAA8B;EAC9CO,OAAO,EAAE,iDAAiD;EAAE;EAC5DU,gBAAgB,EAAE,+EAA+E;EAAE;EACnG3U,SAAS,EAAE,iEAAiE;EAAE;EAC9E0X,kBAAkB,EAAE,yEAAyE;EAAE;EAC/FjC,iBAAiB,EAAE,gFAAgF;EAAE;EACrG7M,OAAO,EAAE,0RAA0R;EACnSgG,WAAW,EAAE,4HAA4H;EACzI0I,UAAU,EAAE,QAAQ;EACpB1H,WAAW,EAAE,cAAc;EAC3B3D,UAAU,EAAE,mCAAmC;EAC/C0E,aAAa,EAAE,yBAAyB;EACxCgH,kBAAkB,EAAE,yBAAyB;EAAE;EAC/CpD,iBAAiB,EAAE,wEAAwE;EAAE;EAC7FvD,WAAW,EAAE,MAAM;EAAE;EACrBuG,QAAQ,EAAE,aAAa;EACvBK,aAAa,EAAE,WAAW;EAE1B;EACAxE,UAAU,EAAE,gDAAgD;EAC5DK,UAAU,EAAE,2BAA2B;EACvC/E,OAAO,EAAE,oCAAoC;EAC7CkC,OAAO,EAAE,iGAAiG;EAC1GK,SAAS,EAAE,6EAA6E;EACxFS,QAAQ,EAAE,8GAA8G;EAAE;EAC1HmG,UAAU,EAAE,wBAAwB;EACpCC,SAAS,EAAE,6DAA6D;EAExE;EACA5C,YAAY,EAAE,MAAM;EACpBrF,WAAW,EAAE,KAAK;EAClBC,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAE,MAAM;EAClByD,cAAc,EAAE;AAClB,CAAC;AAED,IAAMpX,KAAK,GAAG;EACZgF,IAAI,EAAEA,IAAI;EACV3X,OAAO,EAAEA,OAAO;EAChBmI,SAAS,EAAEA;AACb,CAAC;AAED,+DAAewK,KAAK;;;;;;;;;;;;;AClFQ;AAE5B,IAAMK,eAAe,GAAGL,wDAAe;AAEvC,IAAMyV,OAAO,GAAG;EACd,YAAY,EAAE;IACZ3S,MAAM,EAAE,gBAAgB;IACxBtb,GAAG,EAAE,CAAC;IACN2a,SAAS,EAAE,EAAE;IACbkB,MAAM,EAAE;EACV,CAAC;EACD,QAAQ,EAAE;IACRP,MAAM,EAAEzC,eAAe,CAAC8X,iBAAiB;IACzC3wB,GAAG,EAAE,EAAE;IACP2a,SAAS,EAAE,KAAK;IAChBkB,MAAM,EAAE;EACV,CAAC;EACD,SAAS,EAAE;IACTP,MAAM,EAAEzC,eAAe,CAACkY,gBAAgB;IACxC/wB,GAAG,EAAE,EAAE;IACP2a,SAAS,EAAE,KAAK;IAChBkB,MAAM,EAAE;EACV,CAAC;EACD,cAAc,EAAE;IACdP,MAAM,EAAEzC,eAAe,CAACgZ,iBAAiB;IACzC7xB,GAAG,EAAE,CAAC;IACN2a,SAAS,EAAE,EAAE;IACbkB,MAAM,EAAE;EACV,CAAC;EACD,UAAU,EAAE;IACVP,MAAM,EAAEzC,eAAe,CAACkb,kBAAkB;IAC1CnY,OAAO,EAAE/C,eAAe,CAACkb,kBAAkB;IAC3C/zB,GAAG,EAAE,EAAE;IACP2a,SAAS,EAAE,KAAK;IAChBa,UAAU,EAAE,KAAK;IACjBK,MAAM,EAAE;EACV,CAAC;EACD,aAAa,EAAE;IACbP,MAAM,EAAE,KAAK,GAAGzC,eAAe,CAACkb,kBAAkB;IAClDnY,OAAO,EAAE/C,eAAe,CAACwP,UAAU,GAAG,MAAM,GACxCxP,eAAe,CAACkb,kBAAkB;IACtC/zB,GAAG,EAAE,GAAG;IACR2a,SAAS,EAAE,KAAK;IAChBa,UAAU,EAAE,KAAK;IACjBK,MAAM,EAAE;EACV,CAAC;EACD,YAAY,EAAE;IACZP,MAAM,EAAEzC,eAAe,CAACkb,kBAAkB;IAC1C/zB,GAAG,EAAE,EAAE;IACP2a,SAAS,EAAE,KAAK;IAChBkB,MAAM,EAAE;EACV,CAAC;EACD,QAAQ,EAAE;IACRP,MAAM,EAAEzC,eAAe,CAACkb,kBAAkB;IAC1C/zB,GAAG,EAAE,CAAC;IACN2a,SAAS,EAAE,EAAE;IACbkB,MAAM,EAAE;EACV,CAAC;EACD,SAAS,EAAE;IACTP,MAAM,EAAEzC,eAAe,CAACwP,UAAU;IAClCroB,GAAG,EAAE,CAAC;IACN2a,SAAS,EAAE,EAAE;IACbkB,MAAM,EAAE;EACV,CAAC;EACD,OAAO,EAAE;IACPP,MAAM,EAAEzC,eAAe,CAACgb,aAAa;IACrC7zB,GAAG,EAAE,CAAC;IACN2a,SAAS,EAAE,EAAE;IACbkB,MAAM,EAAE;EACV;AACF,CAAC;AAED,IAAMjD,OAAO,GAAG;EACd,YAAY,EAAE;IACZ5Y,GAAG,EAAE,CAAC;IACN2a,SAAS,EAAE,EAAE;IACbkB,MAAM,EAAE,KAAK;IACbX,SAAS,EAAE,KAAK;IAChBI,MAAM,EAAE,gBAAgB;IACxBL,KAAK,EAAE;EACT,CAAC;EACD,QAAQ,EAAE;IACRjb,GAAG,EAAE,EAAE;IACP2a,SAAS,EAAE,KAAK;IAChBkB,MAAM,EAAE,IAAI;IACZX,SAAS,EAAE,KAAK;IAChBI,MAAM,EAAEzC,eAAe,CAAC8X;EAC1B,CAAC;EACD,SAAS,EAAE;IACT3wB,GAAG,EAAE,EAAE;IACP2a,SAAS,EAAE,KAAK;IAChBkB,MAAM,EAAE,KAAK;IACbX,SAAS,EAAE,KAAK;IAChBI,MAAM,EAAEzC,eAAe,CAACib;EAC1B,CAAC;EACD,cAAc,EAAE;IACd9zB,GAAG,EAAE,CAAC;IACN2a,SAAS,EAAE,EAAE;IACbkB,MAAM,EAAE,KAAK;IACbX,SAAS,EAAE,IAAI;IACfI,MAAM,EAAEzC,eAAe,CAACgZ;EAC1B,CAAC;EACD,UAAU,EAAE;IACV7xB,GAAG,EAAE,EAAE;IACP2a,SAAS,EAAE,KAAK;IAChBa,UAAU,EAAE,KAAK;IACjBK,MAAM,EAAE,KAAK;IACbX,SAAS,EAAE,KAAK;IAChBI,MAAM,EAAEzC,eAAe,CAACkb,kBAAkB;IAC1CnY,OAAO,EAAE/C,eAAe,CAACkb;EAC3B,CAAC;EACD,aAAa,EAAE;IACb/zB,GAAG,EAAE,GAAG;IACR2a,SAAS,EAAE,KAAK;IAChBa,UAAU,EAAE,KAAK;IACjBK,MAAM,EAAE,KAAK;IACbX,SAAS,EAAE,KAAK;IAChBI,MAAM,EAAE,KAAK,GAAGzC,eAAe,CAACkb,kBAAkB;IAClDnY,OAAO,EAAE/C,eAAe,CAACwP,UAAU,GAAG,MAAM,GACxCxP,eAAe,CAACkb;EACtB,CAAC;EACD,YAAY,EAAE;IACZ/zB,GAAG,EAAE,EAAE;IACP2a,SAAS,EAAE,KAAK;IAChBkB,MAAM,EAAE,KAAK;IACbX,SAAS,EAAE,KAAK;IAChBI,MAAM,EAAEzC,eAAe,CAACkb;EAC1B,CAAC;EACD,QAAQ,EAAE;IACR/zB,GAAG,EAAE,CAAC;IACN2a,SAAS,EAAE,EAAE;IACbkB,MAAM,EAAE,KAAK;IACbX,SAAS,EAAE,KAAK;IAChBI,MAAM,EAAEzC,eAAe,CAACkb,kBAAkB;IAC1C9Y,KAAK,EAAE;EACT,CAAC;EACD,SAAS,EAAE;IACTjb,GAAG,EAAE,CAAC;IACN2a,SAAS,EAAE,KAAK;IAChBkB,MAAM,EAAE,KAAK;IACbX,SAAS,EAAE,KAAK;IAChBI,MAAM,EAAEzC,eAAe,CAACwP,UAAU;IAClCpN,KAAK,EAAE;EACT,CAAC;EACD,OAAO,EAAE;IACPjb,GAAG,EAAE,CAAC;IACN2a,SAAS,EAAE,EAAE;IACbkB,MAAM,EAAE,KAAK;IACbX,SAAS,EAAE,KAAK;IAChBI,MAAM,EAAEzC,eAAe,CAACgb,aAAa;IACrC5Y,KAAK,EAAE;EACT;AACF,CAAC;AAED,IAAM3C,SAAS,GAAG;EAChB2V,OAAO,EAAEA,OAAO;EAChBrV,OAAO,EAAEA;AACX,CAAC;AAED,+DAAeN,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9J6B;AAErD,IAAM6b,cAAc,GAAG1uB,2FAAuC;AAC9D,IAAM2uB,WAAW,GAAG3uB,wFAAoC;AACxD,IAAM4uB,gBAAgB,GAAG5uB,6FAAyC;;AAElE;AACA;AACA;AAFA,IAAA6iB,UAAA,oBAAAviB,OAAA;AAAA,IAAAuuB,aAAA,oBAAAvuB,OAAA;AAAA,IAAAwuB,gBAAA,oBAAAxuB,OAAA;AAGO,IAAMR,eAAe,0BAAAivB,MAAA;EAAAzwB,SAAA,CAAAwB,eAAA,EAAAivB,MAAA;EAAA,IAAAxwB,MAAA,GAAAC,YAAA,CAAAsB,eAAA;EAC1B;AACF;AACA;AACA;AACA;AACA;EACE,SAAAA,gBAAYsC,SAAiB,EAAE4sB,YAAoB,EAAEC,eAAuB,EAAE;IAAA,IAAAvwB,KAAA;IAAAC,eAAA,OAAAmB,eAAA;IAC5EpB,KAAA,GAAAH,MAAA,CAAAlB,IAAA,OAAM2xB,YAAY;IAAEruB,0BAAA,CAAA4S,sBAAA,CAAA7U,KAAA,GAAAmkB,UAAA;MAAAjiB,QAAA;MAAA3D,KAAA;IAAA;IAAA0D,0BAAA,CAAA4S,sBAAA,CAAA7U,KAAA,GAAAmwB,aAAA;MAAAjuB,QAAA;MAAA3D,KAAA;IAAA;IAAA0D,0BAAA,CAAA4S,sBAAA,CAAA7U,KAAA,GAAAowB,gBAAA;MAAAluB,QAAA;MAAA3D,KAAA;IAAA;IACpByG,qBAAA,CAAA6P,sBAAA,CAAA7U,KAAA,GAAAmkB,UAAA,EAAkBzgB,SAAS;IAC3BsB,qBAAA,CAAA6P,sBAAA,CAAA7U,KAAA,GAAAmwB,aAAA,EAAqBG,YAAY;IACjCtrB,qBAAA,CAAA6P,sBAAA,CAAA7U,KAAA,GAAAowB,gBAAA,EAAwBG,eAAe;IAAC,OAAAvwB,KAAA;EAC1C;EAACO,YAAA,CAAAa,eAAA;IAAAZ,GAAA;IAAA0F,GAAA;IAMD;AACF;AACA;AACA;IACE,SAAAA,IAAA,EAAgB;MACd,OAAAT,qBAAA,CAAO,IAAI,EAAA0e,UAAA;IACb;;IAEA;AACF;AACA;AACA;EAHE;IAAA3jB,GAAA;IAAA0F,GAAA,EAIA,SAAAA,IAAA,EAAmB;MACjB,OAAAT,qBAAA,CAAO,IAAI,EAAA0qB,aAAA;IACb;;IAEA;AACF;AACA;AACA;EAHE;IAAA3vB,GAAA;IAAA0F,GAAA,EAIA,SAAAA,IAAA,EAAsB;MACpB,OAAAT,qBAAA,CAAO,IAAI,EAAA2qB,gBAAA;IACb;EAAC;EAAA,OAAAhvB,eAAA;AAAA,gBAAAovB,gBAAA,CAxCkChnB,KAAK;;AA2C1C;AACA;AACA;AACO,IAAM8a,sBAAsB,0BAAAmM,gBAAA;EAAA7wB,SAAA,CAAA0kB,sBAAA,EAAAmM,gBAAA;EAAA,IAAArV,OAAA,GAAAtb,YAAA,CAAAwkB,sBAAA;EACjC;AACF;AACA;AACA;EACE,SAAAA,uBAAY5gB,SAAiB,EAAE;IAAA,IAAAyI,MAAA;IAAAlM,eAAA,OAAAqkB,sBAAA;IAC7B,IAAI,CAAC,CAAC,CAAC/gB,cAAc,CAAC5E,IAAI,CAACqxB,cAAc,EAAE5oB,MAAM,CAAC1D,SAAS,CAAC,CAAC,EAAE;MAC7DyI,MAAA,GAAAiP,OAAA,CAAAzc,IAAA,OAAM+E,SAAS,EAAEssB,cAAc,CAAC5oB,MAAM,CAAC1D,SAAS,CAAC,CAAC,CAACiP,YAAY,EAAEqd,cAAc,CAAC5oB,MAAM,CAAC1D,SAAS,CAAC,CAAC,CAACkP,aAAa;IAClH,CAAC,MAAM;MACLzG,MAAA,GAAAiP,OAAA,CAAAzc,IAAA,OAAM,GAAG,EAAEqxB,cAAc,CAAC,KAAK,CAAC,CAACrd,YAAY,EAAEqd,cAAc,CAAC,KAAK,CAAC,CAACpd,aAAa;IACpF;IAAC,OAAA8d,0BAAA,CAAAvkB,MAAA;EACH;EAAC,OAAA5L,YAAA,CAAA+jB,sBAAA;AAAA,EAXyCljB,eAAe;;AAc3D;AACA;AACA;AACO,IAAM+X,mBAAmB,0BAAAwX,iBAAA;EAAA/wB,SAAA,CAAAuZ,mBAAA,EAAAwX,iBAAA;EAAA,IAAAnV,OAAA,GAAA1b,YAAA,CAAAqZ,mBAAA;EAC9B;AACF;AACA;AACA;EACE,SAAAA,oBAAYzV,SAAiB,EAAE;IAAA,IAAAwJ,MAAA;IAAAjN,eAAA,OAAAkZ,mBAAA;IAC7B,IAAI,CAAC,CAAC,CAAC5V,cAAc,CAAC5E,IAAI,CAACsxB,WAAW,EAAE7oB,MAAM,CAAC1D,SAAS,CAAC,CAAC,EAAE;MAC1DwJ,MAAA,GAAAsO,OAAA,CAAA7c,IAAA,OAAM+E,SAAS,EAAEusB,WAAW,CAAC7oB,MAAM,CAAC1D,SAAS,CAAC,CAAC,CAACiP,YAAY,EAAEsd,WAAW,CAAC7oB,MAAM,CAAC1D,SAAS,CAAC,CAAC,CAACkP,aAAa;IAC5G,CAAC,MAAM;MACL1F,MAAA,GAAAsO,OAAA,CAAA7c,IAAA,OAAM,GAAG,EAAEsxB,WAAW,CAAC,KAAK,CAAC,CAACtd,YAAY,EAAEsd,WAAW,CAAC,KAAK,CAAC,CAACrd,aAAa;IAC9E;IAAC,OAAA8d,0BAAA,CAAAxjB,MAAA;EACH;EAAC,OAAA3M,YAAA,CAAA4Y,mBAAA;AAAA,EAXsC/X,eAAe;;AAcxD;AACA;AACA;AACO,IAAMwoB,wBAAwB,0BAAAgH,iBAAA;EAAAhxB,SAAA,CAAAgqB,wBAAA,EAAAgH,iBAAA;EAAA,IAAAzU,OAAA,GAAArc,YAAA,CAAA8pB,wBAAA;EACnC;AACF;AACA;AACA;EACE,SAAAA,yBAAYlmB,SAAiB,EAAE;IAAA,IAAA2Z,MAAA;IAAApd,eAAA,OAAA2pB,wBAAA;IAC7B,IAAI,CAAC,CAAC,CAACrmB,cAAc,CAAC5E,IAAI,CAACuxB,gBAAgB,EAAE9oB,MAAM,CAAC1D,SAAS,CAAC,CAAC,EAAE;MAC/D2Z,MAAA,GAAAlB,OAAA,CAAAxd,IAAA,OAAM+E,SAAS,EAAEwsB,gBAAgB,CAAC9oB,MAAM,CAAC1D,SAAS,CAAC,CAAC,CAACiP,YAAY,EAAEud,gBAAgB,CAAC9oB,MAAM,CAAC1D,SAAS,CAAC,CAAC,CAACkP,aAAa;IACtH,CAAC,MAAM;MACLyK,MAAA,GAAAlB,OAAA,CAAAxd,IAAA,OAAM,GAAG,EAAEuxB,gBAAgB,CAAC,KAAK,CAAC,CAACvd,YAAY,EAAEud,gBAAgB,CAAC,KAAK,CAAC,CAACtd,aAAa;IACxF;IAAC,OAAA8d,0BAAA,CAAArT,MAAA;EACH;EAAC,OAAA9c,YAAA,CAAAqpB,wBAAA;AAAA,EAX2CxoB,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FtD,IAAMyvB,kBAAkB,GAAG,GAAG;AAC9B,IAAMC,kBAAkB,GAAG,EAAE;AAC7B,IAAMC,gBAAgB,GAAG,EAAE,GAAGD,kBAAkB;AAChD,IAAME,eAAe,GAAG,EAAE,GAAGD,gBAAgB;AAEpD,IAAME,YAAY,GAAG,CACnB,CAAC,GAAG,EAAED,eAAe,CAAC,EACtB,CAAC,GAAG,EAAED,gBAAgB,CAAC,EACvB,CAAC,GAAG,EAAED,kBAAkB,CAAC,EACzB,CAAC,GAAG,EAAED,kBAAkB,CAAC,CAC1B;;AAED;AACA;AACA;AACA;AACA;AACA;AACO,SAAS5J,kBAAkBA,CAACiK,YAAoB,EAAE;EACvD;EACA,IAAI,CAACA,YAAY,IAAIA,YAAY,IAAI,CAAC,EAAE;IACtC,OAAO,UAAU;EACnB;EAEA,IAAMC,KAAK,GAAGv1B,IAAI,CAACw1B,KAAK,CAACF,YAAY,GAAGH,gBAAgB,CAAC;EAEzD,IAAMM,OAAO,GAAG,IAAIp1B,IAAI,CAACi1B,YAAY,GAAG,IAAI,CAAC;EAC7C,IAAMI,OAAO,GAAGD,OAAO,CAACE,aAAa,EAAE;EACvC;EACA,IAAMvK,OAAO,GAAGqK,OAAO,CAACG,UAAU,EAAE;EACpC,IAAMC,EAAE,GAAGP,YAAY,GAAG,GAAG;EAC7B,IAAIQ,KAAK,GAAG,EAAE;EACd,IAAIC,aAAa,CAACF,EAAE,CAAC,GAAG,CAAC,EAAE;IACzB,IAAIE,aAAa,CAACF,EAAE,CAAC,GAAG,CAAC,EAAE;MACzBC,KAAK,GAAGD,EAAE,CAACG,OAAO,CAAC,CAAC,CAAC;IACvB,CAAC,MAAM;MACLF,KAAK,GAAGtqB,MAAM,CAACqqB,EAAE,CAAC;IACpB;IACAC,KAAK,GAAG,GAAG,GAAGA,KAAK,CAAC3nB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACnC;EAEA,OAAO,CAAConB,KAAK,GAAG,GAAG,GAAGG,OAAO,GAAG,GAAG,GAAGtK,OAAO,EAAEloB,OAAO,CAAC,SAAS,EAC5D,KAAK,CAAC,GAAG4yB,KAAK;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS9F,uBAAuBA,CAAC5E,OAAe,EAAE;EACvD;EACA,IAAI,CAACA,OAAO,IAAIA,OAAO,IAAI,CAAC,EAAE;IAC5B,OAAO,MAAM;EACf;EAEA,IAAI6K,QAAQ,GAAG,GAAG;EAClB,IAAIC,SAAS,GAAG9K,OAAO;EAEvBiK,YAAY,CAACziB,OAAO,CAAC,UAAAP,IAAA,EAA6B;IAAA,IAAAC,KAAA,GAAAE,cAAA,CAAAH,IAAA;MAA3B8jB,IAAI,GAAA7jB,KAAA;MAAE8jB,eAAe,GAAA9jB,KAAA;IAC1C,IAAI3P,KAAK,GAAG3C,IAAI,CAACw1B,KAAK,CAACU,SAAS,GAAGE,eAAe,CAAC;IAEnDF,SAAS,GAAGA,SAAS,GAAGE,eAAe;IACvC,IAAIL,aAAa,CAACG,SAAS,CAAC,GAAG,CAAC,EAAE;MAChCA,SAAS,GAAGpkB,MAAM,CAACA,MAAM,CAACokB,SAAS,CAAC,CAACF,OAAO,CAAC,CAAC,CAAC,CAAC;IAClD;IACA;IACA;IACA,IAAIG,IAAI,KAAK,GAAG,IAAID,SAAS,GAAG,CAAC,EAAE;MACjCvzB,KAAK,IAAIuzB,SAAS;IACpB;IAEA,IAAIvzB,KAAK,EAAE;MACT,IAAI,CAACszB,QAAQ,CAACjlB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAC1BmlB,IAAI,KAAK,GAAG,IAAIA,IAAI,KAAK,GAAG,IAAIA,IAAI,KAAK,GAAG,KAC5CF,QAAQ,CAACjlB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QAChCilB,QAAQ,IAAI,GAAG;MACjB;MACAA,QAAQ,OAAA5nB,MAAA,CAAO1L,KAAK,EAAA0L,MAAA,CAAG8nB,IAAI,CAAE;IAC/B;EACF,CAAC,CAAC;EAEF,OAAOF,QAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,gBAAgBA,CAACC,UAAkB,EAAEC,SAAiB,EAAE;EACtE,IAAI,CAACD,UAAU,IAAI,OAAOA,UAAU,KAAK,QAAQ,IAC7C,CAACA,UAAU,CAAClpB,KAAK,CAACmpB,SAAS,CAAC,EAAE;IAChC,OAAO,CAAC;EACV;EACA,IAAMrc,KAAK,GAAGoc,UAAU,CAACnoB,KAAK,CAAC,GAAG,CAAC;EACnC,IAAMonB,KAAK,GAAGzjB,MAAM,CAACoI,KAAK,CAAC,CAAC,CAAC,CAAC;EAC9B,IAAMwb,OAAO,GAAG5jB,MAAM,CAACoI,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,IAAMkR,OAAO,GAAGtZ,MAAM,CAACoI,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,OAAQqb,KAAK,GAAG,IAAI,GAAKG,OAAO,GAAG,EAAG,GAAGtK,OAAO;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASoL,oBAAoBA,CAACP,QAAgB,EAAEQ,aAAqB,EAAE;EAC5E,IAAI,CAACR,QAAQ,IAAI,CAACA,QAAQ,CAAC7oB,KAAK,CAACqpB,aAAa,CAAC,EAAE;IAC/C,OAAO,CAAC;EACV;EAEA,IAAAlkB,KAAA,GAA2D,IAAI+I,MAAM,CACjEmb,aAAa,CAAC,CAACC,IAAI,CAACT,QAAQ,CAAC,IAAI,EAAE;IAAAvjB,KAAA,GAAAF,cAAA,CAAAD,KAAA;IAD9BokB,KAAK,GAAAjkB,KAAA;IAAEkkB,MAAM,GAAAlkB,KAAA;IAAImkB,IAAI,GAAAnkB,KAAA;IAAE6iB,KAAK,GAAA7iB,KAAA;IAAEgjB,OAAO,GAAAhjB,KAAA;IAAE0Y,OAAO,GAAA1Y,KAAA;EAGvD,IAAI7R,MAAM,GAAG,GAAG;EAEhBA,MAAM,IAAKiR,MAAM,CAACsZ,OAAO,CAAC,IAAI,GAAI;EAClCvqB,MAAM,IAAKiR,MAAM,CAAC4jB,OAAO,CAAC,GAAG,IAAI,IAAI,GAAI;EACzC70B,MAAM,IAAKiR,MAAM,CAACyjB,KAAK,CAAC,GAAG,MAAM,IAAI,GAAI;EACzC10B,MAAM,IAAKiR,MAAM,CAAC+kB,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,GAAI;EAClDh2B,MAAM,IAAKiR,MAAM,CAAC6kB,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,IAAI,GAAI;EAEzD,OAAO91B,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASovB,eAAeA,CAC3B6G,KAAa,EACbC,MAAc,EACdN,aAAqB,EAAE;EACzB,OAAOzG,uBAAuB,CAC1BwG,oBAAoB,CAACM,KAAK,EAAEL,aAAa,CAAC,GAC1CD,oBAAoB,CAACO,MAAM,EAAEN,aAAa,CAAC,CAC9C;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASnL,oBAAoBA,CAChCwL,KAAa,EACbC,MAAc,EACdR,SAAiB,EAAE;EACrB,OAAOlL,kBAAkB,CACrBgL,gBAAgB,CAACS,KAAK,EAAEP,SAAS,CAAC,GAClCF,gBAAgB,CACZU,MAAM,EAAER,SAAS,CAAC,CACzB;AACH;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS/e,OAAOA,CAACwf,IAAI,EAAE;EAC5B,IAAMn2B,MAAM,GAAG,CAAC,CAAC;;EAEjB;AACF;AACA;AACA;AACA;EACE,SAASo2B,OAAOA,CAACC,GAAG,EAAEC,IAAI,EAAE;IAC1B,IAAI73B,MAAM,CAAC43B,GAAG,CAAC,KAAKA,GAAG,EAAE;MACvBr2B,MAAM,CAACs2B,IAAI,CAAC,GAAGD,GAAG;IACpB,CAAC,MAAM,IAAI9iB,KAAK,CAACgjB,OAAO,CAACF,GAAG,CAAC,EAAE;MAC7B,KAAK,IAAInqB,CAAC,GAAG,CAAC,EAAEsqB,CAAC,GAAGH,GAAG,CAACpqB,MAAM,EAAEC,CAAC,GAAGsqB,CAAC,EAAEtqB,CAAC,EAAE,EAAE;QAC1CkqB,OAAO,CAACC,GAAG,CAACnqB,CAAC,CAAC,EAAEoqB,IAAI,GAAG,GAAG,GAAGpqB,CAAC,GAAG,GAAG,CAAC;QACrC,IAAIsqB,CAAC,KAAK,CAAC,EAAEx2B,MAAM,CAACs2B,IAAI,CAAC,GAAG,EAAE;MAChC;IACF,CAAC,MAAM;MACL,IAAIG,OAAO,GAAG,IAAI;MAClB,KAAK,IAAMC,CAAC,IAAIL,GAAG,EAAE;QACnB,IAAI,CAAC,CAAC,CAACvvB,cAAc,CAAC5E,IAAI,CAACm0B,GAAG,EAAEK,CAAC,CAAC,EAAE;UAClCD,OAAO,GAAG,KAAK;UACfL,OAAO,CAACC,GAAG,CAACK,CAAC,CAAC,EAAEJ,IAAI,GAAGA,IAAI,GAAG,GAAG,GAAGI,CAAC,GAAGA,CAAC,CAAC;QAC5C;MACF;MACA,IAAID,OAAO,IAAIH,IAAI,EAAEt2B,MAAM,CAACs2B,IAAI,CAAC,GAAG,CAAC,CAAC;IACxC;EACF;EAEAF,OAAO,CAACD,IAAI,EAAE,EAAE,CAAC;EACjB,OAAOn2B,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS8E,SAASA,CAACqxB,IAAI,EAAE;EAC9B,YAAY;;EACZ,IAAI13B,MAAM,CAAC03B,IAAI,CAAC,KAAKA,IAAI,IAAI5iB,KAAK,CAACgjB,OAAO,CAACJ,IAAI,CAAC,EAAE,OAAOA,IAAI;EAC7D,IAAMQ,KAAK,GAAG,yBAAyB;EACvC,IAAM32B,MAAM,GAAG,CAAC,CAAC;EACjB,KAAK,IAAM02B,CAAC,IAAIP,IAAI,EAAE;IACpB,IAAI,CAAC,CAAC,CAACrvB,cAAc,CAAC5E,IAAI,CAACi0B,IAAI,EAAEO,CAAC,CAAC,EAAE;MACnC,IAAIL,GAAG,GAAGr2B,MAAM;MAChB,IAAIs2B,IAAI,GAAG,EAAE;MACb,IAAIM,CAAC,GAAGD,KAAK,CAACd,IAAI,CAACa,CAAC,CAAC;MACrB,OAAOE,CAAC,EAAE;QACRP,GAAG,GAAGA,GAAG,CAACC,IAAI,CAAC,KAAKD,GAAG,CAACC,IAAI,CAAC,GAAIM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAE,CAAC;QACjDN,IAAI,GAAGM,CAAC,CAAC,CAAC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC;QACnBA,CAAC,GAAGD,KAAK,CAACd,IAAI,CAACa,CAAC,CAAC;MACnB;MACAL,GAAG,CAACC,IAAI,CAAC,GAAGH,IAAI,CAACO,CAAC,CAAC;IACrB;EACF;EACA,OAAO12B,MAAM,CAAC,EAAE,CAAC,IAAIA,MAAM;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASk1B,aAAaA,CAAC2B,GAAW,EAAE;EACzC,IAAI13B,IAAI,CAACw1B,KAAK,CAACkC,GAAG,CAAC,KAAKA,GAAG,IAAIlsB,MAAM,CAACksB,GAAG,CAAC,CAAC1mB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC;EACrE,IAAMkJ,KAAK,GAAGwd,GAAG,CAAC53B,QAAQ,EAAE,CAACqO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC1C,OAAO+L,KAAK,CAACpN,MAAM,IAAI,CAAC;AAC1B;;;;;;UCjPA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACN2C;AACJ;AACZ;AAE3B6qB,MAAM,CAACn0B,UAAU,GAAGA,mDAAU;AAC9Bm0B,MAAM,CAAC3e,YAAY,GAAGA,qDAAY;AAClC2e,MAAM,CAAC7zB,IAAI,GAAGA,6CAAI,C","sources":["webpack://scorm-again/./node_modules/lodash.debounce/index.js","webpack://scorm-again/./src/AICC.js","webpack://scorm-again/./src/BaseAPI.js","webpack://scorm-again/./src/Scorm12API.js","webpack://scorm-again/./src/Scorm2004API.js","webpack://scorm-again/./src/cmi/aicc_cmi.js","webpack://scorm-again/./src/cmi/common.js","webpack://scorm-again/./src/cmi/scorm12_cmi.js","webpack://scorm-again/./src/cmi/scorm2004_cmi.js","webpack://scorm-again/./src/constants/api_constants.js","webpack://scorm-again/./src/constants/error_codes.js","webpack://scorm-again/./src/constants/language_constants.js","webpack://scorm-again/./src/constants/regex.js","webpack://scorm-again/./src/constants/response_constants.js","webpack://scorm-again/./src/exceptions.js","webpack://scorm-again/./src/utilities.js","webpack://scorm-again/webpack/bootstrap","webpack://scorm-again/webpack/runtime/compat get default export","webpack://scorm-again/webpack/runtime/define property getters","webpack://scorm-again/webpack/runtime/global","webpack://scorm-again/webpack/runtime/hasOwnProperty shorthand","webpack://scorm-again/webpack/runtime/make namespace object","webpack://scorm-again/./src/exports/scorm-again.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","// @flow\nimport Scorm12API from './Scorm12API';\nimport {\n  CMI,\n  CMIAttemptRecordsObject,\n  CMIEvaluationCommentsObject,\n  CMITriesObject,\n} from './cmi/aicc_cmi';\nimport {NAV} from './cmi/scorm12_cmi';\n\n/**\n * The AICC API class\n */\nexport default class AICC extends Scorm12API {\n  /**\n   * Constructor to create AICC API object\n   * @param {object} settings\n   */\n  constructor(settings: {}) {\n    const finalSettings = {\n      ...{\n        mastery_override: false,\n      }, ...settings,\n    };\n\n    super(finalSettings);\n\n    this.cmi = new CMI();\n    this.nav = new NAV();\n  }\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   *\n   * @param {string} CMIElement\n   * @param {any} value\n   * @param {boolean} foundFirstIndex\n   * @return {object}\n   */\n  getChildElement(CMIElement, value, foundFirstIndex) {\n    let newChild = super.getChildElement(CMIElement, value, foundFirstIndex);\n\n    if (!newChild) {\n      if (this.stringMatches(CMIElement, 'cmi\\\\.evaluation\\\\.comments\\\\.\\\\d+')) {\n        newChild = new CMIEvaluationCommentsObject();\n      } else if (this.stringMatches(CMIElement,\n          'cmi\\\\.student_data\\\\.tries\\\\.\\\\d+')) {\n        newChild = new CMITriesObject();\n      } else if (this.stringMatches(CMIElement,\n          'cmi\\\\.student_data\\\\.attempt_records\\\\.\\\\d+')) {\n        newChild = new CMIAttemptRecordsObject();\n      }\n    }\n\n    return newChild;\n  }\n\n  /**\n   * Replace the whole API with another\n   *\n   * @param {AICC} newAPI\n   */\n  replaceWithAnotherScormAPI(newAPI) {\n    // Data Model\n    this.cmi = newAPI.cmi;\n    this.nav = newAPI.nav;\n  }\n}\n","// @flow\nimport {CMIArray} from './cmi/common';\nimport {ValidationError} from './exceptions';\nimport ErrorCodes from './constants/error_codes';\nimport APIConstants from './constants/api_constants';\nimport {unflatten} from './utilities';\nimport debounce from 'lodash.debounce';\n\nconst global_constants = APIConstants.global;\nconst scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Base API class for AICC, SCORM 1.2, and SCORM 2004. Should be considered\n * abstract, and never initialized on it's own.\n */\nexport default class BaseAPI {\n  #timeout;\n  #error_codes;\n  #settings = {\n    autocommit: false,\n    autocommitSeconds: 10,\n    asyncCommit: false,\n    sendBeaconCommit: false,\n    lmsCommitUrl: false,\n    dataCommitFormat: 'json', // valid formats are 'json' or 'flattened', 'params'\n    commitRequestDataType: 'application/json;charset=UTF-8',\n    autoProgress: false,\n    logLevel: global_constants.LOG_LEVEL_ERROR,\n    selfReportSessionTime: false,\n    alwaysSendTotalTime: false,\n    strict_errors: true,\n    xhrHeaders: {},\n    xhrWithCredentials: false,\n    responseHandler: function(xhr) {\n      let result;\n      if (typeof xhr !== 'undefined') {\n        result = JSON.parse(xhr.responseText);\n        if (result === null || !{}.hasOwnProperty.call(result, 'result')) {\n          result = {};\n          if (xhr.status === 200) {\n            result.result = global_constants.SCORM_TRUE;\n            result.errorCode = 0;\n          } else {\n            result.result = global_constants.SCORM_FALSE;\n            result.errorCode = 101;\n          }\n        }\n      }\n      return result;\n    },\n    requestHandler: function(commitObject) {\n      return commitObject;\n    },\n    onLogMessage: function(messageLevel, logMessage) {\n      switch (messageLevel) {\n        case global_constants.LOG_LEVEL_ERROR:\n          console.error(logMessage);\n          break;\n        case global_constants.LOG_LEVEL_WARNING:\n          console.warn(logMessage);\n          break;\n        case global_constants.LOG_LEVEL_INFO:\n          console.info(logMessage);\n          break;\n        case global_constants.LOG_LEVEL_DEBUG:\n          if (console.debug) {\n            console.debug(logMessage);\n          } else {\n            console.log(logMessage);\n          }\n          break;\n      }\n    },\n  };\n  cmi;\n  startingData: {};\n\n  /**\n   * Constructor for Base API class. Sets some shared API fields, as well as\n   * sets up options for the API.\n   * @param {object} error_codes\n   * @param {object} settings\n   */\n  constructor(error_codes, settings) {\n    if (new.target === BaseAPI) {\n      throw new TypeError('Cannot construct BaseAPI instances directly');\n    }\n    this.currentState = global_constants.STATE_NOT_INITIALIZED;\n    this.lastErrorCode = 0;\n    this.listenerArray = [];\n\n    this.#timeout = null;\n    this.#error_codes = error_codes;\n\n    this.settings = settings;\n    this.apiLogLevel = this.settings.logLevel;\n    this.selfReportSessionTime = this.settings.selfReportSessionTime;\n  }\n\n  /**\n   * Initialize the API\n   * @param {string} callbackName\n   * @param {string} initializeMessage\n   * @param {string} terminationMessage\n   * @return {string}\n   */\n  initialize(\n      callbackName: String,\n      initializeMessage?: String,\n      terminationMessage?: String) {\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.isInitialized()) {\n      this.throwSCORMError(this.#error_codes.INITIALIZED, initializeMessage);\n    } else if (this.isTerminated()) {\n      this.throwSCORMError(this.#error_codes.TERMINATED, terminationMessage);\n    } else {\n      if (this.selfReportSessionTime) {\n        this.cmi.setStartTime();\n      }\n\n      this.currentState = global_constants.STATE_INITIALIZED;\n      this.lastErrorCode = 0;\n      returnValue = global_constants.SCORM_TRUE;\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Getter for #error_codes\n   * @return {object}\n   */\n  get error_codes() {\n    return this.#error_codes;\n  }\n\n  /**\n   * Getter for #settings\n   * @return {object}\n   */\n  get settings() {\n    return this.#settings;\n  }\n\n  /**\n   * Setter for #settings\n   * @param {object} settings\n   */\n  set settings(settings: Object) {\n    this.#settings = {...this.#settings, ...settings};\n  }\n\n  /**\n   * Terminates the current run of the API\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @return {string}\n   */\n  terminate(\n      callbackName: String,\n      checkTerminated: boolean) {\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.checkState(checkTerminated,\n        this.#error_codes.TERMINATION_BEFORE_INIT,\n        this.#error_codes.MULTIPLE_TERMINATION)) {\n      this.currentState = global_constants.STATE_TERMINATED;\n\n      const result = this.storeData(true);\n      if (!this.settings.sendBeaconCommit && !this.settings.asyncCommit &&\n        typeof result.errorCode !== 'undefined' && result.errorCode > 0) {\n        this.throwSCORMError(result.errorCode);\n      }\n      returnValue = (typeof result !== 'undefined' && result.result) ?\n        result.result : global_constants.SCORM_FALSE;\n\n      if (checkTerminated) this.lastErrorCode = 0;\n\n      returnValue = global_constants.SCORM_TRUE;\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Get the value of the CMIElement.\n   *\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  getValue(\n      callbackName: String,\n      checkTerminated: boolean,\n      CMIElement: String) {\n    let returnValue;\n\n    if (this.checkState(checkTerminated,\n        this.#error_codes.RETRIEVE_BEFORE_INIT,\n        this.#error_codes.RETRIEVE_AFTER_TERM)) {\n      if (checkTerminated) this.lastErrorCode = 0;\n      try {\n        returnValue = this.getCMIValue(CMIElement);\n      } catch (e) {\n        if (e instanceof ValidationError) {\n          this.lastErrorCode = e.errorCode;\n          returnValue = global_constants.SCORM_FALSE;\n        } else {\n          if (e.message) {\n            console.error(e.message);\n          } else {\n            console.error(e);\n          }\n          this.throwSCORMError(this.#error_codes.GENERAL);\n        }\n      }\n      this.processListeners(callbackName, CMIElement);\n    }\n\n    this.apiLog(callbackName, CMIElement, ': returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Sets the value of the CMIElement.\n   *\n   * @param {string} callbackName\n   * @param {string} commitCallback\n   * @param {boolean} checkTerminated\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  setValue(\n      callbackName: String,\n      commitCallback: String,\n      checkTerminated: boolean,\n      CMIElement,\n      value) {\n    if (value !== undefined) {\n      value = String(value);\n    }\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.checkState(checkTerminated, this.#error_codes.STORE_BEFORE_INIT,\n        this.#error_codes.STORE_AFTER_TERM)) {\n      if (checkTerminated) this.lastErrorCode = 0;\n      try {\n        returnValue = this.setCMIValue(CMIElement, value);\n      } catch (e) {\n        if (e instanceof ValidationError) {\n          this.lastErrorCode = e.errorCode;\n          returnValue = global_constants.SCORM_FALSE;\n        } else {\n          if (e.message) {\n            console.error(e.message);\n          } else {\n            console.error(e);\n          }\n          this.throwSCORMError(this.#error_codes.GENERAL);\n        }\n      }\n      this.processListeners(callbackName, CMIElement, value);\n    }\n\n    if (returnValue === undefined) {\n      returnValue = global_constants.SCORM_FALSE;\n    }\n\n    // If we didn't have any errors while setting the data, go ahead and\n    // schedule a commit, if autocommit is turned on\n    if (String(this.lastErrorCode) === '0') {\n      if (this.settings.autocommit && !this.#timeout) {\n        this.scheduleCommit(this.settings.autocommitSeconds * 1000, commitCallback);\n      }\n    }\n\n    this.apiLog(callbackName, CMIElement,\n        ': ' + value + ': result: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Orders LMS to store all content parameters\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @return {string}\n   */\n  commit(\n      callbackName: String,\n      checkTerminated: boolean) {\n    this.clearScheduledCommit();\n\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.checkState(checkTerminated, this.#error_codes.COMMIT_BEFORE_INIT,\n        this.#error_codes.COMMIT_AFTER_TERM)) {\n      const result = this.storeData(false);\n      if (!this.settings.sendBeaconCommit && !this.settings.asyncCommit &&\n        result.errorCode && result.errorCode > 0) {\n        this.throwSCORMError(result.errorCode);\n      }\n      returnValue = (typeof result !== 'undefined' && result.result) ?\n        result.result : global_constants.SCORM_FALSE;\n\n      this.apiLog(callbackName, 'HttpRequest', ' Result: ' + returnValue,\n          global_constants.LOG_LEVEL_DEBUG);\n\n      if (checkTerminated) this.lastErrorCode = 0;\n\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns last error code\n   * @param {string} callbackName\n   * @return {string}\n   */\n  getLastError(callbackName: String) {\n    const returnValue = String(this.lastErrorCode);\n\n    this.processListeners(callbackName);\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns the errorNumber error description\n   *\n   * @param {string} callbackName\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  getErrorString(callbackName: String, CMIErrorCode) {\n    let returnValue = '';\n\n    if (CMIErrorCode !== null && CMIErrorCode !== '') {\n      returnValue = this.getLmsErrorMessageDetails(CMIErrorCode);\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns a comprehensive description of the errorNumber error.\n   *\n   * @param {string} callbackName\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  getDiagnostic(callbackName: String, CMIErrorCode) {\n    let returnValue = '';\n\n    if (CMIErrorCode !== null && CMIErrorCode !== '') {\n      returnValue = this.getLmsErrorMessageDetails(CMIErrorCode, true);\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Checks the LMS state and ensures it has been initialized.\n   *\n   * @param {boolean} checkTerminated\n   * @param {number} beforeInitError\n   * @param {number} afterTermError\n   * @return {boolean}\n   */\n  checkState(\n      checkTerminated: boolean,\n      beforeInitError: number,\n      afterTermError?: number) {\n    if (this.isNotInitialized()) {\n      this.throwSCORMError(beforeInitError);\n      return false;\n    } else if (checkTerminated && this.isTerminated()) {\n      this.throwSCORMError(afterTermError);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Logging for all SCORM actions\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {string} logMessage\n   * @param {number}messageLevel\n   */\n  apiLog(\n      functionName: String,\n      CMIElement: String,\n      logMessage: String,\n      messageLevel: number) {\n    logMessage = this.formatMessage(functionName, CMIElement, logMessage);\n\n    if (messageLevel >= this.apiLogLevel) {\n      this.settings.onLogMessage(messageLevel, logMessage);\n    }\n  }\n\n  /**\n   * Formats the SCORM messages for easy reading\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {string} message\n   * @return {string}\n   */\n  formatMessage(functionName: String, CMIElement: String, message: String) {\n    const baseLength = 20;\n    let messageString = '';\n\n    messageString += functionName;\n\n    let fillChars = baseLength - messageString.length;\n\n    for (let i = 0; i < fillChars; i++) {\n      messageString += ' ';\n    }\n\n    messageString += ': ';\n\n    if (CMIElement) {\n      const CMIElementBaseLength = 70;\n\n      messageString += CMIElement;\n\n      fillChars = CMIElementBaseLength - messageString.length;\n\n      for (let j = 0; j < fillChars; j++) {\n        messageString += ' ';\n      }\n    }\n\n    if (message) {\n      messageString += message;\n    }\n\n    return messageString;\n  }\n\n  /**\n   * Checks to see if {str} contains {tester}\n   *\n   * @param {string} str String to check against\n   * @param {string} tester String to check for\n   * @return {boolean}\n   */\n  stringMatches(str: String, tester: String) {\n    return str && tester && str.match(tester);\n  }\n\n  /**\n   * Check to see if the specific object has the given property\n   * @param {*} refObject\n   * @param {string} attribute\n   * @return {boolean}\n   * @private\n   */\n  _checkObjectHasProperty(refObject, attribute: String) {\n    return Object.hasOwnProperty.call(refObject, attribute) ||\n      Object.getOwnPropertyDescriptor(\n          Object.getPrototypeOf(refObject), attribute) ||\n      (attribute in refObject);\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {(string|number)} _errorNumber\n   * @param {boolean} _detail\n   * @return {string}\n   * @abstract\n   */\n  getLmsErrorMessageDetails(_errorNumber, _detail) {\n    throw new Error(\n        'The getLmsErrorMessageDetails method has not been implemented');\n  }\n\n  /**\n   * Gets the value for the specific element.\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {string} _CMIElement\n   * @return {string}\n   * @abstract\n   */\n  getCMIValue(_CMIElement) {\n    throw new Error('The getCMIValue method has not been implemented');\n  }\n\n  /**\n   * Sets the value for the specific element.\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {string} _CMIElement\n   * @param {any} _value\n   * @return {string}\n   * @abstract\n   */\n  setCMIValue(_CMIElement, _value) {\n    throw new Error('The setCMIValue method has not been implemented');\n  }\n\n  /**\n   * Shared API method to set a valid for a given element.\n   *\n   * @param {string} methodName\n   * @param {boolean} scorm2004\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  _commonSetCMIValue(\n      methodName: String, scorm2004: boolean, CMIElement, value) {\n    if (!CMIElement || CMIElement === '') {\n      return global_constants.SCORM_FALSE;\n    }\n\n    const structure = CMIElement.split('.');\n    let refObject = this;\n    let returnValue = global_constants.SCORM_FALSE;\n    let foundFirstIndex = false;\n\n    const invalidErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;\n    const invalidErrorCode = scorm2004 ?\n      this.#error_codes.UNDEFINED_DATA_MODEL :\n      this.#error_codes.GENERAL;\n\n    for (let i = 0; i < structure.length; i++) {\n      const attribute = structure[i];\n\n      if (i === structure.length - 1) {\n        if (scorm2004 && (attribute.substr(0, 8) === '{target=') &&\n          (typeof refObject._isTargetValid == 'function')) {\n          this.throwSCORMError(this.#error_codes.READ_ONLY_ELEMENT);\n        } else if (!this._checkObjectHasProperty(refObject, attribute)) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n        } else {\n          if (this.isInitialized() &&\n            this.stringMatches(CMIElement, '\\\\.correct_responses\\\\.\\\\d+')) {\n            this.validateCorrectResponse(CMIElement, value);\n          }\n\n          if (!scorm2004 || this.lastErrorCode === 0) {\n            refObject[attribute] = value;\n            returnValue = global_constants.SCORM_TRUE;\n          }\n        }\n      } else {\n        refObject = refObject[attribute];\n        if (!refObject) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n          break;\n        }\n\n        if (refObject instanceof CMIArray) {\n          const index = parseInt(structure[i + 1], 10);\n\n          // SCO is trying to set an item on an array\n          if (!isNaN(index)) {\n            const item = refObject.childArray[index];\n\n            if (item) {\n              refObject = item;\n              foundFirstIndex = true;\n            } else {\n              const newChild = this.getChildElement(CMIElement, value,\n                  foundFirstIndex);\n              foundFirstIndex = true;\n\n              if (!newChild) {\n                this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n              } else {\n                if (refObject.initialized) newChild.initialize();\n\n                refObject.childArray.push(newChild);\n                refObject = newChild;\n              }\n            }\n\n            // Have to update i value to skip the array position\n            i++;\n          }\n        }\n      }\n    }\n\n    if (returnValue === global_constants.SCORM_FALSE) {\n      this.apiLog(methodName, null,\n          `There was an error setting the value for: ${CMIElement}, value of: ${value}`,\n          global_constants.LOG_LEVEL_WARNING);\n    }\n\n    return returnValue;\n  }\n\n  /**\n   * Abstract method for validating that a response is correct.\n   *\n   * @param {string} _CMIElement\n   * @param {*} _value\n   */\n  validateCorrectResponse(_CMIElement, _value) {\n    // just a stub method\n  }\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   * APIs that inherit BaseAPI should override this method.\n   *\n   * @param {string} _CMIElement - unused\n   * @param {*} _value - unused\n   * @param {boolean} _foundFirstIndex - unused\n   * @return {*}\n   * @abstract\n   */\n  getChildElement(_CMIElement, _value, _foundFirstIndex) {\n    throw new Error('The getChildElement method has not been implemented');\n  }\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} methodName\n   * @param {boolean} scorm2004\n   * @param {string} CMIElement\n   * @return {*}\n   */\n  _commonGetCMIValue(methodName: String, scorm2004: boolean, CMIElement) {\n    if (!CMIElement || CMIElement === '') {\n      return '';\n    }\n\n    const structure = CMIElement.split('.');\n    let refObject = this;\n    let attribute = null;\n\n    const uninitializedErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) has not been initialized.`;\n    const invalidErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;\n    const invalidErrorCode = scorm2004 ?\n      this.#error_codes.UNDEFINED_DATA_MODEL :\n      this.#error_codes.GENERAL;\n\n    for (let i = 0; i < structure.length; i++) {\n      attribute = structure[i];\n\n      if (!scorm2004) {\n        if (i === structure.length - 1) {\n          if (!this._checkObjectHasProperty(refObject, attribute)) {\n            this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n            return;\n          }\n        }\n      } else {\n        if ((String(attribute).substr(0, 8) === '{target=') &&\n          (typeof refObject._isTargetValid == 'function')) {\n          const target = String(attribute).substr(8, String(attribute).length - 9);\n          return refObject._isTargetValid(target);\n        } else if (!this._checkObjectHasProperty(refObject, attribute)) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n          return;\n        }\n      }\n\n      refObject = refObject[attribute];\n      if (refObject === undefined) {\n        this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n        break;\n      }\n\n      if (refObject instanceof CMIArray) {\n        const index = parseInt(structure[i + 1], 10);\n\n        // SCO is trying to set an item on an array\n        if (!isNaN(index)) {\n          const item = refObject.childArray[index];\n\n          if (item) {\n            refObject = item;\n          } else {\n            this.throwSCORMError(this.#error_codes.VALUE_NOT_INITIALIZED,\n                uninitializedErrorMessage);\n            break;\n          }\n\n          // Have to update i value to skip the array position\n          i++;\n        }\n      }\n    }\n\n    if (refObject === null || refObject === undefined) {\n      if (!scorm2004) {\n        if (attribute === '_children') {\n          this.throwSCORMError(scorm12_error_codes.CHILDREN_ERROR);\n        } else if (attribute === '_count') {\n          this.throwSCORMError(scorm12_error_codes.COUNT_ERROR);\n        }\n      }\n    } else {\n      return refObject;\n    }\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_INITIALIZED\n   *\n   * @return {boolean}\n   */\n  isInitialized() {\n    return this.currentState === global_constants.STATE_INITIALIZED;\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_NOT_INITIALIZED\n   *\n   * @return {boolean}\n   */\n  isNotInitialized() {\n    return this.currentState === global_constants.STATE_NOT_INITIALIZED;\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_TERMINATED\n   *\n   * @return {boolean}\n   */\n  isTerminated() {\n    return this.currentState === global_constants.STATE_TERMINATED;\n  }\n\n  /**\n   * Provides a mechanism for attaching to a specific SCORM event\n   *\n   * @param {string} listenerName\n   * @param {function} callback\n   */\n  on(listenerName: String, callback: function) {\n    if (!callback) return;\n\n    const listenerFunctions = listenerName.split(' ');\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split('.');\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + '.', '');\n      }\n\n      this.listenerArray.push({\n        functionName: functionName,\n        CMIElement: CMIElement,\n        callback: callback,\n      });\n\n      this.apiLog('on', functionName, `Added event listener: ${this.listenerArray.length}`, global_constants.LOG_LEVEL_INFO);\n    }\n  }\n\n  /**\n   * Provides a mechanism for detaching a specific SCORM event listener\n   *\n   * @param {string} listenerName\n   * @param {function} callback\n   */\n  off(listenerName: String, callback: function) {\n    if (!callback) return;\n\n    const listenerFunctions = listenerName.split(' ');\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split('.');\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + '.', '');\n      }\n\n      const removeIndex = this.listenerArray.findIndex((obj) =>\n        obj.functionName === functionName &&\n        obj.CMIElement === CMIElement &&\n        obj.callback === callback,\n      );\n      if (removeIndex !== -1) {\n        this.listenerArray.splice(removeIndex, 1);\n        this.apiLog('off', functionName, `Removed event listener: ${this.listenerArray.length}`, global_constants.LOG_LEVEL_INFO);\n      }\n    }\n  }\n\n  /**\n   * Provides a mechanism for clearing all listeners from a specific SCORM event\n   *\n   * @param {string} listenerName\n   */\n  clear(listenerName: String) {\n    const listenerFunctions = listenerName.split(' ');\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split('.');\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + '.', '');\n      }\n\n      this.listenerArray = this.listenerArray.filter((obj) =>\n        obj.functionName !== functionName &&\n        obj.CMIElement !== CMIElement,\n      );\n    }\n  }\n\n  /**\n   * Processes any 'on' listeners that have been created\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {*} value\n   */\n  processListeners(functionName: String, CMIElement: String, value: any) {\n    this.apiLog(functionName, CMIElement, value);\n    for (let i = 0; i < this.listenerArray.length; i++) {\n      const listener = this.listenerArray[i];\n      const functionsMatch = listener.functionName === functionName;\n      const listenerHasCMIElement = !!listener.CMIElement;\n      let CMIElementsMatch = false;\n      if (CMIElement && listener.CMIElement &&\n        listener.CMIElement.substring(listener.CMIElement.length - 1) ===\n        '*') {\n        CMIElementsMatch = CMIElement.indexOf(listener.CMIElement.substring(0,\n            listener.CMIElement.length - 1)) === 0;\n      } else {\n        CMIElementsMatch = listener.CMIElement === CMIElement;\n      }\n\n      if (functionsMatch && (!listenerHasCMIElement || CMIElementsMatch)) {\n        listener.callback(CMIElement, value);\n      }\n    }\n  }\n\n  /**\n   * Throws a SCORM error\n   *\n   * @param {number} errorNumber\n   * @param {string} message\n   */\n  throwSCORMError(errorNumber: number, message: String) {\n    if (!message) {\n      message = this.getLmsErrorMessageDetails(errorNumber);\n    }\n\n    this.apiLog('throwSCORMError', null, errorNumber + ': ' + message,\n        global_constants.LOG_LEVEL_ERROR);\n\n    this.lastErrorCode = String(errorNumber);\n  }\n\n  /**\n   * Clears the last SCORM error code on success.\n   *\n   * @param {string} success\n   */\n  clearSCORMError(success: String) {\n    if (success !== undefined && success !== global_constants.SCORM_FALSE) {\n      this.lastErrorCode = 0;\n    }\n  }\n\n  /**\n   * Attempts to store the data to the LMS, logs data if no LMS configured\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {boolean} _calculateTotalTime\n   * @return {string}\n   * @abstract\n   */\n  storeData(_calculateTotalTime) {\n    throw new Error(\n        'The storeData method has not been implemented');\n  }\n\n  /**\n   * Load the CMI from a flattened JSON object\n   * @param {object} json\n   * @param {string} CMIElement\n   */\n  loadFromFlattenedJSON(json, CMIElement) {\n    if (!this.isNotInitialized()) {\n      console.error(\n          'loadFromFlattenedJSON can only be called before the call to lmsInitialize.');\n      return;\n    }\n\n    /**\n     * Test match pattern.\n     *\n     * @param {string} a\n     * @param {string} c\n     * @param {RegExp} a_pattern\n     * @return {number}\n     */\n    function testPattern(a, c, a_pattern) {\n      const a_match = a.match(a_pattern);\n\n      let c_match;\n      if (a_match !== null && (c_match = c.match(a_pattern)) !== null) {\n        const a_num = Number(a_match[2]);\n        const c_num = Number(c_match[2]);\n        if (a_num === c_num) {\n          if (a_match[3] === 'id') {\n            return -1;\n          } else if (a_match[3] === 'type') {\n            if (c_match[3] === 'id') {\n              return 1;\n            } else {\n              return -1;\n            }\n          } else {\n            return 1;\n          }\n        }\n        return a_num - c_num;\n      }\n\n      return null;\n    }\n\n    const int_pattern = /^(cmi\\.interactions\\.)(\\d+)\\.(.*)$/;\n    const obj_pattern = /^(cmi\\.objectives\\.)(\\d+)\\.(.*)$/;\n\n    const result = Object.keys(json).map(function(key) {\n      return [String(key), json[key]];\n    });\n\n    // CMI interactions need to have id and type loaded before any other fields\n    result.sort(function([a, b], [c, d]) {\n      let test;\n      if ((test = testPattern(a, c, int_pattern)) !== null) {\n        return test;\n      }\n      if ((test = testPattern(a, c, obj_pattern)) !== null) {\n        return test;\n      }\n\n      if (a < c) {\n        return -1;\n      }\n      if (a > c) {\n        return 1;\n      }\n      return 0;\n    });\n\n    let obj;\n    result.forEach((element) => {\n      obj = {};\n      obj[element[0]] = element[1];\n      this.loadFromJSON(unflatten(obj), CMIElement);\n    });\n  }\n\n  /**\n   * Loads CMI data from a JSON object.\n   *\n   * @param {object} json\n   * @param {string} CMIElement\n   */\n  loadFromJSON(json, CMIElement) {\n    if (!this.isNotInitialized()) {\n      console.error(\n          'loadFromJSON can only be called before the call to lmsInitialize.');\n      return;\n    }\n\n    CMIElement = CMIElement !== undefined ? CMIElement : 'cmi';\n\n    this.startingData = json;\n\n    // could this be refactored down to flatten(json) then setCMIValue on each?\n    for (const key in json) {\n      if ({}.hasOwnProperty.call(json, key) && json[key]) {\n        const currentCMIElement = (CMIElement ? CMIElement + '.' : '') + key;\n        const value = json[key];\n\n        if (value['childArray']) {\n          for (let i = 0; i < value['childArray'].length; i++) {\n            this.loadFromJSON(value['childArray'][i],\n                currentCMIElement + '.' + i);\n          }\n        } else if (value.constructor === Object) {\n          this.loadFromJSON(value, currentCMIElement);\n        } else {\n          this.setCMIValue(currentCMIElement, value);\n        }\n      }\n    }\n  }\n\n  /**\n   * Render the CMI object to JSON for sending to an LMS.\n   *\n   * @return {string}\n   */\n  renderCMIToJSONString() {\n    const cmi = this.cmi;\n    // Do we want/need to return fields that have no set value?\n    // return JSON.stringify({ cmi }, (k, v) => v === undefined ? null : v, 2);\n    return JSON.stringify({cmi});\n  }\n\n  /**\n   * Returns a JS object representing the current cmi\n   * @return {object}\n   */\n  renderCMIToJSONObject() {\n    // Do we want/need to return fields that have no set value?\n    // return JSON.stringify({ cmi }, (k, v) => v === undefined ? null : v, 2);\n    return JSON.parse(this.renderCMIToJSONString());\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {boolean} _terminateCommit\n   * @return {*}\n   * @abstract\n   */\n  renderCommitCMI(_terminateCommit) {\n    throw new Error(\n        'The storeData method has not been implemented');\n  }\n\n  /**\n   * Send the request to the LMS\n   * @param {string} url\n   * @param {object|Array} params\n   * @param {boolean} immediate\n   * @return {object}\n   */\n  processHttpRequest(url: String, params, immediate = false) {\n    const api = this;\n    const process = function(url, params, settings, error_codes) {\n      const genericError = {\n        'result': global_constants.SCORM_FALSE,\n        'errorCode': error_codes.GENERAL,\n      };\n\n      let result;\n      if (!settings.sendBeaconCommit) {\n        const httpReq = new XMLHttpRequest();\n        httpReq.open('POST', url, settings.asyncCommit);\n\n        if (Object.keys(settings.xhrHeaders).length) {\n          Object.keys(settings.xhrHeaders).forEach((header) => {\n            httpReq.setRequestHeader(header, settings.xhrHeaders[header]);\n          });\n        }\n\n        httpReq.withCredentials = settings.xhrWithCredentials;\n\n        if (settings.asyncCommit) {\n          httpReq.onload = function(e) {\n            if (typeof settings.responseHandler === 'function') {\n              result = settings.responseHandler(httpReq);\n            } else {\n              result = JSON.parse(httpReq.responseText);\n            }\n          };\n        }\n        try {\n          params = settings.requestHandler(params);\n          if (params instanceof Array) {\n            httpReq.setRequestHeader('Content-Type',\n                'application/x-www-form-urlencoded');\n            httpReq.send(params.join('&'));\n          } else {\n            httpReq.setRequestHeader('Content-Type',\n                settings.commitRequestDataType);\n            httpReq.send(JSON.stringify(params));\n          }\n\n          if (!settings.asyncCommit) {\n            if (typeof settings.responseHandler === 'function') {\n              result = settings.responseHandler(httpReq);\n            } else {\n              result = JSON.parse(httpReq.responseText);\n            }\n          } else {\n            result = {};\n            result.result = global_constants.SCORM_TRUE;\n            result.errorCode = 0;\n            api.processListeners('CommitSuccess');\n            return result;\n          }\n        } catch (e) {\n          console.error(e);\n          api.processListeners('CommitError');\n          return genericError;\n        }\n      } else {\n        try {\n          params = settings.requestHandler(params);\n          fetch(url, {\n            method: 'POST',\n            body: params instanceof Array ? params.join('&') : JSON.stringify(params),\n            headers: {\n              ...settings.xhrHeaders,\n              'Content-Type': settings.commitRequestDataType,\n            },\n            credentials: settings.xhrWithCredentials ? 'include' : undefined,\n            keepalive: true,\n          });\n          result = {};\n          result.result = global_constants.SCORM_TRUE;\n          result.errorCode = 0;\n        } catch (e) {\n          console.error(e);\n          api.processListeners('CommitError');\n          return genericError;\n        }\n      }\n\n      if (typeof result === 'undefined') {\n        api.processListeners('CommitError');\n        return genericError;\n      }\n\n      if (result.result === true ||\n        result.result === global_constants.SCORM_TRUE) {\n        api.processListeners('CommitSuccess');\n      } else {\n        api.processListeners('CommitError');\n      }\n\n      return result;\n    };\n\n    if (typeof debounce !== 'undefined') {\n      const debounced = debounce(process, 500);\n      debounced(url, params, this.settings, this.error_codes);\n\n      // if we're terminating, go ahead and commit immediately\n      if (immediate) {\n        debounced.flush();\n      }\n\n      return {\n        result: global_constants.SCORM_TRUE,\n        errorCode: 0,\n      };\n    } else {\n      return process(url, params, this.settings, this.error_codes);\n    }\n  }\n\n  /**\n   * Throws a SCORM error\n   *\n   * @param {number} when - the number of milliseconds to wait before committing\n   * @param {string} callback - the name of the commit event callback\n   */\n  scheduleCommit(when: number, callback: string) {\n    this.#timeout = new ScheduledCommit(this, when, callback);\n    this.apiLog('scheduleCommit', '', 'scheduled',\n        global_constants.LOG_LEVEL_DEBUG);\n  }\n\n  /**\n   * Clears and cancels any currently scheduled commits\n   */\n  clearScheduledCommit() {\n    if (this.#timeout) {\n      this.#timeout.cancel();\n      this.#timeout = null;\n      this.apiLog('clearScheduledCommit', '', 'cleared',\n          global_constants.LOG_LEVEL_DEBUG);\n    }\n  }\n}\n\n/**\n * Private class that wraps a timeout call to the commit() function\n */\nclass ScheduledCommit {\n  #API;\n  #cancelled = false;\n  #timeout;\n  #callback;\n\n  /**\n   * Constructor for ScheduledCommit\n   * @param {BaseAPI} API\n   * @param {number} when\n   * @param {string} callback\n   */\n  constructor(API: any, when: number, callback: string) {\n    this.#API = API;\n    this.#timeout = setTimeout(this.wrapper.bind(this), when);\n    this.#callback = callback;\n  }\n\n  /**\n   * Cancel any currently scheduled commit\n   */\n  cancel() {\n    this.#cancelled = true;\n    if (this.#timeout) {\n      clearTimeout(this.#timeout);\n    }\n  }\n\n  /**\n   * Wrap the API commit call to check if the call has already been cancelled\n   */\n  wrapper() {\n    if (!this.#cancelled) {\n      this.#API.commit(this.#callback);\n    }\n  }\n}\n","// @flow\nimport BaseAPI from './BaseAPI';\nimport {\n  CMI,\n  CMIInteractionsCorrectResponsesObject,\n  CMIInteractionsObject,\n  CMIInteractionsObjectivesObject,\n  CMIObjectivesObject, NAV,\n} from './cmi/scorm12_cmi';\nimport * as Utilities from './utilities';\nimport APIConstants from './constants/api_constants';\nimport ErrorCodes from './constants/error_codes';\n\nconst scorm12_constants = APIConstants.scorm12;\nconst global_constants = APIConstants.global;\nconst scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * API class for SCORM 1.2\n */\nexport default class Scorm12API extends BaseAPI {\n  /**\n   * Constructor for SCORM 1.2 API\n   * @param {object} settings\n   */\n  constructor(settings: {}) {\n    const finalSettings = {\n      ...{\n        mastery_override: false,\n      }, ...settings,\n    };\n\n    super(scorm12_error_codes, finalSettings);\n\n    this.cmi = new CMI();\n    this.nav = new NAV();\n\n    // Rename functions to match 1.2 Spec and expose to modules\n    this.LMSInitialize = this.lmsInitialize;\n    this.LMSFinish = this.lmsFinish;\n    this.LMSGetValue = this.lmsGetValue;\n    this.LMSSetValue = this.lmsSetValue;\n    this.LMSCommit = this.lmsCommit;\n    this.LMSGetLastError = this.lmsGetLastError;\n    this.LMSGetErrorString = this.lmsGetErrorString;\n    this.LMSGetDiagnostic = this.lmsGetDiagnostic;\n  }\n\n  /**\n   * lmsInitialize function from SCORM 1.2 Spec\n   *\n   * @return {string} bool\n   */\n  lmsInitialize() {\n    this.cmi.initialize();\n    return this.initialize('LMSInitialize', 'LMS was already initialized!',\n        'LMS is already finished!');\n  }\n\n  /**\n   * LMSFinish function from SCORM 1.2 Spec\n   *\n   * @return {string} bool\n   */\n  lmsFinish() {\n    const result = this.terminate('LMSFinish', true);\n\n    if (result === global_constants.SCORM_TRUE) {\n      if (this.nav.event !== '') {\n        if (this.nav.event === 'continue') {\n          this.processListeners('SequenceNext');\n        } else {\n          this.processListeners('SequencePrevious');\n        }\n      } else if (this.settings.autoProgress) {\n        this.processListeners('SequenceNext');\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * LMSGetValue function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  lmsGetValue(CMIElement) {\n    return this.getValue('LMSGetValue', false, CMIElement);\n  }\n\n  /**\n   * LMSSetValue function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  lmsSetValue(CMIElement, value) {\n    return this.setValue('LMSSetValue', 'LMSCommit', false, CMIElement, value);\n  }\n\n  /**\n   * LMSCommit function from SCORM 1.2 Spec\n   *\n   * @return {string} bool\n   */\n  lmsCommit() {\n    return this.commit('LMSCommit', false);\n  }\n\n  /**\n   * LMSGetLastError function from SCORM 1.2 Spec\n   *\n   * @return {string}\n   */\n  lmsGetLastError() {\n    return this.getLastError('LMSGetLastError');\n  }\n\n  /**\n   * LMSGetErrorString function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetErrorString(CMIErrorCode) {\n    return this.getErrorString('LMSGetErrorString', CMIErrorCode);\n  }\n\n  /**\n   * LMSGetDiagnostic function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetDiagnostic(CMIErrorCode) {\n    return this.getDiagnostic('LMSGetDiagnostic', CMIErrorCode);\n  }\n\n  /**\n   * Sets a value on the CMI Object\n   *\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  setCMIValue(CMIElement, value) {\n    return this._commonSetCMIValue('LMSSetValue', false, CMIElement, value);\n  }\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} CMIElement\n   * @return {*}\n   */\n  getCMIValue(CMIElement) {\n    return this._commonGetCMIValue('getCMIValue', false, CMIElement);\n  }\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   *\n   * @param {string} CMIElement\n   * @param {*} value\n   * @param {boolean} foundFirstIndex\n   * @return {object}\n   */\n  getChildElement(CMIElement, value, foundFirstIndex) {\n    let newChild;\n\n    if (this.stringMatches(CMIElement, 'cmi\\\\.objectives\\\\.\\\\d+')) {\n      newChild = new CMIObjectivesObject();\n    } else if (foundFirstIndex && this.stringMatches(CMIElement,\n        'cmi\\\\.interactions\\\\.\\\\d+\\\\.correct_responses\\\\.\\\\d+')) {\n      newChild = new CMIInteractionsCorrectResponsesObject();\n    } else if (foundFirstIndex && this.stringMatches(CMIElement,\n        'cmi\\\\.interactions\\\\.\\\\d+\\\\.objectives\\\\.\\\\d+')) {\n      newChild = new CMIInteractionsObjectivesObject();\n    } else if (!foundFirstIndex &&\n        this.stringMatches(CMIElement, 'cmi\\\\.interactions\\\\.\\\\d+')) {\n      newChild = new CMIInteractionsObject();\n    }\n\n    return newChild;\n  }\n\n  /**\n   * Validates Correct Response values\n   *\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {boolean}\n   */\n  validateCorrectResponse(CMIElement, value) {\n    return true;\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber.\n   *\n   * @param {*} errorNumber\n   * @param {boolean} detail\n   * @return {string}\n   */\n  getLmsErrorMessageDetails(errorNumber, detail) {\n    let basicMessage = 'No Error';\n    let detailMessage = 'No Error';\n\n    // Set error number to string since inconsistent from modules if string or number\n    errorNumber = String(errorNumber);\n    if (scorm12_constants.error_descriptions[errorNumber]) {\n      basicMessage = scorm12_constants.error_descriptions[errorNumber].basicMessage;\n      detailMessage = scorm12_constants.error_descriptions[errorNumber].detailMessage;\n    }\n\n    return detail ? detailMessage : basicMessage;\n  }\n\n  /**\n   * Replace the whole API with another\n   *\n   * @param {Scorm12API} newAPI\n   */\n  replaceWithAnotherScormAPI(newAPI) {\n    // Data Model\n    this.cmi = newAPI.cmi;\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   *\n   * @param {boolean} terminateCommit\n   * @return {object|Array}\n   */\n  renderCommitCMI(terminateCommit: boolean) {\n    const cmiExport = this.renderCMIToJSONObject();\n\n    if (terminateCommit) {\n      cmiExport.cmi.core.total_time = this.cmi.getCurrentTotalTime();\n    }\n\n    const result = [];\n    const flattened = Utilities.flatten(cmiExport);\n    switch (this.settings.dataCommitFormat) {\n      case 'flattened':\n        return Utilities.flatten(cmiExport);\n      case 'params':\n        for (const item in flattened) {\n          if ({}.hasOwnProperty.call(flattened, item)) {\n            result.push(`${item}=${flattened[item]}`);\n          }\n        }\n        return result;\n      case 'json':\n      default:\n        return cmiExport;\n    }\n  }\n\n  /**\n   * Attempts to store the data to the LMS\n   *\n   * @param {boolean} terminateCommit\n   * @return {string}\n   */\n  storeData(terminateCommit: boolean) {\n    if (terminateCommit) {\n      const originalStatus = this.cmi.core.lesson_status;\n      if (originalStatus === 'not attempted') {\n        this.cmi.core.lesson_status = 'completed';\n      }\n\n      if (this.cmi.core.lesson_mode === 'normal') {\n        if (this.cmi.core.credit === 'credit') {\n          if (this.settings.mastery_override &&\n              this.cmi.student_data.mastery_score !== '' &&\n              this.cmi.core.score.raw !== '') {\n            if (parseFloat(this.cmi.core.score.raw) >= parseFloat(this.cmi.student_data.mastery_score)) {\n              this.cmi.core.lesson_status = 'passed';\n            } else {\n              this.cmi.core.lesson_status = 'failed';\n            }\n          }\n        }\n      } else if (this.cmi.core.lesson_mode === 'browse') {\n        if ((this.startingData?.cmi?.core?.lesson_status || '') === '' && originalStatus === 'not attempted') {\n          this.cmi.core.lesson_status = 'browsed';\n        }\n      }\n    }\n\n    const commitObject = this.renderCommitCMI(terminateCommit ||\n        this.settings.alwaysSendTotalTime);\n\n    if (this.apiLogLevel === global_constants.LOG_LEVEL_DEBUG) {\n      console.debug('Commit (terminated: ' + (terminateCommit ? 'yes' : 'no') + '): ');\n      console.debug(commitObject);\n    }\n    if (this.settings.lmsCommitUrl) {\n      return this.processHttpRequest(this.settings.lmsCommitUrl, commitObject, terminateCommit);\n    } else {\n      return global_constants.SCORM_TRUE;\n    }\n  }\n}\n","// @flow\nimport BaseAPI from './BaseAPI';\nimport {\n  ADL,\n  CMI,\n  CMICommentsObject,\n  CMIInteractionsCorrectResponsesObject,\n  CMIInteractionsObject,\n  CMIInteractionsObjectivesObject,\n  CMIObjectivesObject,\n} from './cmi/scorm2004_cmi';\nimport * as Utilities from './utilities';\nimport APIConstants from './constants/api_constants';\nimport ErrorCodes from './constants/error_codes';\nimport Responses from './constants/response_constants';\nimport ValidLanguages from './constants/language_constants';\nimport Regex from './constants/regex';\n\nconst scorm2004_constants = APIConstants.scorm2004;\nconst global_constants = APIConstants.global;\nconst scorm2004_error_codes = ErrorCodes.scorm2004;\nconst correct_responses = Responses.correct;\nconst scorm2004_regex = Regex.scorm2004;\n\n/**\n * API class for SCORM 2004\n */\nexport default class Scorm2004API extends BaseAPI {\n  #version: '1.0';\n\n  /**\n   * Constructor for SCORM 2004 API\n   * @param {object} settings\n   */\n  constructor(settings: {}) {\n    const finalSettings = {\n      ...{\n        mastery_override: false,\n      }, ...settings,\n    };\n\n    super(scorm2004_error_codes, finalSettings);\n\n    this.cmi = new CMI();\n    this.adl = new ADL();\n\n    // Rename functions to match 2004 Spec and expose to modules\n    this.Initialize = this.lmsInitialize;\n    this.Terminate = this.lmsTerminate;\n    this.GetValue = this.lmsGetValue;\n    this.SetValue = this.lmsSetValue;\n    this.Commit = this.lmsCommit;\n    this.GetLastError = this.lmsGetLastError;\n    this.GetErrorString = this.lmsGetErrorString;\n    this.GetDiagnostic = this.lmsGetDiagnostic;\n  }\n\n  /**\n   * Getter for #version\n   * @return {string}\n   */\n  get version() {\n    return this.#version;\n  }\n\n  /**\n   * @return {string} bool\n   */\n  lmsInitialize() {\n    this.cmi.initialize();\n    return this.initialize('Initialize');\n  }\n\n  /**\n   * @return {string} bool\n   */\n  lmsTerminate() {\n    const result = this.terminate('Terminate', true);\n\n    if (result === global_constants.SCORM_TRUE) {\n      if (this.adl.nav.request !== '_none_') {\n        switch (this.adl.nav.request) {\n          case 'continue':\n            this.processListeners('SequenceNext');\n            break;\n          case 'previous':\n            this.processListeners('SequencePrevious');\n            break;\n          case 'choice':\n            this.processListeners('SequenceChoice');\n            break;\n          case 'exit':\n            this.processListeners('SequenceExit');\n            break;\n          case 'exitAll':\n            this.processListeners('SequenceExitAll');\n            break;\n          case 'abandon':\n            this.processListeners('SequenceAbandon');\n            break;\n          case 'abandonAll':\n            this.processListeners('SequenceAbandonAll');\n            break;\n        }\n      } else if (this.settings.autoProgress) {\n        this.processListeners('SequenceNext');\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  lmsGetValue(CMIElement) {\n    return this.getValue('GetValue', true, CMIElement);\n  }\n\n  /**\n   * @param {string} CMIElement\n   * @param {any} value\n   * @return {string}\n   */\n  lmsSetValue(CMIElement, value) {\n    return this.setValue('SetValue', 'Commit', true, CMIElement, value);\n  }\n\n  /**\n   * Orders LMS to store all content parameters\n   *\n   * @return {string} bool\n   */\n  lmsCommit() {\n    return this.commit('Commit');\n  }\n\n  /**\n   * Returns last error code\n   *\n   * @return {string}\n   */\n  lmsGetLastError() {\n    return this.getLastError('GetLastError');\n  }\n\n  /**\n   * Returns the errorNumber error description\n   *\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetErrorString(CMIErrorCode) {\n    return this.getErrorString('GetErrorString', CMIErrorCode);\n  }\n\n  /**\n   * Returns a comprehensive description of the errorNumber error.\n   *\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetDiagnostic(CMIErrorCode) {\n    return this.getDiagnostic('GetDiagnostic', CMIErrorCode);\n  }\n\n  /**\n   * Sets a value on the CMI Object\n   *\n   * @param {string} CMIElement\n   * @param {any} value\n   * @return {string}\n   */\n  setCMIValue(CMIElement, value) {\n    return this._commonSetCMIValue('SetValue', true, CMIElement, value);\n  }\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   *\n   * @param {string} CMIElement\n   * @param {any} value\n   * @param {boolean} foundFirstIndex\n   * @return {any}\n   */\n  getChildElement(CMIElement, value, foundFirstIndex) {\n    let newChild;\n\n    if (this.stringMatches(CMIElement, 'cmi\\\\.objectives\\\\.\\\\d+')) {\n      newChild = new CMIObjectivesObject();\n    } else if (foundFirstIndex && this.stringMatches(CMIElement,\n        'cmi\\\\.interactions\\\\.\\\\d+\\\\.correct_responses\\\\.\\\\d+')) {\n      const parts = CMIElement.split('.');\n      const index = Number(parts[2]);\n      const interaction = this.cmi.interactions.childArray[index];\n      if (this.isInitialized()) {\n        if (!interaction.type) {\n          this.throwSCORMError(\n              scorm2004_error_codes.DEPENDENCY_NOT_ESTABLISHED);\n        } else {\n          this.checkDuplicateChoiceResponse(interaction, value);\n\n          const response_type = correct_responses[interaction.type];\n          if (response_type) {\n            this.checkValidResponseType(response_type, value, interaction.type);\n          } else {\n            this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE,\n                'Incorrect Response Type: ' + interaction.type);\n          }\n        }\n      }\n      if (this.lastErrorCode === 0) {\n        newChild = new CMIInteractionsCorrectResponsesObject();\n      }\n    } else if (foundFirstIndex && this.stringMatches(CMIElement,\n        'cmi\\\\.interactions\\\\.\\\\d+\\\\.objectives\\\\.\\\\d+')) {\n      newChild = new CMIInteractionsObjectivesObject();\n    } else if (!foundFirstIndex &&\n        this.stringMatches(CMIElement, 'cmi\\\\.interactions\\\\.\\\\d+')) {\n      newChild = new CMIInteractionsObject();\n    } else if (this.stringMatches(CMIElement,\n        'cmi\\\\.comments_from_learner\\\\.\\\\d+')) {\n      newChild = new CMICommentsObject();\n    } else if (this.stringMatches(CMIElement,\n        'cmi\\\\.comments_from_lms\\\\.\\\\d+')) {\n      newChild = new CMICommentsObject(true);\n    }\n\n    return newChild;\n  }\n\n  /**\n   * Checks for valid response types\n   * @param {object} response_type\n   * @param {any} value\n   * @param {string} interaction_type\n   */\n  checkValidResponseType(response_type, value, interaction_type) {\n    let nodes = [];\n    if (response_type?.delimiter) {\n      nodes = String(value).split(response_type.delimiter);\n    } else {\n      nodes[0] = value;\n    }\n\n    if (nodes.length > 0 && nodes.length <= response_type.max) {\n      this.checkCorrectResponseValue(interaction_type, nodes, value);\n    } else if (nodes.length > response_type.max) {\n      this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE,\n          'Data Model Element Pattern Too Long');\n    }\n  }\n\n  /**\n   * Checks for duplicate 'choice' responses.\n   * @param {CMIInteractionsObject} interaction\n   * @param {any} value\n   */\n  checkDuplicateChoiceResponse(interaction, value) {\n    const interaction_count = interaction.correct_responses._count;\n    if (interaction.type === 'choice') {\n      for (let i = 0; i < interaction_count && this.lastErrorCode ===\n      0; i++) {\n        const response = interaction.correct_responses.childArray[i];\n        if (response.pattern === value) {\n          this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE);\n        }\n      }\n    }\n  }\n\n  /**\n   * Validate correct response.\n   * @param {string} CMIElement\n   * @param {*} value\n   */\n  validateCorrectResponse(CMIElement, value) {\n    const parts = CMIElement.split('.');\n    const index = Number(parts[2]);\n    const pattern_index = Number(parts[4]);\n    const interaction = this.cmi.interactions.childArray[index];\n\n    const interaction_count = interaction.correct_responses._count;\n    this.checkDuplicateChoiceResponse(interaction, value);\n\n    const response_type = correct_responses[interaction.type];\n    if (typeof response_type.limit === 'undefined' || interaction_count <=\n        response_type.limit) {\n      this.checkValidResponseType(response_type, value, interaction.type);\n\n      if (this.lastErrorCode === 0 &&\n          (!response_type.duplicate ||\n              !this.checkDuplicatedPattern(interaction.correct_responses,\n                  pattern_index, value)) ||\n          (this.lastErrorCode === 0 && value === '')) {\n        // do nothing, we want the inverse\n      } else {\n        if (this.lastErrorCode === 0) {\n          this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE,\n              'Data Model Element Pattern Already Exists');\n        }\n      }\n    } else {\n      this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE,\n          'Data Model Element Collection Limit Reached');\n    }\n  }\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} CMIElement\n   * @return {*}\n   */\n  getCMIValue(CMIElement) {\n    return this._commonGetCMIValue('GetValue', true, CMIElement);\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber.\n   *\n   * @param {(string|number)} errorNumber\n   * @param {boolean} detail\n   * @return {string}\n   */\n  getLmsErrorMessageDetails(errorNumber, detail) {\n    let basicMessage = '';\n    let detailMessage = '';\n\n    // Set error number to string since inconsistent from modules if string or number\n    errorNumber = String(errorNumber);\n    if (scorm2004_constants.error_descriptions[errorNumber]) {\n      basicMessage = scorm2004_constants.error_descriptions[errorNumber].basicMessage;\n      detailMessage = scorm2004_constants.error_descriptions[errorNumber].detailMessage;\n    }\n\n    return detail ? detailMessage : basicMessage;\n  }\n\n  /**\n   * Check to see if a correct_response value has been duplicated\n   * @param {CMIArray} correct_response\n   * @param {number} current_index\n   * @param {*} value\n   * @return {boolean}\n   */\n  checkDuplicatedPattern = (correct_response, current_index, value) => {\n    let found = false;\n    const count = correct_response._count;\n    for (let i = 0; i < count && !found; i++) {\n      if (i !== current_index && correct_response.childArray[i] === value) {\n        found = true;\n      }\n    }\n    return found;\n  };\n\n  /**\n   * Checks for a valid correct_response value\n   * @param {string} interaction_type\n   * @param {Array} nodes\n   * @param {*} value\n   */\n  checkCorrectResponseValue(interaction_type, nodes, value) {\n    const response = correct_responses[interaction_type];\n    const formatRegex = new RegExp(response.format);\n    for (let i = 0; i < nodes.length && this.lastErrorCode === 0; i++) {\n      if (interaction_type.match(\n          '^(fill-in|long-fill-in|matching|performance|sequencing)$')) {\n        nodes[i] = this.removeCorrectResponsePrefixes(nodes[i]);\n      }\n\n      if (response?.delimiter2) {\n        const values = nodes[i].split(response.delimiter2);\n        if (values.length === 2) {\n          const matches = values[0].match(formatRegex);\n          if (!matches) {\n            this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n          } else {\n            if (!values[1].match(new RegExp(response.format2))) {\n              this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n            }\n          }\n        } else {\n          this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n        }\n      } else {\n        const matches = nodes[i].match(formatRegex);\n        if ((!matches && value !== '') ||\n            (!matches && interaction_type === 'true-false')) {\n          this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n        } else {\n          if (interaction_type === 'numeric' && nodes.length > 1) {\n            if (Number(nodes[0]) > Number(nodes[1])) {\n              this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n            }\n          } else {\n            if (nodes[i] !== '' && response.unique) {\n              for (let j = 0; j < i && this.lastErrorCode === 0; j++) {\n                if (nodes[i] === nodes[j]) {\n                  this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Remove prefixes from correct_response\n   * @param {string} node\n   * @return {*}\n   */\n  removeCorrectResponsePrefixes(node) {\n    let seenOrder = false;\n    let seenCase = false;\n    let seenLang = false;\n\n    const prefixRegex = new RegExp(\n        '^({(lang|case_matters|order_matters)=([^}]+)})');\n    let matches = node.match(prefixRegex);\n    let langMatches = null;\n    while (matches) {\n      switch (matches[2]) {\n        case 'lang':\n          langMatches = node.match(scorm2004_regex.CMILangcr);\n          if (langMatches) {\n            const lang = langMatches[3];\n            if (lang !== undefined && lang.length > 0) {\n              if (ValidLanguages[lang.toLowerCase()] === undefined) {\n                this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n              }\n            }\n          }\n          seenLang = true;\n          break;\n        case 'case_matters':\n          if (!seenLang && !seenOrder && !seenCase) {\n            if (matches[3] !== 'true' && matches[3] !== 'false') {\n              this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n            }\n          }\n\n          seenCase = true;\n          break;\n        case 'order_matters':\n          if (!seenCase && !seenLang && !seenOrder) {\n            if (matches[3] !== 'true' && matches[3] !== 'false') {\n              this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n            }\n          }\n\n          seenOrder = true;\n          break;\n        default:\n          break;\n      }\n      node = node.substr(matches[1].length);\n      matches = node.match(prefixRegex);\n    }\n\n    return node;\n  }\n\n  /**\n   * Replace the whole API with another\n   * @param {Scorm2004API} newAPI\n   */\n  replaceWithAnotherScormAPI(newAPI) {\n    // Data Model\n    this.cmi = newAPI.cmi;\n    this.adl = newAPI.adl;\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   *\n   * @param {boolean} terminateCommit\n   * @return {object|Array}\n   */\n  renderCommitCMI(terminateCommit: boolean) {\n    const cmiExport = this.renderCMIToJSONObject();\n\n    if (terminateCommit) {\n      cmiExport.cmi.total_time = this.cmi.getCurrentTotalTime();\n    }\n\n    const result = [];\n    const flattened = Utilities.flatten(cmiExport);\n    switch (this.settings.dataCommitFormat) {\n      case 'flattened':\n        return Utilities.flatten(cmiExport);\n      case 'params':\n        for (const item in flattened) {\n          if ({}.hasOwnProperty.call(flattened, item)) {\n            result.push(`${item}=${flattened[item]}`);\n          }\n        }\n        return result;\n      case 'json':\n      default:\n        return cmiExport;\n    }\n  }\n\n  /**\n   * Attempts to store the data to the LMS\n   *\n   * @param {boolean} terminateCommit\n   * @return {string}\n   */\n  storeData(terminateCommit: boolean) {\n    if (terminateCommit) {\n      if (this.cmi.mode === 'normal') {\n        if (this.cmi.credit === 'credit') {\n          if (this.cmi.completion_threshold && this.cmi.progress_measure) {\n            if (this.cmi.progress_measure >= this.cmi.completion_threshold) {\n              console.debug('Setting Completion Status: Completed');\n              this.cmi.completion_status = 'completed';\n            } else {\n              console.debug('Setting Completion Status: Incomplete');\n              this.cmi.completion_status = 'incomplete';\n            }\n          }\n          if (this.cmi.scaled_passing_score && this.cmi.score.scaled) {\n            if (this.cmi.score.scaled >= this.cmi.scaled_passing_score) {\n              console.debug('Setting Success Status: Passed');\n              this.cmi.success_status = 'passed';\n            } else {\n              console.debug('Setting Success Status: Failed');\n              this.cmi.success_status = 'failed';\n            }\n          }\n        }\n      }\n    }\n\n    let navRequest = false;\n    if (this.adl.nav.request !== (this.startingData?.adl?.nav?.request) &&\n        this.adl.nav.request !== '_none_') {\n      this.adl.nav.request = encodeURIComponent(this.adl.nav.request);\n      navRequest = true;\n    }\n\n    const commitObject = this.renderCommitCMI(terminateCommit ||\n        this.settings.alwaysSendTotalTime);\n\n    if (this.apiLogLevel === global_constants.LOG_LEVEL_DEBUG) {\n      console.debug('Commit (terminated: ' +\n            (terminateCommit ? 'yes' : 'no') + '): ');\n      console.debug(commitObject);\n    }\n    if (this.settings.lmsCommitUrl) {\n      const result = this.processHttpRequest(this.settings.lmsCommitUrl,\n          commitObject, terminateCommit);\n\n      // check if this is a sequencing call, and then call the necessary JS\n      {\n        if (navRequest && result.navRequest !== undefined &&\n            result.navRequest !== '') {\n          Function(`\"use strict\";(() => { ${result.navRequest} })()`)();\n        }\n      }\n      return result;\n    } else {\n      return global_constants.SCORM_TRUE;\n    }\n  }\n}\n","import * as Scorm12CMI from './scorm12_cmi';\nimport {BaseCMI, checkValidFormat, CMIArray, CMIScore} from './common';\nimport APIConstants from '../constants/api_constants';\nimport Regex from '../constants/regex';\nimport ErrorCodes from '../constants/error_codes';\nimport {AICCValidationError} from '../exceptions';\n\nconst aicc_constants = APIConstants.aicc;\nconst aicc_regex = Regex.aicc;\nconst aicc_error_codes = ErrorCodes.scorm12;\n\n/**\n * Helper method for throwing Read Only error\n */\nfunction throwReadOnlyError() {\n  throw new AICCValidationError(aicc_error_codes.READ_ONLY_ELEMENT);\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {*} value\n * @param {string} regexPattern\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nfunction checkAICCValidFormat(\n    value: String,\n    regexPattern: String,\n    allowEmptyString?: boolean) {\n  return checkValidFormat(\n      value,\n      regexPattern,\n      aicc_error_codes.TYPE_MISMATCH,\n      AICCValidationError,\n      allowEmptyString\n  );\n}\n\n/**\n * CMI Class for AICC\n */\nexport class CMI extends Scorm12CMI.CMI {\n  /**\n   * Constructor for AICC CMI object\n   * @param {boolean} initialized\n   */\n  constructor(initialized: boolean) {\n    super(aicc_constants.cmi_children);\n\n    if (initialized) this.initialize();\n\n    this.student_preference = new AICCStudentPreferences();\n    this.student_data = new AICCCMIStudentData();\n    this.student_demographics = new CMIStudentDemographics();\n    this.evaluation = new CMIEvaluation();\n    this.paths = new CMIPaths();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.student_preference?.initialize();\n    this.student_data?.initialize();\n    this.student_demographics?.initialize();\n    this.evaluation?.initialize();\n    this.paths?.initialize();\n  }\n\n  /**\n   * toJSON for cmi\n   *\n   * @return {\n   *    {\n   *      suspend_data: string,\n   *      launch_data: string,\n   *      comments: string,\n   *      comments_from_lms: string,\n   *      core: CMICore,\n   *      objectives: CMIObjectives,\n   *      student_data: CMIStudentData,\n   *      student_preference: CMIStudentPreference,\n   *      interactions: CMIInteractions,\n   *      paths: CMIPaths\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'suspend_data': this.suspend_data,\n      'launch_data': this.launch_data,\n      'comments': this.comments,\n      'comments_from_lms': this.comments_from_lms,\n      'core': this.core,\n      'objectives': this.objectives,\n      'student_data': this.student_data,\n      'student_preference': this.student_preference,\n      'student_demographics': this.student_demographics,\n      'interactions': this.interactions,\n      'evaluation': this.evaluation,\n      'paths': this.paths,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * AICC Evaluation object\n */\nclass CMIEvaluation extends BaseCMI {\n  /**\n   * Constructor for AICC Evaluation object\n   */\n  constructor() {\n    super();\n\n    this.comments = new CMIEvaluationComments();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.comments?.initialize();\n  }\n\n  /**\n   * toJSON for cmi.evaluation object\n   * @return {{comments: CMIEvaluationComments}}\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'comments': this.comments,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing AICC's cmi.evaluation.comments object\n */\nclass CMIEvaluationComments extends CMIArray {\n  /**\n   * Constructor for AICC Evaluation Comments object\n   */\n  constructor() {\n    super({\n      children: aicc_constants.comments_children,\n      errorCode: aicc_error_codes.INVALID_SET_VALUE,\n      errorClass: AICCValidationError,\n    });\n  }\n}\n\n/**\n * StudentPreferences class for AICC\n */\nclass AICCStudentPreferences extends Scorm12CMI.CMIStudentPreference {\n  /**\n   * Constructor for AICC Student Preferences object\n   */\n  constructor() {\n    super(aicc_constants.student_preference_children);\n\n    this.windows = new CMIArray({\n      errorCode: aicc_error_codes.INVALID_SET_VALUE,\n      errorClass: AICCValidationError,\n      children: '',\n    });\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.windows?.initialize();\n  }\n\n  #lesson_type = '';\n  #text_color = '';\n  #text_location = '';\n  #text_size = '';\n  #video = '';\n\n  /**\n   * Getter for #lesson_type\n   * @return {string}\n   */\n  get lesson_type(): string {\n    return this.#lesson_type;\n  }\n\n  /**\n   * Setter for #lesson_type\n   * @param {string} lesson_type\n   */\n  set lesson_type(lesson_type: string) {\n    if (checkAICCValidFormat(lesson_type, aicc_regex.CMIString256)) {\n      this.#lesson_type = lesson_type;\n    }\n  }\n\n  /**\n   * Getter for #text_color\n   * @return {string}\n   */\n  get text_color(): string {\n    return this.#text_color;\n  }\n\n  /**\n   * Setter for #text_color\n   * @param {string} text_color\n   */\n  set text_color(text_color: string) {\n    if (checkAICCValidFormat(text_color, aicc_regex.CMIString256)) {\n      this.#text_color = text_color;\n    }\n  }\n\n  /**\n   * Getter for #text_location\n   * @return {string}\n   */\n  get text_location(): string {\n    return this.#text_location;\n  }\n\n  /**\n   * Setter for #text_location\n   * @param {string} text_location\n   */\n  set text_location(text_location: string) {\n    if (checkAICCValidFormat(text_location, aicc_regex.CMIString256)) {\n      this.#text_location = text_location;\n    }\n  }\n\n  /**\n   * Getter for #text_size\n   * @return {string}\n   */\n  get text_size(): string {\n    return this.#text_size;\n  }\n\n  /**\n   * Setter for #text_size\n   * @param {string} text_size\n   */\n  set text_size(text_size: string) {\n    if (checkAICCValidFormat(text_size, aicc_regex.CMIString256)) {\n      this.#text_size = text_size;\n    }\n  }\n\n  /**\n   * Getter for #video\n   * @return {string}\n   */\n  get video(): string {\n    return this.#video;\n  }\n\n  /**\n   * Setter for #video\n   * @param {string} video\n   */\n  set video(video: string) {\n    if (checkAICCValidFormat(video, aicc_regex.CMIString256)) {\n      this.#video = video;\n    }\n  }\n\n  /**\n   * toJSON for cmi.student_preference\n   *\n   * @return {\n   *    {\n   *      audio: string,\n   *      language: string,\n   *      speed: string,\n   *      text: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'audio': this.audio,\n      'language': this.language,\n      'lesson_type': this.lesson_type,\n      'speed': this.speed,\n      'text': this.text,\n      'text_color': this.text_color,\n      'text_location': this.text_location,\n      'text_size': this.text_size,\n      'video': this.video,\n      'windows': this.windows,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * StudentData class for AICC\n */\nclass AICCCMIStudentData extends Scorm12CMI.CMIStudentData {\n  /**\n   * Constructor for AICC StudentData object\n   */\n  constructor() {\n    super(aicc_constants.student_data_children);\n\n    this.tries = new CMITries();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.tries?.initialize();\n  }\n\n  #tries_during_lesson = '';\n\n  /**\n   * Getter for tries_during_lesson\n   * @return {string}\n   */\n  get tries_during_lesson() {\n    return this.#tries_during_lesson;\n  }\n\n  /**\n   * Setter for #tries_during_lesson. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} tries_during_lesson\n   */\n  set tries_during_lesson(tries_during_lesson) {\n    !this.initialized ?\n        this.#tries_during_lesson = tries_during_lesson :\n        throwReadOnlyError();\n  }\n\n  /**\n   * toJSON for cmi.student_data object\n   * @return {\n   *    {\n   *      mastery_score: string,\n   *      max_time_allowed: string,\n   *      time_limit_action: string,\n   *      tries: CMITries\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'mastery_score': this.mastery_score,\n      'max_time_allowed': this.max_time_allowed,\n      'time_limit_action': this.time_limit_action,\n      'tries': this.tries,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing the AICC cmi.student_demographics object\n */\nexport class CMIStudentDemographics extends BaseCMI {\n  /**\n   * Constructor for AICC StudentDemographics object\n   */\n  constructor() {\n    super();\n  }\n\n  #_children = aicc_constants.student_demographics_children;\n  #city = '';\n  #class = '';\n  #company = '';\n  #country = '';\n  #experience = '';\n  #familiar_name = '';\n  #instructor_name = '';\n  #title = '';\n  #native_language = '';\n  #state = '';\n  #street_address = '';\n  #telephone = '';\n  #years_experience = '';\n\n  /**\n   * Getter for _children\n   * @return {string}\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Getter for city\n   * @return {string}\n   */\n  get city() {\n    return this.#city;\n  }\n\n  /**\n   * Setter for #city. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} city\n   */\n  set city(city) {\n    !this.initialized ?\n        this.#city = city :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for class\n   * @return {string}\n   */\n  get class() {\n    return this.#class;\n  }\n\n  /**\n   * Setter for #class. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} clazz\n   */\n  set class(clazz) {\n    !this.initialized ?\n        this.#class = clazz :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for company\n   * @return {string}\n   */\n  get company() {\n    return this.#company;\n  }\n\n  /**\n   * Setter for #company. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} company\n   */\n  set company(company) {\n    !this.initialized ?\n        this.#company = company :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for country\n   * @return {string}\n   */\n  get country() {\n    return this.#country;\n  }\n\n  /**\n   * Setter for #country. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} country\n   */\n  set country(country) {\n    !this.initialized ?\n        this.#country = country :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for experience\n   * @return {string}\n   */\n  get experience() {\n    return this.#experience;\n  }\n\n  /**\n   * Setter for #experience. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} experience\n   */\n  set experience(experience) {\n    !this.initialized ?\n        this.#experience = experience :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for familiar_name\n   * @return {string}\n   */\n  get familiar_name() {\n    return this.#familiar_name;\n  }\n\n  /**\n   * Setter for #familiar_name. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} familiar_name\n   */\n  set familiar_name(familiar_name) {\n    !this.initialized ?\n        this.#familiar_name = familiar_name :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for instructor_name\n   * @return {string}\n   */\n  get instructor_name() {\n    return this.#instructor_name;\n  }\n\n  /**\n   * Setter for #instructor_name. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} instructor_name\n   */\n  set instructor_name(instructor_name) {\n    !this.initialized ?\n        this.#instructor_name = instructor_name :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for title\n   * @return {string}\n   */\n  get title() {\n    return this.#title;\n  }\n\n  /**\n   * Setter for #title. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} title\n   */\n  set title(title) {\n    !this.initialized ?\n        this.#title = title :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for native_language\n   * @return {string}\n   */\n  get native_language() {\n    return this.#native_language;\n  }\n\n  /**\n   * Setter for #native_language. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} native_language\n   */\n  set native_language(native_language) {\n    !this.initialized ?\n        this.#native_language = native_language :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for state\n   * @return {string}\n   */\n  get state() {\n    return this.#state;\n  }\n\n  /**\n   * Setter for #state. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} state\n   */\n  set state(state) {\n    !this.initialized ?\n        this.#state = state :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for street_address\n   * @return {string}\n   */\n  get street_address() {\n    return this.#street_address;\n  }\n\n  /**\n   * Setter for #street_address. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} street_address\n   */\n  set street_address(street_address) {\n    !this.initialized ?\n        this.#street_address = street_address :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for telephone\n   * @return {string}\n   */\n  get telephone() {\n    return this.#telephone;\n  }\n\n  /**\n   * Setter for #telephone. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} telephone\n   */\n  set telephone(telephone) {\n    !this.initialized ?\n        this.#telephone = telephone :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for years_experience\n   * @return {string}\n   */\n  get years_experience() {\n    return this.#years_experience;\n  }\n\n  /**\n   * Setter for #years_experience. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} years_experience\n   */\n  set years_experience(years_experience) {\n    !this.initialized ?\n        this.#years_experience = years_experience :\n        throwReadOnlyError();\n  }\n\n  /**\n   * toJSON for cmi.student_demographics object\n   * @return {\n   *      {\n   *        city: string,\n   *        class: string,\n   *        company: string,\n   *        country: string,\n   *        experience: string,\n   *        familiar_name: string,\n   *        instructor_name: string,\n   *        title: string,\n   *        native_language: string,\n   *        state: string,\n   *        street_address: string,\n   *        telephone: string,\n   *        years_experience: string\n   *      }\n   *    }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'city': this.city,\n      'class': this.class,\n      'company': this.company,\n      'country': this.country,\n      'experience': this.experience,\n      'familiar_name': this.familiar_name,\n      'instructor_name': this.instructor_name,\n      'title': this.title,\n      'native_language': this.native_language,\n      'state': this.state,\n      'street_address': this.street_address,\n      'telephone': this.telephone,\n      'years_experience': this.years_experience,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing the AICC cmi.paths object\n */\nexport class CMIPaths extends CMIArray {\n  /**\n   * Constructor for inline Paths Array class\n   */\n  constructor() {\n    super({children: aicc_constants.paths_children});\n  }\n}\n\n/**\n * Class for AICC Paths\n */\nexport class CMIPathsObject extends BaseCMI {\n  /**\n   * Constructor for AICC Paths objects\n   */\n  constructor() {\n    super();\n  }\n\n  #location_id = '';\n  #date = '';\n  #time = '';\n  #status = '';\n  #why_left = '';\n  #time_in_element = '';\n\n  /**\n   * Getter for #location_id\n   * @return {string}\n   */\n  get location_id() {\n    return this.#location_id;\n  }\n\n  /**\n   * Setter for #location_id\n   * @param {string} location_id\n   */\n  set location_id(location_id) {\n    if (checkAICCValidFormat(location_id, aicc_regex.CMIString256)) {\n      this.#location_id = location_id;\n    }\n  }\n\n  /**\n   * Getter for #date\n   * @return {string}\n   */\n  get date() {\n    return this.#date;\n  }\n\n  /**\n   * Setter for #date\n   * @param {string} date\n   */\n  set date(date) {\n    if (checkAICCValidFormat(date, aicc_regex.CMIString256)) {\n      this.#date = date;\n    }\n  }\n\n  /**\n   * Getter for #time\n   * @return {string}\n   */\n  get time() {\n    return this.#time;\n  }\n\n  /**\n   * Setter for #time\n   * @param {string} time\n   */\n  set time(time) {\n    if (checkAICCValidFormat(time, aicc_regex.CMITime)) {\n      this.#time = time;\n    }\n  }\n\n  /**\n   * Getter for #status\n   * @return {string}\n   */\n  get status() {\n    return this.#status;\n  }\n\n  /**\n   * Setter for #status\n   * @param {string} status\n   */\n  set status(status) {\n    if (checkAICCValidFormat(status, aicc_regex.CMIStatus2)) {\n      this.#status = status;\n    }\n  }\n\n  /**\n   * Getter for #why_left\n   * @return {string}\n   */\n  get why_left() {\n    return this.#why_left;\n  }\n\n  /**\n   * Setter for #why_left\n   * @param {string} why_left\n   */\n  set why_left(why_left) {\n    if (checkAICCValidFormat(why_left, aicc_regex.CMIString256)) {\n      this.#why_left = why_left;\n    }\n  }\n\n  /**\n   * Getter for #time_in_element\n   * @return {string}\n   */\n  get time_in_element() {\n    return this.#time_in_element;\n  }\n\n  /**\n   * Setter for #time_in_element\n   * @param {string} time_in_element\n   */\n  set time_in_element(time_in_element) {\n    if (checkAICCValidFormat(time_in_element, aicc_regex.CMITime)) {\n      this.#time_in_element = time_in_element;\n    }\n  }\n\n  /**\n   * toJSON for cmi.paths.n object\n   * @return {\n   *    {\n   *      location_id: string,\n   *      date: string,\n   *      time: string,\n   *      status: string,\n   *      why_left: string,\n   *      time_in_element: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'location_id': this.location_id,\n      'date': this.date,\n      'time': this.time,\n      'status': this.status,\n      'why_left': this.why_left,\n      'time_in_element': this.time_in_element,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing the AICC cmi.student_data.tries object\n */\nexport class CMITries extends CMIArray {\n  /**\n   * Constructor for inline Tries Array class\n   */\n  constructor() {\n    super({children: aicc_constants.tries_children});\n  }\n}\n\n/**\n * Class for AICC Tries\n */\nexport class CMITriesObject extends BaseCMI {\n  /**\n   * Constructor for AICC Tries object\n   */\n  constructor() {\n    super();\n\n    this.score = new CMIScore(\n        {\n          score_children: aicc_constants.score_children,\n          score_range: aicc_regex.score_range,\n          invalidErrorCode: aicc_error_codes.INVALID_SET_VALUE,\n          invalidTypeCode: aicc_error_codes.TYPE_MISMATCH,\n          invalidRangeCode: aicc_error_codes.VALUE_OUT_OF_RANGE,\n          errorClass: AICCValidationError,\n        });\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.score?.initialize();\n  }\n\n  #status = '';\n  #time = '';\n\n  /**\n   * Getter for #status\n   * @return {string}\n   */\n  get status() {\n    return this.#status;\n  }\n\n  /**\n   * Setter for #status\n   * @param {string} status\n   */\n  set status(status) {\n    if (checkAICCValidFormat(status, aicc_regex.CMIStatus2)) {\n      this.#status = status;\n    }\n  }\n\n  /**\n   * Getter for #time\n   * @return {string}\n   */\n  get time() {\n    return this.#time;\n  }\n\n  /**\n   * Setter for #time\n   * @param {string} time\n   */\n  set time(time) {\n    if (checkAICCValidFormat(time, aicc_regex.CMITime)) {\n      this.#time = time;\n    }\n  }\n\n  /**\n   * toJSON for cmi.student_data.tries.n object\n   * @return {\n   *    {\n   *      status: string,\n   *      time: string,\n   *      score: CMIScore\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'status': this.status,\n      'time': this.time,\n      'score': this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class for cmi.student_data.attempt_records array\n */\nexport class CMIAttemptRecords extends CMIArray {\n  /**\n   * Constructor for inline Tries Array class\n   */\n  constructor() {\n    super({children: aicc_constants.attempt_records_children});\n  }\n}\n\n/**\n * Class for AICC Attempt Records\n */\nexport class CMIAttemptRecordsObject extends BaseCMI {\n  /**\n   * Constructor for AICC Attempt Records object\n   */\n  constructor() {\n    super();\n\n    this.score = new CMIScore(\n        {\n          score_children: aicc_constants.score_children,\n          score_range: aicc_regex.score_range,\n          invalidErrorCode: aicc_error_codes.INVALID_SET_VALUE,\n          invalidTypeCode: aicc_error_codes.TYPE_MISMATCH,\n          invalidRangeCode: aicc_error_codes.VALUE_OUT_OF_RANGE,\n          errorClass: AICCValidationError,\n        });\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.score?.initialize();\n  }\n\n  #lesson_status = '';\n\n  /**\n   * Getter for #lesson_status\n   * @return {string}\n   */\n  get lesson_status() {\n    return this.#lesson_status;\n  }\n\n  /**\n   * Setter for #lesson_status\n   * @param {string} lesson_status\n   */\n  set lesson_status(lesson_status) {\n    if (checkAICCValidFormat(lesson_status, aicc_regex.CMIStatus2)) {\n      this.#lesson_status = lesson_status;\n    }\n  }\n\n  /**\n   * toJSON for cmi.student_data.attempt_records.n object\n   * @return {\n   *    {\n   *      status: string,\n   *      time: string,\n   *      score: CMIScore\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'lesson_status': this.lesson_status,\n      'score': this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class for AICC Evaluation Comments\n */\nexport class CMIEvaluationCommentsObject extends BaseCMI {\n  /**\n   * Constructor for Evaluation Comments\n   */\n  constructor() {\n    super();\n  }\n\n  #content = '';\n  #location = '';\n  #time = '';\n\n  /**\n   * Getter for #content\n   * @return {string}\n   */\n  get content() {\n    return this.#content;\n  }\n\n  /**\n   * Setter for #content\n   * @param {string} content\n   */\n  set content(content) {\n    if (checkAICCValidFormat(content, aicc_regex.CMIString256)) {\n      this.#content = content;\n    }\n  }\n\n  /**\n   * Getter for #location\n   * @return {string}\n   */\n  get location() {\n    return this.#location;\n  }\n\n  /**\n   * Setter for #location\n   * @param {string} location\n   */\n  set location(location) {\n    if (checkAICCValidFormat(location, aicc_regex.CMIString256)) {\n      this.#location = location;\n    }\n  }\n\n  /**\n   * Getter for #time\n   * @return {string}\n   */\n  get time() {\n    return this.#time;\n  }\n\n  /**\n   * Setting for #time\n   * @param {string} time\n   */\n  set time(time) {\n    if (checkAICCValidFormat(time, aicc_regex.CMITime)) {\n      this.#time = time;\n    }\n  }\n\n  /**\n   * toJSON for cmi.evaulation.comments.n object\n   * @return {\n   *    {\n   *      content: string,\n   *      location: string,\n   *      time: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'content': this.content,\n      'location': this.location,\n      'time': this.time,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","// @flow\nimport APIConstants from '../constants/api_constants';\nimport ErrorCodes from '../constants/error_codes';\nimport Regex from '../constants/regex';\n\nconst scorm12_constants = APIConstants.scorm12;\nconst scorm12_regex = Regex.scorm12;\nconst scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Check if the value matches the proper format. If not, throw proper error code.\n *\n * @param {string} value\n * @param {string} regexPattern\n * @param {number} errorCode\n * @param {class} errorClass\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nexport function checkValidFormat(\n    value: String,\n    regexPattern: String,\n    errorCode: number,\n    errorClass: function,\n    allowEmptyString?: boolean) {\n  const formatRegex = new RegExp(regexPattern);\n  const matches = value.match(formatRegex);\n  if (allowEmptyString && value === '') {\n    return true;\n  }\n  if (value === undefined || !matches || matches[0] === '') {\n    throw new errorClass.prototype.constructor(errorCode);\n  }\n  return true;\n}\n\n/**\n * Check if the value matches the proper range. If not, throw proper error code.\n *\n * @param {*} value\n * @param {string} rangePattern\n * @param {number} errorCode\n * @param {class} errorClass\n * @return {boolean}\n */\nexport function checkValidRange(\n    value: any,\n    rangePattern: String,\n    errorCode: number,\n    errorClass: function) {\n  const ranges = rangePattern.split('#');\n  value = value * 1.0;\n  if (value >= ranges[0]) {\n    if ((ranges[1] === '*') || (value <= ranges[1])) {\n      return true;\n    } else {\n      throw new errorClass.prototype.constructor(errorCode);\n    }\n  } else {\n    throw new errorClass.prototype.constructor(errorCode);\n  }\n}\n\n/**\n * Base class for API cmi objects\n */\nexport class BaseCMI {\n  jsonString = false;\n  #initialized = false;\n  #start_time;\n\n  /**\n   * Constructor for BaseCMI, just marks the class as abstract\n   */\n  constructor() {\n    if (new.target === BaseCMI) {\n      throw new TypeError('Cannot construct BaseCMI instances directly');\n    }\n  }\n\n  /**\n   * Getter for #initialized\n   * @return {boolean}\n   */\n  get initialized() {\n    return this.#initialized;\n  }\n\n  /**\n   * Getter for #start_time\n   * @return {Number}\n   */\n  get start_time() {\n    return this.#start_time;\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    this.#initialized = true;\n  }\n\n  /**\n   * Called when the player should override the 'session_time' provided by\n   * the module\n   */\n  setStartTime() {\n    this.#start_time = new Date().getTime();\n  }\n}\n\n/**\n * Base class for cmi *.score objects\n */\nexport class CMIScore extends BaseCMI {\n  /**\n   * Constructor for *.score\n   * @param {string} score_children\n   * @param {string} score_range\n   * @param {string} max\n   * @param {number} invalidErrorCode\n   * @param {number} invalidTypeCode\n   * @param {number} invalidRangeCode\n   * @param {string} decimalRegex\n   * @param {class} errorClass\n   */\n  constructor(\n      {\n        score_children,\n        score_range,\n        max,\n        invalidErrorCode,\n        invalidTypeCode,\n        invalidRangeCode,\n        decimalRegex,\n        errorClass,\n      }) {\n    super();\n\n    this.#_children = score_children ||\n        scorm12_constants.score_children;\n    this.#_score_range = !score_range ? false : scorm12_regex.score_range;\n    this.#max = (max || max === '') ? max : '100';\n    this.#_invalid_error_code = invalidErrorCode ||\n        scorm12_error_codes.INVALID_SET_VALUE;\n    this.#_invalid_type_code = invalidTypeCode ||\n        scorm12_error_codes.TYPE_MISMATCH;\n    this.#_invalid_range_code = invalidRangeCode ||\n        scorm12_error_codes.VALUE_OUT_OF_RANGE;\n    this.#_decimal_regex = decimalRegex ||\n        scorm12_regex.CMIDecimal;\n    this.#_error_class = errorClass;\n  }\n\n  #_children;\n  #_score_range;\n  #_invalid_error_code;\n  #_invalid_type_code;\n  #_invalid_range_code;\n  #_decimal_regex;\n  #_error_class;\n  #raw = '';\n  #min = '';\n  #max;\n\n  /**\n   * Getter for _children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for _children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children) {\n    throw new this.#_error_class.prototype.constructor(this.#_invalid_error_code);\n  }\n\n  /**\n   * Getter for #raw\n   * @return {string}\n   */\n  get raw() {\n    return this.#raw;\n  }\n\n  /**\n   * Setter for #raw\n   * @param {string} raw\n   */\n  set raw(raw) {\n    if (checkValidFormat(raw, this.#_decimal_regex, this.#_invalid_type_code, this.#_error_class) &&\n        (!this.#_score_range ||\n            checkValidRange(raw, this.#_score_range, this.#_invalid_range_code, this.#_error_class))) {\n      this.#raw = raw;\n    }\n  }\n\n  /**\n   * Getter for #min\n   * @return {string}\n   */\n  get min() {\n    return this.#min;\n  }\n\n  /**\n   * Setter for #min\n   * @param {string} min\n   */\n  set min(min) {\n    if (checkValidFormat(min, this.#_decimal_regex, this.#_invalid_type_code, this.#_error_class) &&\n        (!this.#_score_range ||\n            checkValidRange(min, this.#_score_range, this.#_invalid_range_code, this.#_error_class))) {\n      this.#min = min;\n    }\n  }\n\n  /**\n   * Getter for #max\n   * @return {string}\n   */\n  get max() {\n    return this.#max;\n  }\n\n  /**\n   * Setter for #max\n   * @param {string} max\n   */\n  set max(max) {\n    if (checkValidFormat(max, this.#_decimal_regex, this.#_invalid_type_code, this.#_error_class) &&\n        (!this.#_score_range ||\n            checkValidRange(max, this.#_score_range, this.#_invalid_range_code, this.#_error_class))) {\n      this.#max = max;\n    }\n  }\n\n  /**\n   * toJSON for *.score\n   * @return {{min: string, max: string, raw: string}}\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'raw': this.raw,\n      'min': this.min,\n      'max': this.max,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Base class for cmi *.n objects\n */\nexport class CMIArray extends BaseCMI {\n  /**\n   * Constructor cmi *.n arrays\n   * @param {string} children\n   * @param {number} errorCode\n   * @param {class} errorClass\n   */\n  constructor({children, errorCode, errorClass}) {\n    super();\n    this.#_children = children;\n    this.#errorCode = errorCode;\n    this.#errorClass = errorClass;\n    this.childArray = [];\n  }\n\n  #errorCode;\n  #errorClass;\n  #_children;\n\n  /**\n   * Getter for _children\n   * @return {*}\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for _children. Just throws an error.\n   * @param {string} _children\n   */\n  set _children(_children) {\n    throw new this.#errorClass.prototype.constructor(this.#errorCode);\n  }\n\n  /**\n   * Getter for _count\n   * @return {number}\n   */\n  get _count() {\n    return this.childArray.length;\n  }\n\n  /**\n   * Setter for _count. Just throws an error.\n   * @param {number} _count\n   */\n  set _count(_count) {\n    throw new this.#errorClass.prototype.constructor(this.#errorCode);\n  }\n\n  /**\n   * toJSON for *.n arrays\n   * @return {object}\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {};\n    for (let i = 0; i < this.childArray.length; i++) {\n      result[i + ''] = this.childArray[i];\n    }\n    delete this.jsonString;\n    return result;\n  }\n}\n","// @flow\nimport {\n  BaseCMI,\n  checkValidFormat,\n  checkValidRange,\n  CMIArray,\n  CMIScore,\n} from './common';\nimport APIConstants from '../constants/api_constants';\nimport ErrorCodes from '../constants/error_codes';\nimport Regex from '../constants/regex';\nimport {Scorm12ValidationError} from '../exceptions';\nimport * as Utilities from '../utilities';\nimport * as Util from '../utilities';\n\nconst scorm12_constants = APIConstants.scorm12;\nconst scorm12_regex = Regex.scorm12;\nconst scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Helper method for throwing Read Only error\n */\nexport function throwReadOnlyError() {\n  throw new Scorm12ValidationError(scorm12_error_codes.READ_ONLY_ELEMENT);\n}\n\n/**\n * Helper method for throwing Write Only error\n */\nexport function throwWriteOnlyError() {\n  throw new Scorm12ValidationError(scorm12_error_codes.WRITE_ONLY_ELEMENT);\n}\n\n/**\n * Helper method for throwing Invalid Set error\n */\nfunction throwInvalidValueError() {\n  throw new Scorm12ValidationError(scorm12_error_codes.INVALID_SET_VALUE);\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {*} value\n * @param {string} regexPattern\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nexport function check12ValidFormat(\n    value: String,\n    regexPattern: String,\n    allowEmptyString?: boolean) {\n  return checkValidFormat(\n      value,\n      regexPattern,\n      scorm12_error_codes.TYPE_MISMATCH,\n      Scorm12ValidationError,\n      allowEmptyString\n  );\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {*} value\n * @param {string} rangePattern\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nexport function check12ValidRange(\n    value: any,\n    rangePattern: String,\n    allowEmptyString?: boolean) {\n  return checkValidRange(\n      value,\n      rangePattern,\n      scorm12_error_codes.VALUE_OUT_OF_RANGE,\n      Scorm12ValidationError,\n      allowEmptyString\n  );\n}\n\n/**\n * Class representing the cmi object for SCORM 1.2\n */\nexport class CMI extends BaseCMI {\n  #_children = '';\n  #_version = '3.4';\n  #launch_data = '';\n  #comments = '';\n  #comments_from_lms = '';\n\n  student_data = null;\n\n  /**\n   * Constructor for the SCORM 1.2 cmi object\n   * @param {string} cmi_children\n   * @param {(CMIStudentData|AICCCMIStudentData)} student_data\n   * @param {boolean} initialized\n   */\n  constructor(cmi_children, student_data, initialized: boolean) {\n    super();\n\n    if (initialized) this.initialize();\n\n    this.#_children = cmi_children ?\n        cmi_children :\n        scorm12_constants.cmi_children;\n    this.core = new CMICore();\n    this.objectives = new CMIObjectives();\n    this.student_data = student_data ? student_data : new CMIStudentData();\n    this.student_preference = new CMIStudentPreference();\n    this.interactions = new CMIInteractions();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.core?.initialize();\n    this.objectives?.initialize();\n    this.student_data?.initialize();\n    this.student_preference?.initialize();\n    this.interactions?.initialize();\n  }\n\n  /**\n   * toJSON for cmi\n   *\n   * @return {\n   *    {\n   *      suspend_data: string,\n   *      launch_data: string,\n   *      comments: string,\n   *      comments_from_lms: string,\n   *      core: CMICore,\n   *      objectives: CMIObjectives,\n   *      student_data: CMIStudentData,\n   *      student_preference: CMIStudentPreference,\n   *      interactions: CMIInteractions\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'suspend_data': this.suspend_data,\n      'launch_data': this.launch_data,\n      'comments': this.comments,\n      'comments_from_lms': this.comments_from_lms,\n      'core': this.core,\n      'objectives': this.objectives,\n      'student_data': this.student_data,\n      'student_preference': this.student_preference,\n      'interactions': this.interactions,\n    };\n    delete this.jsonString;\n    return result;\n  }\n\n  /**\n   * Getter for #_version\n   * @return {string}\n   */\n  get _version() {\n    return this.#_version;\n  }\n\n  /**\n   * Setter for #_version. Just throws an error.\n   * @param {string} _version\n   */\n  set _version(_version) {\n    throwInvalidValueError();\n  }\n\n  /**\n   * Getter for #_children\n   * @return {string}\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_version. Just throws an error.\n   * @param {string} _children\n   */\n  set _children(_children) {\n    throwInvalidValueError();\n  }\n\n  /**\n   * Getter for #suspend_data\n   * @return {string}\n   */\n  get suspend_data() {\n    return this.core?.suspend_data;\n  }\n\n  /**\n   * Setter for #suspend_data\n   * @param {string} suspend_data\n   */\n  set suspend_data(suspend_data) {\n    if (this.core) {\n      this.core.suspend_data = suspend_data;\n    }\n  }\n\n  /**\n   * Getter for #launch_data\n   * @return {string}\n   */\n  get launch_data() {\n    return this.#launch_data;\n  }\n\n  /**\n   * Setter for #launch_data. Can only be called before  initialization.\n   * @param {string} launch_data\n   */\n  set launch_data(launch_data) {\n    !this.initialized ? this.#launch_data = launch_data : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #comments\n   * @return {string}\n   */\n  get comments() {\n    return this.#comments;\n  }\n\n  /**\n   * Setter for #comments\n   * @param {string} comments\n   */\n  set comments(comments) {\n    if (check12ValidFormat(comments, scorm12_regex.CMIString4096, true)) {\n      this.#comments = comments;\n    }\n  }\n\n  /**\n   * Getter for #comments_from_lms\n   * @return {string}\n   */\n  get comments_from_lms() {\n    return this.#comments_from_lms;\n  }\n\n  /**\n   * Setter for #comments_from_lms. Can only be called before  initialization.\n   * @param {string} comments_from_lms\n   */\n  set comments_from_lms(comments_from_lms) {\n    !this.initialized ?\n        this.#comments_from_lms = comments_from_lms :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Adds the current session time to the existing total time.\n   *\n   * @return {string}\n   */\n  getCurrentTotalTime() {\n    return this.core.getCurrentTotalTime(this.start_time);\n  }\n}\n\n/**\n * Class representing the cmi.core object\n * @extends BaseCMI\n */\nclass CMICore extends BaseCMI {\n  /**\n   * Constructor for cmi.core\n   */\n  constructor() {\n    super();\n\n    this.score = new CMIScore(\n        {\n          score_children: scorm12_constants.score_children,\n          score_range: scorm12_regex.score_range,\n          invalidErrorCode: scorm12_error_codes.INVALID_SET_VALUE,\n          invalidTypeCode: scorm12_error_codes.TYPE_MISMATCH,\n          invalidRangeCode: scorm12_error_codes.VALUE_OUT_OF_RANGE,\n          errorClass: Scorm12ValidationError,\n        });\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.score?.initialize();\n  }\n\n  #_children = scorm12_constants.core_children;\n  #student_id = '';\n  #student_name = '';\n  #lesson_location = '';\n  #credit = '';\n  #lesson_status = 'not attempted';\n  #entry = '';\n  #total_time = '';\n  #lesson_mode = 'normal';\n  #exit = '';\n  #session_time = '00:00:00';\n  #suspend_data = '';\n\n  /**\n   * Getter for #_children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children) {\n    throwInvalidValueError();\n  }\n\n  /**\n   * Getter for #student_id\n   * @return {string}\n   */\n  get student_id() {\n    return this.#student_id;\n  }\n\n  /**\n   * Setter for #student_id. Can only be called before  initialization.\n   * @param {string} student_id\n   */\n  set student_id(student_id) {\n    !this.initialized ? this.#student_id = student_id : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #student_name\n   * @return {string}\n   */\n  get student_name() {\n    return this.#student_name;\n  }\n\n  /**\n   * Setter for #student_name. Can only be called before  initialization.\n   * @param {string} student_name\n   */\n  set student_name(student_name) {\n    !this.initialized ?\n        this.#student_name = student_name :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #lesson_location\n   * @return {string}\n   */\n  get lesson_location() {\n    return this.#lesson_location;\n  }\n\n  /**\n   * Setter for #lesson_location\n   * @param {string} lesson_location\n   */\n  set lesson_location(lesson_location) {\n    if (check12ValidFormat(lesson_location, scorm12_regex.CMIString256, true)) {\n      this.#lesson_location = lesson_location;\n    }\n  }\n\n  /**\n   * Getter for #credit\n   * @return {string}\n   */\n  get credit() {\n    return this.#credit;\n  }\n\n  /**\n   * Setter for #credit. Can only be called before  initialization.\n   * @param {string} credit\n   */\n  set credit(credit) {\n    !this.initialized ? this.#credit = credit : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #lesson_status\n   * @return {string}\n   */\n  get lesson_status() {\n    return this.#lesson_status;\n  }\n\n  /**\n   * Setter for #lesson_status\n   * @param {string} lesson_status\n   */\n  set lesson_status(lesson_status) {\n    if (this.initialized) {\n      if (check12ValidFormat(lesson_status, scorm12_regex.CMIStatus)) {\n        this.#lesson_status = lesson_status;\n      }\n    } else {\n      if (check12ValidFormat(lesson_status, scorm12_regex.CMIStatus2)) {\n        this.#lesson_status = lesson_status;\n      }\n    }\n  }\n\n  /**\n   * Getter for #entry\n   * @return {string}\n   */\n  get entry() {\n    return this.#entry;\n  }\n\n  /**\n   * Setter for #entry. Can only be called before  initialization.\n   * @param {string} entry\n   */\n  set entry(entry) {\n    !this.initialized ? this.#entry = entry : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #total_time\n   * @return {string}\n   */\n  get total_time() {\n    return this.#total_time;\n  }\n\n  /**\n   * Setter for #total_time. Can only be called before  initialization.\n   * @param {string} total_time\n   */\n  set total_time(total_time) {\n    !this.initialized ? this.#total_time = total_time : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #lesson_mode\n   * @return {string}\n   */\n  get lesson_mode() {\n    return this.#lesson_mode;\n  }\n\n  /**\n   * Setter for #lesson_mode. Can only be called before  initialization.\n   * @param {string} lesson_mode\n   */\n  set lesson_mode(lesson_mode) {\n    !this.initialized ? this.#lesson_mode = lesson_mode : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #exit. Should only be called during JSON export.\n   * @return {*}\n   */\n  get exit() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#exit;\n  }\n\n  /**\n   * Setter for #exit\n   * @param {string} exit\n   */\n  set exit(exit) {\n    if (check12ValidFormat(exit, scorm12_regex.CMIExit, true)) {\n      this.#exit = exit;\n    }\n  }\n\n  /**\n   * Getter for #session_time. Should only be called during JSON export.\n   * @return {*}\n   */\n  get session_time() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#session_time;\n  }\n\n  /**\n   * Setter for #session_time\n   * @param {string} session_time\n   */\n  set session_time(session_time) {\n    if (check12ValidFormat(session_time, scorm12_regex.CMITimespan)) {\n      this.#session_time = session_time;\n    }\n  }\n\n  /**\n   * Getter for #suspend_data\n   * @return {string}\n   */\n  get suspend_data() {\n    return this.#suspend_data;\n  }\n\n  /**\n   * Setter for #suspend_data\n   * @param {string} suspend_data\n   */\n  set suspend_data(suspend_data) {\n    if (check12ValidFormat(suspend_data, scorm12_regex.CMIString4096, true)) {\n      this.#suspend_data = suspend_data;\n    }\n  }\n\n  /**\n   * Adds the current session time to the existing total time.\n   * @param {Number} start_time\n   * @return {string}\n   */\n  getCurrentTotalTime(start_time: Number) {\n    let sessionTime = this.#session_time;\n    const startTime = start_time;\n\n    if (typeof startTime !== 'undefined' && startTime !== null) {\n      const seconds = new Date().getTime() - startTime;\n      sessionTime = Util.getSecondsAsHHMMSS(seconds / 1000);\n    }\n\n    return Utilities.addHHMMSSTimeStrings(\n        this.#total_time,\n        sessionTime,\n        new RegExp(scorm12_regex.CMITimespan),\n    );\n  }\n\n  /**\n   * toJSON for cmi.core\n   *\n   * @return {\n   *    {\n   *      student_name: string,\n   *      entry: string,\n   *      exit: string,\n   *      score: CMIScore,\n   *      student_id: string,\n   *      lesson_mode: string,\n   *      lesson_location: string,\n   *      lesson_status: string,\n   *      credit: string,\n   *      session_time: *\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'student_id': this.student_id,\n      'student_name': this.student_name,\n      'lesson_location': this.lesson_location,\n      'credit': this.credit,\n      'lesson_status': this.lesson_status,\n      'entry': this.entry,\n      'lesson_mode': this.lesson_mode,\n      'exit': this.exit,\n      'session_time': this.session_time,\n      'score': this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.objectives object\n * @extends CMIArray\n */\nclass CMIObjectives extends CMIArray {\n  /**\n   * Constructor for cmi.objectives\n   */\n  constructor() {\n    super({\n      children: scorm12_constants.objectives_children,\n      errorCode: scorm12_error_codes.INVALID_SET_VALUE,\n      errorClass: Scorm12ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.student_data object\n * @extends BaseCMI\n */\nexport class CMIStudentData extends BaseCMI {\n  #_children;\n  #mastery_score = '';\n  #max_time_allowed = '';\n  #time_limit_action = '';\n\n  /**\n   * Constructor for cmi.student_data\n   * @param {string} student_data_children\n   */\n  constructor(student_data_children) {\n    super();\n\n    this.#_children = student_data_children ?\n        student_data_children :\n        scorm12_constants.student_data_children;\n  }\n\n  /**\n   * Getter for #_children\n   * @return {*}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children) {\n    throwInvalidValueError();\n  }\n\n  /**\n   * Getter for #master_score\n   * @return {string}\n   */\n  get mastery_score() {\n    return this.#mastery_score;\n  }\n\n  /**\n   * Setter for #master_score. Can only be called before  initialization.\n   * @param {string} mastery_score\n   */\n  set mastery_score(mastery_score) {\n    !this.initialized ?\n        this.#mastery_score = mastery_score :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #max_time_allowed\n   * @return {string}\n   */\n  get max_time_allowed() {\n    return this.#max_time_allowed;\n  }\n\n  /**\n   * Setter for #max_time_allowed. Can only be called before  initialization.\n   * @param {string} max_time_allowed\n   */\n  set max_time_allowed(max_time_allowed) {\n    !this.initialized ?\n        this.#max_time_allowed = max_time_allowed :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #time_limit_action\n   * @return {string}\n   */\n  get time_limit_action() {\n    return this.#time_limit_action;\n  }\n\n  /**\n   * Setter for #time_limit_action. Can only be called before  initialization.\n   * @param {string} time_limit_action\n   */\n  set time_limit_action(time_limit_action) {\n    !this.initialized ?\n        this.#time_limit_action = time_limit_action :\n        throwReadOnlyError();\n  }\n\n  /**\n   * toJSON for cmi.student_data\n   *\n   * @return {\n   *    {\n   *      max_time_allowed: string,\n   *      time_limit_action: string,\n   *      mastery_score: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'mastery_score': this.mastery_score,\n      'max_time_allowed': this.max_time_allowed,\n      'time_limit_action': this.time_limit_action,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.student_preference object\n * @extends BaseCMI\n */\nexport class CMIStudentPreference extends BaseCMI {\n  #_children;\n\n  /**\n   * Constructor for cmi.student_preference\n   * @param {string} student_preference_children\n   */\n  constructor(student_preference_children) {\n    super();\n\n    this.#_children = student_preference_children ?\n        student_preference_children :\n        scorm12_constants.student_preference_children;\n  }\n\n  #audio = '';\n  #language = '';\n  #speed = '';\n  #text = '';\n\n  /**\n   * Getter for #_children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children) {\n    throwInvalidValueError();\n  }\n\n  /**\n   * Getter for #audio\n   * @return {string}\n   */\n  get audio() {\n    return this.#audio;\n  }\n\n  /**\n   * Setter for #audio\n   * @param {string} audio\n   */\n  set audio(audio) {\n    if (check12ValidFormat(audio, scorm12_regex.CMISInteger) &&\n        check12ValidRange(audio, scorm12_regex.audio_range)) {\n      this.#audio = audio;\n    }\n  }\n\n  /**\n   * Getter for #language\n   * @return {string}\n   */\n  get language() {\n    return this.#language;\n  }\n\n  /**\n   * Setter for #language\n   * @param {string} language\n   */\n  set language(language) {\n    if (check12ValidFormat(language, scorm12_regex.CMIString256)) {\n      this.#language = language;\n    }\n  }\n\n  /**\n   * Getter for #speed\n   * @return {string}\n   */\n  get speed() {\n    return this.#speed;\n  }\n\n  /**\n   * Setter for #speed\n   * @param {string} speed\n   */\n  set speed(speed) {\n    if (check12ValidFormat(speed, scorm12_regex.CMISInteger) &&\n        check12ValidRange(speed, scorm12_regex.speed_range)) {\n      this.#speed = speed;\n    }\n  }\n\n  /**\n   * Getter for #text\n   * @return {string}\n   */\n  get text() {\n    return this.#text;\n  }\n\n  /**\n   * Setter for #text\n   * @param {string} text\n   */\n  set text(text) {\n    if (check12ValidFormat(text, scorm12_regex.CMISInteger) &&\n        check12ValidRange(text, scorm12_regex.text_range)) {\n      this.#text = text;\n    }\n  }\n\n  /**\n   * toJSON for cmi.student_preference\n   *\n   * @return {\n   *    {\n   *      audio: string,\n   *      language: string,\n   *      speed: string,\n   *      text: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'audio': this.audio,\n      'language': this.language,\n      'speed': this.speed,\n      'text': this.text,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.interactions object\n * @extends BaseCMI\n */\nclass CMIInteractions extends CMIArray {\n  /**\n   * Constructor for cmi.interactions\n   */\n  constructor() {\n    super({\n      children: scorm12_constants.interactions_children,\n      errorCode: scorm12_error_codes.INVALID_SET_VALUE,\n      errorClass: Scorm12ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.interactions.n object\n * @extends BaseCMI\n */\nexport class CMIInteractionsObject extends BaseCMI {\n  /**\n   * Constructor for cmi.interactions.n object\n   */\n  constructor() {\n    super();\n\n    this.objectives = new CMIArray({\n      errorCode: scorm12_error_codes.INVALID_SET_VALUE,\n      errorClass: Scorm12ValidationError,\n      children: scorm12_constants.objectives_children,\n    });\n    this.correct_responses = new CMIArray({\n      errorCode: scorm12_error_codes.INVALID_SET_VALUE,\n      errorClass: Scorm12ValidationError,\n      children: scorm12_constants.correct_responses_children,\n    });\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.objectives?.initialize();\n    this.correct_responses?.initialize();\n  }\n\n  #id = '';\n  #time = '';\n  #type = '';\n  #weighting = '';\n  #student_response = '';\n  #result = '';\n  #latency = '';\n\n  /**\n   * Getter for #id. Should only be called during JSON export.\n   * @return {*}\n   */\n  get id() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check12ValidFormat(id, scorm12_regex.CMIIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * Getter for #time. Should only be called during JSON export.\n   * @return {*}\n   */\n  get time() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#time;\n  }\n\n  /**\n   * Setter for #time\n   * @param {string} time\n   */\n  set time(time) {\n    if (check12ValidFormat(time, scorm12_regex.CMITime)) {\n      this.#time = time;\n    }\n  }\n\n  /**\n   * Getter for #type. Should only be called during JSON export.\n   * @return {*}\n   */\n  get type() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#type;\n  }\n\n  /**\n   * Setter for #type\n   * @param {string} type\n   */\n  set type(type) {\n    if (check12ValidFormat(type, scorm12_regex.CMIType)) {\n      this.#type = type;\n    }\n  }\n\n  /**\n   * Getter for #weighting. Should only be called during JSON export.\n   * @return {*}\n   */\n  get weighting() {\n    return (!this.jsonString) ?\n        throwWriteOnlyError() :\n        this.#weighting;\n  }\n\n  /**\n   * Setter for #weighting\n   * @param {string} weighting\n   */\n  set weighting(weighting) {\n    if (check12ValidFormat(weighting, scorm12_regex.CMIDecimal) &&\n        check12ValidRange(weighting, scorm12_regex.weighting_range)) {\n      this.#weighting = weighting;\n    }\n  }\n\n  /**\n   * Getter for #student_response. Should only be called during JSON export.\n   * @return {*}\n   */\n  get student_response() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#student_response;\n  }\n\n  /**\n   * Setter for #student_response\n   * @param {string} student_response\n   */\n  set student_response(student_response) {\n    if (check12ValidFormat(student_response, scorm12_regex.CMIFeedback, true)) {\n      this.#student_response = student_response;\n    }\n  }\n\n  /**\n   * Getter for #result. Should only be called during JSON export.\n   * @return {*}\n   */\n  get result() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#result;\n  }\n\n  /**\n   * Setter for #result\n   * @param {string} result\n   */\n  set result(result) {\n    if (check12ValidFormat(result, scorm12_regex.CMIResult)) {\n      this.#result = result;\n    }\n  }\n\n  /**\n   * Getter for #latency. Should only be called during JSON export.\n   * @return {*}\n   */\n  get latency() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#latency;\n  }\n\n  /**\n   * Setter for #latency\n   * @param {string} latency\n   */\n  set latency(latency) {\n    if (check12ValidFormat(latency, scorm12_regex.CMITimespan)) {\n      this.#latency = latency;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n\n   *\n   * @return {\n   *    {\n   *      id: string,\n   *      time: string,\n   *      type: string,\n   *      weighting: string,\n   *      student_response: string,\n   *      result: string,\n   *      latency: string,\n   *      objectives: CMIArray,\n   *      correct_responses: CMIArray\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n      'time': this.time,\n      'type': this.type,\n      'weighting': this.weighting,\n      'student_response': this.student_response,\n      'result': this.result,\n      'latency': this.latency,\n      'objectives': this.objectives,\n      'correct_responses': this.correct_responses,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.objectives.n object\n * @extends BaseCMI\n */\nexport class CMIObjectivesObject extends BaseCMI {\n  /**\n   * Constructor for cmi.objectives.n\n   */\n  constructor() {\n    super();\n\n    this.score = new CMIScore(\n        {\n          score_children: scorm12_constants.score_children,\n          score_range: scorm12_regex.score_range,\n          invalidErrorCode: scorm12_error_codes.INVALID_SET_VALUE,\n          invalidTypeCode: scorm12_error_codes.TYPE_MISMATCH,\n          invalidRangeCode: scorm12_error_codes.VALUE_OUT_OF_RANGE,\n          errorClass: Scorm12ValidationError,\n        });\n  }\n\n  #id = '';\n  #status = '';\n\n  /**\n   * Getter for #id\n   * @return {\"\"}\n   */\n  get id() {\n    return this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check12ValidFormat(id, scorm12_regex.CMIIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * Getter for #status\n   * @return {\"\"}\n   */\n  get status() {\n    return this.#status;\n  }\n\n  /**\n   * Setter for #status\n   * @param {string} status\n   */\n  set status(status) {\n    if (check12ValidFormat(status, scorm12_regex.CMIStatus2)) {\n      this.#status = status;\n    }\n  }\n\n  /**\n   * toJSON for cmi.objectives.n\n   * @return {\n   *    {\n   *      id: string,\n   *      status: string,\n   *      score: CMIScore\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n      'status': this.status,\n      'score': this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.interactions.n.objectives.n object\n * @extends BaseCMI\n */\nexport class CMIInteractionsObjectivesObject extends BaseCMI {\n  /**\n   * Constructor for cmi.interactions.n.objectives.n\n   */\n  constructor() {\n    super();\n  }\n\n  #id = '';\n\n  /**\n   * Getter for #id\n   * @return {\"\"}\n   */\n  get id() {\n    return this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check12ValidFormat(id, scorm12_regex.CMIIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n.objectives.n\n   * @return {\n   *    {\n   *      id: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.interactions.correct_responses.n object\n * @extends BaseCMI\n */\nexport class CMIInteractionsCorrectResponsesObject extends BaseCMI {\n  /**\n   * Constructor for cmi.interactions.correct_responses.n\n   */\n  constructor() {\n    super();\n  }\n\n  #pattern = '';\n\n  /**\n   * Getter for #pattern\n   * @return {string}\n   */\n  get pattern() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#pattern;\n  }\n\n  /**\n   * Setter for #pattern\n   * @param {string} pattern\n   */\n  set pattern(pattern) {\n    if (check12ValidFormat(pattern, scorm12_regex.CMIFeedback, true)) {\n      this.#pattern = pattern;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.correct_responses.n\n   * @return {\n   *    {\n   *      pattern: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'pattern': this.pattern,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class for AICC Navigation object\n */\nexport class NAV extends BaseCMI {\n  /**\n   * Constructor for NAV object\n   */\n  constructor() {\n    super();\n  }\n\n  #event = '';\n\n  /**\n   * Getter for #event\n   * @return {string}\n   */\n  get event() {\n    return this.#event;\n  }\n\n  /**\n   * Setter for #event\n   * @param {string} event\n   */\n  set event(event) {\n    if (check12ValidFormat(event, scorm12_regex.NAVEvent)) {\n      this.#event = event;\n    }\n  }\n\n  /**\n   * toJSON for nav object\n   * @return {\n   *    {\n   *      event: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'event': this.event,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","// @flow\nimport {\n  BaseCMI,\n  checkValidFormat,\n  checkValidRange,\n  CMIArray,\n  CMIScore,\n} from './common';\nimport APIConstants from '../constants/api_constants';\nimport Regex from '../constants/regex';\nimport ErrorCodes from '../constants/error_codes';\nimport Responses from '../constants/response_constants';\nimport {Scorm2004ValidationError} from '../exceptions';\nimport * as Util from '../utilities';\n\nconst scorm2004_constants = APIConstants.scorm2004;\nconst scorm2004_error_codes = ErrorCodes.scorm2004;\nconst learner_responses = Responses.learner;\n\nconst scorm2004_regex = Regex.scorm2004;\n\n/**\n * Helper method for throwing Read Only error\n */\nfunction throwReadOnlyError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.READ_ONLY_ELEMENT);\n}\n\n/**\n * Helper method for throwing Write Only error\n */\nfunction throwWriteOnlyError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.WRITE_ONLY_ELEMENT);\n}\n\n/**\n * Helper method for throwing Type Mismatch error\n */\nfunction throwTypeMismatchError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.TYPE_MISMATCH);\n}\n\n/**\n * Helper method for throwing Dependency Not Established error\n */\nfunction throwDependencyNotEstablishedError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.DEPENDENCY_NOT_ESTABLISHED);\n}\n\n/**\n * Helper method for throwing Dependency Not Established error\n */\nfunction throwGeneralSetError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.GENERAL_SET_FAILURE);\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {*} value\n * @param {string} regexPattern\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nfunction check2004ValidFormat(\n    value: String,\n    regexPattern: String,\n    allowEmptyString?: boolean) {\n  return checkValidFormat(\n      value,\n      regexPattern,\n      scorm2004_error_codes.TYPE_MISMATCH,\n      Scorm2004ValidationError,\n      allowEmptyString,\n  );\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {*} value\n * @param {string} rangePattern\n * @return {boolean}\n */\nfunction check2004ValidRange(value: any, rangePattern: String) {\n  return checkValidRange(\n      value,\n      rangePattern,\n      scorm2004_error_codes.VALUE_OUT_OF_RANGE,\n      Scorm2004ValidationError,\n  );\n}\n\n/**\n * Class representing cmi object for SCORM 2004\n */\nexport class CMI extends BaseCMI {\n  /**\n   * Constructor for the SCORM 2004 cmi object\n   * @param {boolean} initialized\n   */\n  constructor(initialized: boolean) {\n    super();\n\n    this.learner_preference = new CMILearnerPreference();\n    this.score = new Scorm2004CMIScore();\n    this.comments_from_learner = new CMICommentsFromLearner();\n    this.comments_from_lms = new CMICommentsFromLMS();\n    this.interactions = new CMIInteractions();\n    this.objectives = new CMIObjectives();\n\n    if (initialized) this.initialize();\n  }\n\n  #_version = '1.0';\n  #_children = scorm2004_constants.cmi_children;\n  #completion_status = 'unknown';\n  #completion_threshold = '';\n  #credit = 'credit';\n  #entry = '';\n  #exit = '';\n  #launch_data = '';\n  #learner_id = '';\n  #learner_name = '';\n  #location = '';\n  #max_time_allowed = '';\n  #mode = 'normal';\n  #progress_measure = '';\n  #scaled_passing_score = '';\n  #session_time = 'PT0H0M0S';\n  #success_status = 'unknown';\n  #suspend_data = '';\n  #time_limit_action = 'continue,no message';\n  #total_time = '';\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.learner_preference?.initialize();\n    this.score?.initialize();\n    this.comments_from_learner?.initialize();\n    this.comments_from_lms?.initialize();\n    this.interactions?.initialize();\n    this.objectives?.initialize();\n  }\n\n  /**\n   * Getter for #_version\n   * @return {string}\n   * @private\n   */\n  get _version() {\n    return this.#_version;\n  }\n\n  /**\n   * Setter for #_version. Just throws an error.\n   * @param {string} _version\n   * @private\n   */\n  set _version(_version) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #_children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_children. Just throws an error.\n   * @param {number} _children\n   * @private\n   */\n  set _children(_children) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #completion_status\n   * @return {string}\n   */\n  get completion_status() {\n    return this.#completion_status;\n  }\n\n  /**\n   * Setter for #completion_status\n   * @param {string} completion_status\n   */\n  set completion_status(completion_status) {\n    if (check2004ValidFormat(completion_status, scorm2004_regex.CMICStatus)) {\n      this.#completion_status = completion_status;\n    }\n  }\n\n  /**\n   * Getter for #completion_threshold\n   * @return {string}\n   */\n  get completion_threshold() {\n    return this.#completion_threshold;\n  }\n\n  /**\n   * Setter for #completion_threshold. Can only be called before  initialization.\n   * @param {string} completion_threshold\n   */\n  set completion_threshold(completion_threshold) {\n    !this.initialized ?\n      this.#completion_threshold = completion_threshold :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Setter for #credit\n   * @return {string}\n   */\n  get credit() {\n    return this.#credit;\n  }\n\n  /**\n   * Setter for #credit. Can only be called before  initialization.\n   * @param {string} credit\n   */\n  set credit(credit) {\n    !this.initialized ? this.#credit = credit : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #entry\n   * @return {string}\n   */\n  get entry() {\n    return this.#entry;\n  }\n\n  /**\n   * Setter for #entry. Can only be called before  initialization.\n   * @param {string} entry\n   */\n  set entry(entry) {\n    !this.initialized ? this.#entry = entry : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #exit. Should only be called during JSON export.\n   * @return {string}\n   */\n  get exit() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#exit;\n  }\n\n  /**\n   * Getter for #exit\n   * @param {string} exit\n   */\n  set exit(exit) {\n    if (check2004ValidFormat(exit, scorm2004_regex.CMIExit, true)) {\n      this.#exit = exit;\n    }\n  }\n\n  /**\n   * Getter for #launch_data\n   * @return {string}\n   */\n  get launch_data() {\n    return this.#launch_data;\n  }\n\n  /**\n   * Setter for #launch_data. Can only be called before  initialization.\n   * @param {string} launch_data\n   */\n  set launch_data(launch_data) {\n    !this.initialized ? this.#launch_data = launch_data : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #learner_id\n   * @return {string}\n   */\n  get learner_id() {\n    return this.#learner_id;\n  }\n\n  /**\n   * Setter for #learner_id. Can only be called before  initialization.\n   * @param {string} learner_id\n   */\n  set learner_id(learner_id) {\n    !this.initialized ? this.#learner_id = learner_id : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #learner_name\n   * @return {string}\n   */\n  get learner_name() {\n    return this.#learner_name;\n  }\n\n  /**\n   * Setter for #learner_name. Can only be called before  initialization.\n   * @param {string} learner_name\n   */\n  set learner_name(learner_name) {\n    !this.initialized ?\n      this.#learner_name = learner_name :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #location\n   * @return {string}\n   */\n  get location() {\n    return this.#location;\n  }\n\n  /**\n   * Setter for #location\n   * @param {string} location\n   */\n  set location(location) {\n    if (check2004ValidFormat(location, scorm2004_regex.CMIString1000)) {\n      this.#location = location;\n    }\n  }\n\n  /**\n   * Getter for #max_time_allowed\n   * @return {string}\n   */\n  get max_time_allowed() {\n    return this.#max_time_allowed;\n  }\n\n  /**\n   * Setter for #max_time_allowed. Can only be called before  initialization.\n   * @param {string} max_time_allowed\n   */\n  set max_time_allowed(max_time_allowed) {\n    !this.initialized ?\n      this.#max_time_allowed = max_time_allowed :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #mode\n   * @return {string}\n   */\n  get mode() {\n    return this.#mode;\n  }\n\n  /**\n   * Setter for #mode. Can only be called before  initialization.\n   * @param {string} mode\n   */\n  set mode(mode) {\n    !this.initialized ? this.#mode = mode : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #progress_measure\n   * @return {string}\n   */\n  get progress_measure() {\n    return this.#progress_measure;\n  }\n\n  /**\n   * Setter for #progress_measure\n   * @param {string} progress_measure\n   */\n  set progress_measure(progress_measure) {\n    if (check2004ValidFormat(progress_measure, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(progress_measure, scorm2004_regex.progress_range)) {\n      this.#progress_measure = progress_measure;\n    }\n  }\n\n  /**\n   * Getter for #scaled_passing_score\n   * @return {string}\n   */\n  get scaled_passing_score() {\n    return this.#scaled_passing_score;\n  }\n\n  /**\n   * Setter for #scaled_passing_score. Can only be called before  initialization.\n   * @param {string} scaled_passing_score\n   */\n  set scaled_passing_score(scaled_passing_score) {\n    !this.initialized ?\n      this.#scaled_passing_score = scaled_passing_score :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #session_time. Should only be called during JSON export.\n   * @return {string}\n   */\n  get session_time() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#session_time;\n  }\n\n  /**\n   * Setter for #session_time\n   * @param {string} session_time\n   */\n  set session_time(session_time) {\n    if (check2004ValidFormat(session_time, scorm2004_regex.CMITimespan)) {\n      this.#session_time = session_time;\n    }\n  }\n\n  /**\n   * Getter for #success_status\n   * @return {string}\n   */\n  get success_status() {\n    return this.#success_status;\n  }\n\n  /**\n   * Setter for #success_status\n   * @param {string} success_status\n   */\n  set success_status(success_status) {\n    if (check2004ValidFormat(success_status, scorm2004_regex.CMISStatus)) {\n      this.#success_status = success_status;\n    }\n  }\n\n  /**\n   * Getter for #suspend_data\n   * @return {string}\n   */\n  get suspend_data() {\n    return this.#suspend_data;\n  }\n\n  /**\n   * Setter for #suspend_data\n   * @param {string} suspend_data\n   */\n  set suspend_data(suspend_data) {\n    if (check2004ValidFormat(suspend_data, scorm2004_regex.CMIString64000,\n        true)) {\n      this.#suspend_data = suspend_data;\n    }\n  }\n\n  /**\n   * Getter for #time_limit_action\n   * @return {string}\n   */\n  get time_limit_action() {\n    return this.#time_limit_action;\n  }\n\n  /**\n   * Setter for #time_limit_action. Can only be called before  initialization.\n   * @param {string} time_limit_action\n   */\n  set time_limit_action(time_limit_action) {\n    !this.initialized ?\n      this.#time_limit_action = time_limit_action :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #total_time\n   * @return {string}\n   */\n  get total_time() {\n    return this.#total_time;\n  }\n\n  /**\n   * Setter for #total_time. Can only be called before  initialization.\n   * @param {string} total_time\n   */\n  set total_time(total_time) {\n    !this.initialized ? this.#total_time = total_time : throwReadOnlyError();\n  }\n\n  /**\n   * Adds the current session time to the existing total time.\n   *\n   * @return {string} ISO8601 Duration\n   */\n  getCurrentTotalTime() {\n    let sessionTime = this.#session_time;\n    const startTime = this.start_time;\n\n    if (typeof startTime !== 'undefined' && startTime !== null) {\n      const seconds = new Date().getTime() - startTime;\n      sessionTime = Util.getSecondsAsISODuration(seconds / 1000);\n    }\n\n    return Util.addTwoDurations(\n        this.#total_time,\n        sessionTime,\n        scorm2004_regex.CMITimespan,\n    );\n  }\n\n  /**\n   * toJSON for cmi\n   *\n   * @return {\n   *    {\n   *      comments_from_learner: CMICommentsFromLearner,\n   *      comments_from_lms: CMICommentsFromLMS,\n   *      completion_status: string,\n   *      completion_threshold: string,\n   *      credit: string,\n   *      entry: string,\n   *      exit: string,\n   *      interactions: CMIInteractions,\n   *      launch_data: string,\n   *      learner_id: string,\n   *      learner_name: string,\n   *      learner_preference: CMILearnerPreference,\n   *      location: string,\n   *      max_time_allowed: string,\n   *      mode: string,\n   *      objectives: CMIObjectives,\n   *      progress_measure: string,\n   *      scaled_passing_score: string,\n   *      score: Scorm2004CMIScore,\n   *      session_time: string,\n   *      success_status: string,\n   *      suspend_data: string,\n   *      time_limit_action: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'comments_from_learner': this.comments_from_learner,\n      'comments_from_lms': this.comments_from_lms,\n      'completion_status': this.completion_status,\n      'completion_threshold': this.completion_threshold,\n      'credit': this.credit,\n      'entry': this.entry,\n      'exit': this.exit,\n      'interactions': this.interactions,\n      'launch_data': this.launch_data,\n      'learner_id': this.learner_id,\n      'learner_name': this.learner_name,\n      'learner_preference': this.learner_preference,\n      'location': this.location,\n      'max_time_allowed': this.max_time_allowed,\n      'mode': this.mode,\n      'objectives': this.objectives,\n      'progress_measure': this.progress_measure,\n      'scaled_passing_score': this.scaled_passing_score,\n      'score': this.score,\n      'session_time': this.session_time,\n      'success_status': this.success_status,\n      'suspend_data': this.suspend_data,\n      'time_limit_action': this.time_limit_action,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi.learner_preference object\n */\nclass CMILearnerPreference extends BaseCMI {\n  #_children = scorm2004_constants.student_preference_children;\n  #audio_level = '1';\n  #language = '';\n  #delivery_speed = '1';\n  #audio_captioning = '0';\n\n  /**\n   * Constructor for cmi.learner_preference\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for #_children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #audio_level\n   * @return {string}\n   */\n  get audio_level() {\n    return this.#audio_level;\n  }\n\n  /**\n   * Setter for #audio_level\n   * @param {string} audio_level\n   */\n  set audio_level(audio_level) {\n    if (check2004ValidFormat(audio_level, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(audio_level, scorm2004_regex.audio_range)) {\n      this.#audio_level = audio_level;\n    }\n  }\n\n  /**\n   * Getter for #language\n   * @return {string}\n   */\n  get language() {\n    return this.#language;\n  }\n\n  /**\n   * Setter for #language\n   * @param {string} language\n   */\n  set language(language) {\n    if (check2004ValidFormat(language, scorm2004_regex.CMILang)) {\n      this.#language = language;\n    }\n  }\n\n  /**\n   * Getter for #delivery_speed\n   * @return {string}\n   */\n  get delivery_speed() {\n    return this.#delivery_speed;\n  }\n\n  /**\n   * Setter for #delivery_speed\n   * @param {string} delivery_speed\n   */\n  set delivery_speed(delivery_speed) {\n    if (check2004ValidFormat(delivery_speed, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(delivery_speed, scorm2004_regex.speed_range)) {\n      this.#delivery_speed = delivery_speed;\n    }\n  }\n\n  /**\n   * Getter for #audio_captioning\n   * @return {string}\n   */\n  get audio_captioning() {\n    return this.#audio_captioning;\n  }\n\n  /**\n   * Setter for #audio_captioning\n   * @param {string} audio_captioning\n   */\n  set audio_captioning(audio_captioning) {\n    if (check2004ValidFormat(audio_captioning, scorm2004_regex.CMISInteger) &&\n      check2004ValidRange(audio_captioning, scorm2004_regex.text_range)) {\n      this.#audio_captioning = audio_captioning;\n    }\n  }\n\n  /**\n   * toJSON for cmi.learner_preference\n   *\n   * @return {\n   *    {\n   *      audio_level: string,\n   *      language: string,\n   *      delivery_speed: string,\n   *      audio_captioning: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'audio_level': this.audio_level,\n      'language': this.language,\n      'delivery_speed': this.delivery_speed,\n      'audio_captioning': this.audio_captioning,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.interactions object\n */\nclass CMIInteractions extends CMIArray {\n  /**\n   * Constructor for cmi.objectives Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.interactions_children,\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.objectives object\n */\nclass CMIObjectives extends CMIArray {\n  /**\n   * Constructor for cmi.objectives Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.objectives_children,\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.comments_from_lms object\n */\nclass CMICommentsFromLMS extends CMIArray {\n  /**\n   * Constructor for cmi.comments_from_lms Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.comments_children,\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.comments_from_learner object\n */\nclass CMICommentsFromLearner extends CMIArray {\n  /**\n   * Constructor for cmi.comments_from_learner Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.comments_children,\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi.interaction.n object\n */\nexport class CMIInteractionsObject extends BaseCMI {\n  #id = '';\n  #type = '';\n  #timestamp = '';\n  #weighting = '';\n  #learner_response = '';\n  #result = '';\n  #latency = '';\n  #description = '';\n\n  /**\n   * Constructor for cmi.interaction.n\n   */\n  constructor() {\n    super();\n\n    this.objectives = new CMIArray({\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n      children: scorm2004_constants.objectives_children,\n    });\n    this.correct_responses = new CMIArray({\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n      children: scorm2004_constants.correct_responses_children,\n    });\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.objectives?.initialize();\n    this.correct_responses?.initialize();\n  }\n\n  /**\n   * Getter for #id\n   * @return {string}\n   */\n  get id() {\n    return this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check2004ValidFormat(id, scorm2004_regex.CMILongIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * Getter for #type\n   * @return {string}\n   */\n  get type() {\n    return this.#type;\n  }\n\n  /**\n   * Setter for #type\n   * @param {string} type\n   */\n  set type(type) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(type, scorm2004_regex.CMIType)) {\n        this.#type = type;\n      }\n    }\n  }\n\n  /**\n   * Getter for #timestamp\n   * @return {string}\n   */\n  get timestamp() {\n    return this.#timestamp;\n  }\n\n  /**\n   * Setter for #timestamp\n   * @param {string} timestamp\n   */\n  set timestamp(timestamp) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(timestamp, scorm2004_regex.CMITime)) {\n        this.#timestamp = timestamp;\n      }\n    }\n  }\n\n  /**\n   * Getter for #weighting\n   * @return {string}\n   */\n  get weighting() {\n    return this.#weighting;\n  }\n\n  /**\n   * Setter for #weighting\n   * @param {string} weighting\n   */\n  set weighting(weighting) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(weighting, scorm2004_regex.CMIDecimal)) {\n        this.#weighting = weighting;\n      }\n    }\n  }\n\n  /**\n   * Getter for #learner_response\n   * @return {string}\n   */\n  get learner_response() {\n    return this.#learner_response;\n  }\n\n  /**\n   * Setter for #learner_response. Does type validation to make sure response\n   * matches SCORM 2004's spec\n   * @param {string} learner_response\n   */\n  set learner_response(learner_response) {\n    if (this.initialized && (this.#type === '' || this.#id === '')) {\n      throwDependencyNotEstablishedError();\n    } else {\n      let nodes = [];\n      const response_type = learner_responses[this.type];\n      if (response_type) {\n        if (response_type?.delimiter) {\n          nodes = learner_response.split(response_type.delimiter);\n        } else {\n          nodes[0] = learner_response;\n        }\n\n        if ((nodes.length > 0) && (nodes.length <= response_type.max)) {\n          const formatRegex = new RegExp(response_type.format);\n          for (let i = 0; i < nodes.length; i++) {\n            if (response_type?.delimiter2) {\n              const values = nodes[i].split(response_type.delimiter2);\n              if (values.length === 2) {\n                if (!values[0].match(formatRegex)) {\n                  throwTypeMismatchError();\n                } else {\n                  if (!values[1].match(new RegExp(response_type.format2))) {\n                    throwTypeMismatchError();\n                  }\n                }\n              } else {\n                throwTypeMismatchError();\n              }\n            } else {\n              if (!nodes[i].match(formatRegex)) {\n                throwTypeMismatchError();\n              } else {\n                if (nodes[i] !== '' && response_type.unique) {\n                  for (let j = 0; j < i; j++) {\n                    if (nodes[i] === nodes[j]) {\n                      throwTypeMismatchError();\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          throwGeneralSetError();\n        }\n\n        this.#learner_response = learner_response;\n      } else {\n        throwTypeMismatchError();\n      }\n    }\n  }\n\n  /**\n   * Getter for #result\n   * @return {string}\n   */\n  get result() {\n    return this.#result;\n  }\n\n  /**\n   * Setter for #result\n   * @param {string} result\n   */\n  set result(result) {\n    if (check2004ValidFormat(result, scorm2004_regex.CMIResult)) {\n      this.#result = result;\n    }\n  }\n\n  /**\n   * Getter for #latency\n   * @return {string}\n   */\n  get latency() {\n    return this.#latency;\n  }\n\n  /**\n   * Setter for #latency\n   * @param {string} latency\n   */\n  set latency(latency) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(latency, scorm2004_regex.CMITimespan)) {\n        this.#latency = latency;\n      }\n    }\n  }\n\n  /**\n   * Getter for #description\n   * @return {string}\n   */\n  get description() {\n    return this.#description;\n  }\n\n  /**\n   * Setter for #description\n   * @param {string} description\n   */\n  set description(description) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(description, scorm2004_regex.CMILangString250,\n          true)) {\n        this.#description = description;\n      }\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n\n   *\n   * @return {\n   *    {\n   *      id: string,\n   *      type: string,\n   *      objectives: CMIArray,\n   *      timestamp: string,\n   *      correct_responses: CMIArray,\n   *      weighting: string,\n   *      learner_response: string,\n   *      result: string,\n   *      latency: string,\n   *      description: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n      'type': this.type,\n      'objectives': this.objectives,\n      'timestamp': this.timestamp,\n      'weighting': this.weighting,\n      'learner_response': this.learner_response,\n      'result': this.result,\n      'latency': this.latency,\n      'description': this.description,\n      'correct_responses': this.correct_responses,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi.objectives.n object\n */\nexport class CMIObjectivesObject extends BaseCMI {\n  #id = '';\n  #success_status = 'unknown';\n  #completion_status = 'unknown';\n  #progress_measure = '';\n  #description = '';\n\n  /**\n   * Constructor for cmi.objectives.n\n   */\n  constructor() {\n    super();\n\n    this.score = new Scorm2004CMIScore();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.score?.initialize();\n  }\n\n  /**\n   * Getter for #id\n   * @return {string}\n   */\n  get id() {\n    return this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check2004ValidFormat(id, scorm2004_regex.CMILongIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * Getter for #success_status\n   * @return {string}\n   */\n  get success_status() {\n    return this.#success_status;\n  }\n\n  /**\n   * Setter for #success_status\n   * @param {string} success_status\n   */\n  set success_status(success_status) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(success_status, scorm2004_regex.CMISStatus)) {\n        this.#success_status = success_status;\n      }\n    }\n  }\n\n  /**\n   * Getter for #completion_status\n   * @return {string}\n   */\n  get completion_status() {\n    return this.#completion_status;\n  }\n\n  /**\n   * Setter for #completion_status\n   * @param {string} completion_status\n   */\n  set completion_status(completion_status) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(completion_status, scorm2004_regex.CMICStatus)) {\n        this.#completion_status = completion_status;\n      }\n    }\n  }\n\n  /**\n   * Getter for #progress_measure\n   * @return {string}\n   */\n  get progress_measure() {\n    return this.#progress_measure;\n  }\n\n  /**\n   * Setter for #progress_measure\n   * @param {string} progress_measure\n   */\n  set progress_measure(progress_measure) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(progress_measure, scorm2004_regex.CMIDecimal) &&\n        check2004ValidRange(progress_measure,\n            scorm2004_regex.progress_range)) {\n        this.#progress_measure = progress_measure;\n      }\n    }\n  }\n\n  /**\n   * Getter for #description\n   * @return {string}\n   */\n  get description() {\n    return this.#description;\n  }\n\n  /**\n   * Setter for #description\n   * @param {string} description\n   */\n  set description(description) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(description, scorm2004_regex.CMILangString250,\n          true)) {\n        this.#description = description;\n      }\n    }\n  }\n\n  /**\n   * toJSON for cmi.objectives.n\n   *\n   * @return {\n   *    {\n   *      id: string,\n   *      success_status: string,\n   *      completion_status: string,\n   *      progress_measure: string,\n   *      description: string,\n   *      score: Scorm2004CMIScore\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n      'success_status': this.success_status,\n      'completion_status': this.completion_status,\n      'progress_measure': this.progress_measure,\n      'description': this.description,\n      'score': this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi *.score object\n */\nclass Scorm2004CMIScore extends CMIScore {\n  #scaled = '';\n\n  /**\n   * Constructor for cmi *.score\n   */\n  constructor() {\n    super(\n        {\n          score_children: scorm2004_constants.score_children,\n          max: '',\n          invalidErrorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n          invalidTypeCode: scorm2004_error_codes.TYPE_MISMATCH,\n          invalidRangeCode: scorm2004_error_codes.VALUE_OUT_OF_RANGE,\n          decimalRegex: scorm2004_regex.CMIDecimal,\n          errorClass: Scorm2004ValidationError,\n        });\n  }\n\n  /**\n   * Getter for #scaled\n   * @return {string}\n   */\n  get scaled() {\n    return this.#scaled;\n  }\n\n  /**\n   * Setter for #scaled\n   * @param {string} scaled\n   */\n  set scaled(scaled) {\n    if (check2004ValidFormat(scaled, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(scaled, scorm2004_regex.scaled_range)) {\n      this.#scaled = scaled;\n    }\n  }\n\n  /**\n   * toJSON for cmi *.score\n   *\n   * @return {\n   *    {\n   *      scaled: string,\n   *      raw: string,\n   *      min: string,\n   *      max: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'scaled': this.scaled,\n      'raw': super.raw,\n      'min': super.min,\n      'max': super.max,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.comments_from_learner.n and cmi.comments_from_lms.n object\n */\nexport class CMICommentsObject extends BaseCMI {\n  #comment = '';\n  #location = '';\n  #timestamp = '';\n  #readOnlyAfterInit;\n\n  /**\n   * Constructor for cmi.comments_from_learner.n and cmi.comments_from_lms.n\n   * @param {boolean} readOnlyAfterInit\n   */\n  constructor(readOnlyAfterInit = false) {\n    super();\n    this.#comment = '';\n    this.#location = '';\n    this.#timestamp = '';\n    this.#readOnlyAfterInit = readOnlyAfterInit;\n  }\n\n  /**\n   * Getter for #comment\n   * @return {string}\n   */\n  get comment() {\n    return this.#comment;\n  }\n\n  /**\n   * Setter for #comment\n   * @param {string} comment\n   */\n  set comment(comment) {\n    if (this.initialized && this.#readOnlyAfterInit) {\n      throwReadOnlyError();\n    } else {\n      if (check2004ValidFormat(comment, scorm2004_regex.CMILangString4000,\n          true)) {\n        this.#comment = comment;\n      }\n    }\n  }\n\n  /**\n   * Getter for #location\n   * @return {string}\n   */\n  get location() {\n    return this.#location;\n  }\n\n  /**\n   * Setter for #location\n   * @param {string} location\n   */\n  set location(location) {\n    if (this.initialized && this.#readOnlyAfterInit) {\n      throwReadOnlyError();\n    } else {\n      if (check2004ValidFormat(location, scorm2004_regex.CMIString250)) {\n        this.#location = location;\n      }\n    }\n  }\n\n  /**\n   * Getter for #timestamp\n   * @return {string}\n   */\n  get timestamp() {\n    return this.#timestamp;\n  }\n\n  /**\n   * Setter for #timestamp\n   * @param {string} timestamp\n   */\n  set timestamp(timestamp) {\n    if (this.initialized && this.#readOnlyAfterInit) {\n      throwReadOnlyError();\n    } else {\n      if (check2004ValidFormat(timestamp, scorm2004_regex.CMITime)) {\n        this.#timestamp = timestamp;\n      }\n    }\n  }\n\n  /**\n   * toJSON for cmi.comments_from_learner.n object\n   * @return {\n   *    {\n   *      comment: string,\n   *      location: string,\n   *      timestamp: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'comment': this.comment,\n      'location': this.location,\n      'timestamp': this.timestamp,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.interactions.n.objectives.n object\n */\nexport class CMIInteractionsObjectivesObject extends BaseCMI {\n  #id = '';\n\n  /**\n   * Constructor for cmi.interactions.n.objectives.n\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for #id\n   * @return {string}\n   */\n  get id() {\n    return this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check2004ValidFormat(id, scorm2004_regex.CMILongIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n.objectives.n\n   * @return {\n   *    {\n   *      id: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.interactions.n.correct_responses.n object\n */\nexport class CMIInteractionsCorrectResponsesObject extends BaseCMI {\n  #pattern = '';\n\n  /**\n   * Constructor for cmi.interactions.n.correct_responses.n\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for #pattern\n   * @return {string}\n   */\n  get pattern() {\n    return this.#pattern;\n  }\n\n  /**\n   * Setter for #pattern\n   * @param {string} pattern\n   */\n  set pattern(pattern) {\n    if (check2004ValidFormat(pattern, scorm2004_regex.CMIFeedback)) {\n      this.#pattern = pattern;\n    }\n  }\n\n  /**\n   * toJSON cmi.interactions.n.correct_responses.n object\n   * @return {\n   *    {\n   *      pattern: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'pattern': this.pattern,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's adl object\n */\nexport class ADL extends BaseCMI {\n  /**\n   * Constructor for adl\n   */\n  constructor() {\n    super();\n\n    this.nav = new ADLNav();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.nav?.initialize();\n  }\n\n  /**\n   * toJSON for adl\n   * @return {\n   *    {\n   *      nav: {\n   *        request: string\n   *      }\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'nav': this.nav,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's adl.nav object\n */\nclass ADLNav extends BaseCMI {\n  #request = '_none_';\n\n  /**\n   * Constructor for adl.nav\n   */\n  constructor() {\n    super();\n\n    this.request_valid = new ADLNavRequestValid();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.request_valid?.initialize();\n  }\n\n  /**\n   * Getter for #request\n   * @return {string}\n   */\n  get request() {\n    return this.#request;\n  }\n\n  /**\n   * Setter for #request\n   * @param {string} request\n   */\n  set request(request) {\n    if (check2004ValidFormat(request, scorm2004_regex.NAVEvent)) {\n      this.#request = request;\n    }\n  }\n\n  /**\n   * toJSON for adl.nav\n   *\n   * @return {\n   *    {\n   *      request: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'request': this.request,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's adl.nav.request_valid object\n */\nclass ADLNavRequestValid extends BaseCMI {\n  #continue = 'unknown';\n  #previous = 'unknown';\n  choice = class {\n    /**\n     * Check if target is valid\n     * @param {*} _target\n     * @return {string}\n     */\n    _isTargetValid = (_target) => 'unknown';\n  };\n  jump = class {\n    /**\n     * Check if target is valid\n     * @param {*} _target\n     * @return {string}\n     */\n    _isTargetValid = (_target) => 'unknown';\n  };\n\n  /**\n   * Constructor for adl.nav.request_valid\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for #continue\n   * @return {string}\n   */\n  get continue() {\n    return this.#continue;\n  }\n\n  /**\n   * Setter for #continue. Just throws an error.\n   * @param {*} _\n   */\n  set continue(_) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #previous\n   * @return {string}\n   */\n  get previous() {\n    return this.#previous;\n  }\n\n  /**\n   * Setter for #previous. Just throws an error.\n   * @param {*} _\n   */\n  set previous(_) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * toJSON for adl.nav.request_valid\n   *\n   * @return {\n   *    {\n   *      previous: string,\n   *      continue: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'previous': this.previous,\n      'continue': this.continue,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","// @flow\n\nconst global = {\n  SCORM_TRUE: 'true',\n  SCORM_FALSE: 'false',\n  STATE_NOT_INITIALIZED: 0,\n  STATE_INITIALIZED: 1,\n  STATE_TERMINATED: 2,\n  LOG_LEVEL_DEBUG: 1,\n  LOG_LEVEL_INFO: 2,\n  LOG_LEVEL_WARNING: 3,\n  LOG_LEVEL_ERROR: 4,\n  LOG_LEVEL_NONE: 5,\n};\n\nconst scorm12 = {\n  // Children lists\n  cmi_children: 'core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions',\n  core_children: 'student_id,student_name,lesson_location,credit,lesson_status,entry,score,total_time,lesson_mode,exit,session_time',\n  score_children: 'raw,min,max',\n  comments_children: 'content,location,time',\n  objectives_children: 'id,score,status',\n  correct_responses_children: 'pattern',\n  student_data_children: 'mastery_score,max_time_allowed,time_limit_action',\n  student_preference_children: 'audio,language,speed,text',\n  interactions_children: 'id,objectives,time,type,correct_responses,weighting,student_response,result,latency',\n\n  error_descriptions: {\n    '101': {\n      basicMessage: 'General Exception',\n      detailMessage: 'No specific error code exists to describe the error. Use LMSGetDiagnostic for more information',\n    },\n    '201': {\n      basicMessage: 'Invalid argument error',\n      detailMessage: 'Indicates that an argument represents an invalid data model element or is otherwise incorrect.',\n    },\n    '202': {\n      basicMessage: 'Element cannot have children',\n      detailMessage: 'Indicates that LMSGetValue was called with a data model element name that ends in \"_children\" for a data model element that does not support the \"_children\" suffix.',\n    },\n    '203': {\n      basicMessage: 'Element not an array - cannot have count',\n      detailMessage: 'Indicates that LMSGetValue was called with a data model element name that ends in \"_count\" for a data model element that does not support the \"_count\" suffix.',\n    },\n    '301': {\n      basicMessage: 'Not initialized',\n      detailMessage: 'Indicates that an API call was made before the call to lmsInitialize.',\n    },\n    '401': {\n      basicMessage: 'Not implemented error',\n      detailMessage: 'The data model element indicated in a call to LMSGetValue or LMSSetValue is valid, but was not implemented by this LMS. SCORM 1.2 defines a set of data model elements as being optional for an LMS to implement.',\n    },\n    '402': {\n      basicMessage: 'Invalid set value, element is a keyword',\n      detailMessage: 'Indicates that LMSSetValue was called on a data model element that represents a keyword (elements that end in \"_children\" and \"_count\").',\n    },\n    '403': {\n      basicMessage: 'Element is read only',\n      detailMessage: 'LMSSetValue was called with a data model element that can only be read.',\n    },\n    '404': {\n      basicMessage: 'Element is write only',\n      detailMessage: 'LMSGetValue was called on a data model element that can only be written to.',\n    },\n    '405': {\n      basicMessage: 'Incorrect Data Type',\n      detailMessage: 'LMSSetValue was called with a value that is not consistent with the data format of the supplied data model element.',\n    },\n    '407': {\n      basicMessage: 'Element Value Out Of Range',\n      detailMessage: 'The numeric value supplied to a LMSSetValue call is outside of the numeric range allowed for the supplied data model element.',\n    },\n    '408': {\n      basicMessage: 'Data Model Dependency Not Established',\n      detailMessage: 'Some data model elements cannot be set until another data model element was set. This error condition indicates that the prerequisite element was not set before the dependent element.',\n    },\n  },\n};\n\nconst aicc = {\n  ...scorm12, ...{\n    cmi_children: 'core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions,evaluation',\n    student_preference_children: 'audio,language,lesson_type,speed,text,text_color,text_location,text_size,video,windows',\n    student_data_children: 'attempt_number,tries,mastery_score,max_time_allowed,time_limit_action',\n    student_demographics_children: 'city,class,company,country,experience,familiar_name,instructor_name,title,native_language,state,street_address,telephone,years_experience',\n    tries_children: 'time,status,score',\n    attempt_records_children: 'score,lesson_status',\n    paths_children: 'location_id,date,time,status,why_left,time_in_element',\n  },\n};\n\nconst scorm2004 = {\n  // Children lists\n  cmi_children: '_version,comments_from_learner,comments_from_lms,completion_status,credit,entry,exit,interactions,launch_data,learner_id,learner_name,learner_preference,location,max_time_allowed,mode,objectives,progress_measure,scaled_passing_score,score,session_time,success_status,suspend_data,time_limit_action,total_time',\n  comments_children: 'comment,timestamp,location',\n  score_children: 'max,raw,scaled,min',\n  objectives_children: 'progress_measure,completion_status,success_status,description,score,id',\n  correct_responses_children: 'pattern',\n  student_data_children: 'mastery_score,max_time_allowed,time_limit_action',\n  student_preference_children: 'audio_level,audio_captioning,delivery_speed,language',\n  interactions_children: 'id,type,objectives,timestamp,correct_responses,weighting,learner_response,result,latency,description',\n\n  error_descriptions: {\n    '0': {\n      basicMessage: 'No Error',\n      detailMessage: 'No error occurred, the previous API call was successful.',\n    },\n    '101': {\n      basicMessage: 'General Exception',\n      detailMessage: 'No specific error code exists to describe the error. Use GetDiagnostic for more information.',\n    },\n    '102': {\n      basicMessage: 'General Initialization Failure',\n      detailMessage: 'Call to Initialize failed for an unknown reason.',\n    },\n    '103': {\n      basicMessage: 'Already Initialized',\n      detailMessage: 'Call to Initialize failed because Initialize was already called.',\n    },\n    '104': {\n      basicMessage: 'Content Instance Terminated',\n      detailMessage: 'Call to Initialize failed because Terminate was already called.',\n    },\n    '111': {\n      basicMessage: 'General Termination Failure',\n      detailMessage: 'Call to Terminate failed for an unknown reason.',\n    },\n    '112': {\n      basicMessage: 'Termination Before Initialization',\n      detailMessage: 'Call to Terminate failed because it was made before the call to Initialize.',\n    },\n    '113': {\n      basicMessage: 'Termination After Termination',\n      detailMessage: 'Call to Terminate failed because Terminate was already called.',\n    },\n    '122': {\n      basicMessage: 'Retrieve Data Before Initialization',\n      detailMessage: 'Call to GetValue failed because it was made before the call to Initialize.',\n    },\n    '123': {\n      basicMessage: 'Retrieve Data After Termination',\n      detailMessage: 'Call to GetValue failed because it was made after the call to Terminate.',\n    },\n    '132': {\n      basicMessage: 'Store Data Before Initialization',\n      detailMessage: 'Call to SetValue failed because it was made before the call to Initialize.',\n    },\n    '133': {\n      basicMessage: 'Store Data After Termination',\n      detailMessage: 'Call to SetValue failed because it was made after the call to Terminate.',\n    },\n    '142': {\n      basicMessage: 'Commit Before Initialization',\n      detailMessage: 'Call to Commit failed because it was made before the call to Initialize.',\n    },\n    '143': {\n      basicMessage: 'Commit After Termination',\n      detailMessage: 'Call to Commit failed because it was made after the call to Terminate.',\n    },\n    '201': {\n      basicMessage: 'General Argument Error',\n      detailMessage: 'An invalid argument was passed to an API method (usually indicates that Initialize, Commit or Terminate did not receive the expected empty string argument.',\n    },\n    '301': {\n      basicMessage: 'General Get Failure',\n      detailMessage: 'Indicates a failed GetValue call where no other specific error code is applicable. Use GetDiagnostic for more information.',\n    },\n    '351': {\n      basicMessage: 'General Set Failure',\n      detailMessage: 'Indicates a failed SetValue call where no other specific error code is applicable. Use GetDiagnostic for more information.',\n    },\n    '391': {\n      basicMessage: 'General Commit Failure',\n      detailMessage: 'Indicates a failed Commit call where no other specific error code is applicable. Use GetDiagnostic for more information.',\n    },\n    '401': {\n      basicMessage: 'Undefined Data Model Element',\n      detailMessage: 'The data model element name passed to GetValue or SetValue is not a valid SCORM data model element.',\n    },\n    '402': {\n      basicMessage: 'Unimplemented Data Model Element',\n      detailMessage: 'The data model element indicated in a call to GetValue or SetValue is valid, but was not implemented by this LMS. In SCORM 2004, this error would indicate an LMS that is not fully SCORM conformant.',\n    },\n    '403': {\n      basicMessage: 'Data Model Element Value Not Initialized',\n      detailMessage: 'Attempt to read a data model element that has not been initialized by the LMS or through a SetValue call. This error condition is often reached during normal execution of a SCO.',\n    },\n    '404': {\n      basicMessage: 'Data Model Element Is Read Only',\n      detailMessage: 'SetValue was called with a data model element that can only be read.',\n    },\n    '405': {\n      basicMessage: 'Data Model Element Is Write Only',\n      detailMessage: 'GetValue was called on a data model element that can only be written to.',\n    },\n    '406': {\n      basicMessage: 'Data Model Element Type Mismatch',\n      detailMessage: 'SetValue was called with a value that is not consistent with the data format of the supplied data model element.',\n    },\n    '407': {\n      basicMessage: 'Data Model Element Value Out Of Range',\n      detailMessage: 'The numeric value supplied to a SetValue call is outside of the numeric range allowed for the supplied data model element.',\n    },\n    '408': {\n      basicMessage: 'Data Model Dependency Not Established',\n      detailMessage: 'Some data model elements cannot be set until another data model element was set. This error condition indicates that the prerequisite element was not set before the dependent element.',\n    },\n  },\n};\n\nconst APIConstants = {\n  global: global,\n  scorm12: scorm12,\n  aicc: aicc,\n  scorm2004: scorm2004,\n};\n\nexport default APIConstants;\n","// @flow\nconst global = {\n  GENERAL: 101,\n  INITIALIZATION_FAILED: 101,\n  INITIALIZED: 101,\n  TERMINATED: 101,\n  TERMINATION_FAILURE: 101,\n  TERMINATION_BEFORE_INIT: 101,\n  MULTIPLE_TERMINATION: 101,\n  RETRIEVE_BEFORE_INIT: 101,\n  RETRIEVE_AFTER_TERM: 101,\n  STORE_BEFORE_INIT: 101,\n  STORE_AFTER_TERM: 101,\n  COMMIT_BEFORE_INIT: 101,\n  COMMIT_AFTER_TERM: 101,\n  ARGUMENT_ERROR: 101,\n  CHILDREN_ERROR: 101,\n  COUNT_ERROR: 101,\n  GENERAL_GET_FAILURE: 101,\n  GENERAL_SET_FAILURE: 101,\n  GENERAL_COMMIT_FAILURE: 101,\n  UNDEFINED_DATA_MODEL: 101,\n  UNIMPLEMENTED_ELEMENT: 101,\n  VALUE_NOT_INITIALIZED: 101,\n  INVALID_SET_VALUE: 101,\n  READ_ONLY_ELEMENT: 101,\n  WRITE_ONLY_ELEMENT: 101,\n  TYPE_MISMATCH: 101,\n  VALUE_OUT_OF_RANGE: 101,\n  DEPENDENCY_NOT_ESTABLISHED: 101,\n};\n\nconst scorm12 = {\n  ...global, ...{\n    RETRIEVE_BEFORE_INIT: 301,\n    STORE_BEFORE_INIT: 301,\n    COMMIT_BEFORE_INIT: 301,\n    ARGUMENT_ERROR: 201,\n    CHILDREN_ERROR: 202,\n    COUNT_ERROR: 203,\n    UNDEFINED_DATA_MODEL: 401,\n    UNIMPLEMENTED_ELEMENT: 401,\n    VALUE_NOT_INITIALIZED: 301,\n    INVALID_SET_VALUE: 402,\n    READ_ONLY_ELEMENT: 403,\n    WRITE_ONLY_ELEMENT: 404,\n    TYPE_MISMATCH: 405,\n    VALUE_OUT_OF_RANGE: 407,\n    DEPENDENCY_NOT_ESTABLISHED: 408,\n  },\n};\n\nconst scorm2004 = {\n  ...global, ...{\n    INITIALIZATION_FAILED: 102,\n    INITIALIZED: 103,\n    TERMINATED: 104,\n    TERMINATION_FAILURE: 111,\n    TERMINATION_BEFORE_INIT: 112,\n    MULTIPLE_TERMINATIONS: 113,\n    RETRIEVE_BEFORE_INIT: 122,\n    RETRIEVE_AFTER_TERM: 123,\n    STORE_BEFORE_INIT: 132,\n    STORE_AFTER_TERM: 133,\n    COMMIT_BEFORE_INIT: 142,\n    COMMIT_AFTER_TERM: 143,\n    ARGUMENT_ERROR: 201,\n    GENERAL_GET_FAILURE: 301,\n    GENERAL_SET_FAILURE: 351,\n    GENERAL_COMMIT_FAILURE: 391,\n    UNDEFINED_DATA_MODEL: 401,\n    UNIMPLEMENTED_ELEMENT: 402,\n    VALUE_NOT_INITIALIZED: 403,\n    READ_ONLY_ELEMENT: 404,\n    WRITE_ONLY_ELEMENT: 405,\n    TYPE_MISMATCH: 406,\n    VALUE_OUT_OF_RANGE: 407,\n    DEPENDENCY_NOT_ESTABLISHED: 408,\n  },\n};\n\nconst ErrorCodes = {\n  scorm12: scorm12,\n  scorm2004: scorm2004,\n};\n\nexport default ErrorCodes;\n","const ValidLanguages = {\n  'aa': 'aa', 'ab': 'ab', 'ae': 'ae', 'af': 'af', 'ak': 'ak', 'am': 'am',\n  'an': 'an', 'ar': 'ar', 'as': 'as', 'av': 'av', 'ay': 'ay', 'az': 'az',\n  'ba': 'ba', 'be': 'be', 'bg': 'bg', 'bh': 'bh', 'bi': 'bi', 'bm': 'bm',\n  'bn': 'bn', 'bo': 'bo', 'br': 'br', 'bs': 'bs', 'ca': 'ca', 'ce': 'ce',\n  'ch': 'ch', 'co': 'co', 'cr': 'cr', 'cs': 'cs', 'cu': 'cu', 'cv': 'cv',\n  'cy': 'cy', 'da': 'da', 'de': 'de', 'dv': 'dv', 'dz': 'dz', 'ee': 'ee',\n  'el': 'el', 'en': 'en', 'eo': 'eo', 'es': 'es', 'et': 'et', 'eu': 'eu',\n  'fa': 'fa', 'ff': 'ff', 'fi': 'fi', 'fj': 'fj', 'fo': 'fo', 'fr': 'fr',\n  'fy': 'fy', 'ga': 'ga', 'gd': 'gd', 'gl': 'gl', 'gn': 'gn', 'gu': 'gu',\n  'gv': 'gv', 'ha': 'ha', 'he': 'he', 'hi': 'hi', 'ho': 'ho', 'hr': 'hr',\n  'ht': 'ht', 'hu': 'hu', 'hy': 'hy', 'hz': 'hz', 'ia': 'ia', 'id': 'id',\n  'ie': 'ie', 'ig': 'ig', 'ii': 'ii', 'ik': 'ik', 'io': 'io', 'is': 'is',\n  'it': 'it', 'iu': 'iu', 'ja': 'ja', 'jv': 'jv', 'ka': 'ka', 'kg': 'kg',\n  'ki': 'ki', 'kj': 'kj', 'kk': 'kk', 'kl': 'kl', 'km': 'km', 'kn': 'kn',\n  'ko': 'ko', 'kr': 'kr', 'ks': 'ks', 'ku': 'ku', 'kv': 'kv', 'kw': 'kw',\n  'ky': 'ky', 'la': 'la', 'lb': 'lb', 'lg': 'lg', 'li': 'li', 'ln': 'ln',\n  'lo': 'lo', 'lt': 'lt', 'lu': 'lu', 'lv': 'lv', 'mg': 'mg', 'mh': 'mh',\n  'mi': 'mi', 'mk': 'mk', 'ml': 'ml', 'mn': 'mn', 'mo': 'mo', 'mr': 'mr',\n  'ms': 'ms', 'mt': 'mt', 'my': 'my', 'na': 'na', 'nb': 'nb', 'nd': 'nd',\n  'ne': 'ne', 'ng': 'ng', 'nl': 'nl', 'nn': 'nn', 'no': 'no', 'nr': 'nr',\n  'nv': 'nv', 'ny': 'ny', 'oc': 'oc', 'oj': 'oj', 'om': 'om', 'or': 'or',\n  'os': 'os', 'pa': 'pa', 'pi': 'pi', 'pl': 'pl', 'ps': 'ps', 'pt': 'pt',\n  'qu': 'qu', 'rm': 'rm', 'rn': 'rn', 'ro': 'ro', 'ru': 'ru', 'rw': 'rw',\n  'sa': 'sa', 'sc': 'sc', 'sd': 'sd', 'se': 'se', 'sg': 'sg', 'sh': 'sh',\n  'si': 'si', 'sk': 'sk', 'sl': 'sl', 'sm': 'sm', 'sn': 'sn', 'so': 'so',\n  'sq': 'sq', 'sr': 'sr', 'ss': 'ss', 'st': 'st', 'su': 'su', 'sv': 'sv',\n  'sw': 'sw', 'ta': 'ta', 'te': 'te', 'tg': 'tg', 'th': 'th', 'ti': 'ti',\n  'tk': 'tk', 'tl': 'tl', 'tn': 'tn', 'to': 'to', 'tr': 'tr', 'ts': 'ts',\n  'tt': 'tt', 'tw': 'tw', 'ty': 'ty', 'ug': 'ug', 'uk': 'uk', 'ur': 'ur',\n  'uz': 'uz', 've': 've', 'vi': 'vi', 'vo': 'vo', 'wa': 'wa', 'wo': 'wo',\n  'xh': 'xh', 'yi': 'yi', 'yo': 'yo', 'za': 'za', 'zh': 'zh', 'zu': 'zu',\n  'aar': 'aar', 'abk': 'abk', 'ave': 'ave', 'afr': 'afr', 'aka': 'aka',\n  'amh': 'amh', 'arg': 'arg', 'ara': 'ara', 'asm': 'asm', 'ava': 'ava',\n  'aym': 'aym', 'aze': 'aze', 'bak': 'bak', 'bel': 'bel', 'bul': 'bul',\n  'bih': 'bih', 'bis': 'bis', 'bam': 'bam', 'ben': 'ben', 'tib': 'tib',\n  'bod': 'bod', 'bre': 'bre', 'bos': 'bos', 'cat': 'cat', 'che': 'che',\n  'cha': 'cha', 'cos': 'cos', 'cre': 'cre', 'cze': 'cze', 'ces': 'ces',\n  'chu': 'chu', 'chv': 'chv', 'wel': 'wel', 'cym': 'cym', 'dan': 'dan',\n  'ger': 'ger', 'deu': 'deu', 'div': 'div', 'dzo': 'dzo', 'ewe': 'ewe',\n  'gre': 'gre', 'ell': 'ell', 'eng': 'eng', 'epo': 'epo', 'spa': 'spa',\n  'est': 'est', 'baq': 'baq', 'eus': 'eus', 'per': 'per', 'fas': 'fas',\n  'ful': 'ful', 'fin': 'fin', 'fij': 'fij', 'fao': 'fao', 'fre': 'fre',\n  'fra': 'fra', 'fry': 'fry', 'gle': 'gle', 'gla': 'gla', 'glg': 'glg',\n  'grn': 'grn', 'guj': 'guj', 'glv': 'glv', 'hau': 'hau', 'heb': 'heb',\n  'hin': 'hin', 'hmo': 'hmo', 'hrv': 'hrv', 'hat': 'hat', 'hun': 'hun',\n  'arm': 'arm', 'hye': 'hye', 'her': 'her', 'ina': 'ina', 'ind': 'ind',\n  'ile': 'ile', 'ibo': 'ibo', 'iii': 'iii', 'ipk': 'ipk', 'ido': 'ido',\n  'ice': 'ice', 'isl': 'isl', 'ita': 'ita', 'iku': 'iku', 'jpn': 'jpn',\n  'jav': 'jav', 'geo': 'geo', 'kat': 'kat', 'kon': 'kon', 'kik': 'kik',\n  'kua': 'kua', 'kaz': 'kaz', 'kal': 'kal', 'khm': 'khm', 'kan': 'kan',\n  'kor': 'kor', 'kau': 'kau', 'kas': 'kas', 'kur': 'kur', 'kom': 'kom',\n  'cor': 'cor', 'kir': 'kir', 'lat': 'lat', 'ltz': 'ltz', 'lug': 'lug',\n  'lim': 'lim', 'lin': 'lin', 'lao': 'lao', 'lit': 'lit', 'lub': 'lub',\n  'lav': 'lav', 'mlg': 'mlg', 'mah': 'mah', 'mao': 'mao', 'mri': 'mri',\n  'mac': 'mac', 'mkd': 'mkd', 'mal': 'mal', 'mon': 'mon', 'mol': 'mol',\n  'mar': 'mar', 'may': 'may', 'msa': 'msa', 'mlt': 'mlt', 'bur': 'bur',\n  'mya': 'mya', 'nau': 'nau', 'nob': 'nob', 'nde': 'nde', 'nep': 'nep',\n  'ndo': 'ndo', 'dut': 'dut', 'nld': 'nld', 'nno': 'nno', 'nor': 'nor',\n  'nbl': 'nbl', 'nav': 'nav', 'nya': 'nya', 'oci': 'oci', 'oji': 'oji',\n  'orm': 'orm', 'ori': 'ori', 'oss': 'oss', 'pan': 'pan', 'pli': 'pli',\n  'pol': 'pol', 'pus': 'pus', 'por': 'por', 'que': 'que', 'roh': 'roh',\n  'run': 'run', 'rum': 'rum', 'ron': 'ron', 'rus': 'rus', 'kin': 'kin',\n  'san': 'san', 'srd': 'srd', 'snd': 'snd', 'sme': 'sme', 'sag': 'sag',\n  'slo': 'slo', 'sin': 'sin', 'slk': 'slk', 'slv': 'slv', 'smo': 'smo',\n  'sna': 'sna', 'som': 'som', 'alb': 'alb', 'sqi': 'sqi', 'srp': 'srp',\n  'ssw': 'ssw', 'sot': 'sot', 'sun': 'sun', 'swe': 'swe', 'swa': 'swa',\n  'tam': 'tam', 'tel': 'tel', 'tgk': 'tgk', 'tha': 'tha', 'tir': 'tir',\n  'tuk': 'tuk', 'tgl': 'tgl', 'tsn': 'tsn', 'ton': 'ton', 'tur': 'tur',\n  'tso': 'tso', 'tat': 'tat', 'twi': 'twi', 'tah': 'tah', 'uig': 'uig',\n  'ukr': 'ukr', 'urd': 'urd', 'uzb': 'uzb', 'ven': 'ven', 'vie': 'vie',\n  'vol': 'vol', 'wln': 'wln', 'wol': 'wol', 'xho': 'xho', 'yid': 'yid',\n  'yor': 'yor', 'zha': 'zha', 'chi': 'chi', 'zho': 'zho', 'zul': 'zul',\n};\n\nexport default ValidLanguages;\n","// @flow\n\nconst scorm12 = {\n  CMIString256: '^.{0,255}$',\n  CMIString4096: '^.{0,4096}$',\n  CMITime: '^(?:[01]\\\\d|2[0123]):(?:[012345]\\\\d):(?:[012345]\\\\d)$', // eslint-disable-line\n  CMITimespan: '^([0-9]{2,}):([0-9]{2}):([0-9]{2})(\\.[0-9]{1,2})?$', // eslint-disable-line\n  CMIInteger: '^\\\\d+$',\n  CMISInteger: '^-?([0-9]+)$',\n  CMIDecimal: '^-?([0-9]{0,3})(\\.[0-9]*)?$', // eslint-disable-line\n  CMIIdentifier: '^[\\\\u0021-\\\\u007E\\\\s]{0,255}$',\n  CMIFeedback: '^.{0,255}$', // This must be redefined\n  CMIIndex: '[._](\\\\d+).',\n\n  // Vocabulary Data Type Definition\n  CMIStatus: '^(passed|completed|failed|incomplete|browsed)$',\n  CMIStatus2: '^(passed|completed|failed|incomplete|browsed|not attempted)$',\n  CMIExit: '^(time-out|suspend|logout|)$',\n  CMIType: '^(true-false|choice|fill-in|matching|performance|sequencing|likert|numeric)$',\n  CMIResult: '^(correct|wrong|unanticipated|neutral|([0-9]{0,3})?(\\\\.[0-9]*)?)$', // eslint-disable-line\n  NAVEvent: '^(previous|continue)$',\n\n  // Data ranges\n  score_range: '0#100',\n  audio_range: '-1#100',\n  speed_range: '-100#100',\n  weighting_range: '-100#100',\n  text_range: '-1#1',\n};\n\nconst aicc = {\n  ...scorm12, ...{\n    CMIIdentifier: '^\\\\w{1,255}$',\n  },\n};\n\nconst scorm2004 = {\n  CMIString200: '^[\\\\u0000-\\\\uFFFF]{0,200}$',\n  CMIString250: '^[\\\\u0000-\\\\uFFFF]{0,250}$',\n  CMIString1000: '^[\\\\u0000-\\\\uFFFF]{0,1000}$',\n  CMIString4000: '^[\\\\u0000-\\\\uFFFF]{0,4000}$',\n  CMIString64000: '^[\\\\u0000-\\\\uFFFF]{0,64000}$',\n  CMILang: '^([a-zA-Z]{2,3}|i|x)(\\-[a-zA-Z0-9\\-]{2,8})?$|^$', // eslint-disable-line\n  CMILangString250: '^(\\{lang=([a-zA-Z]{2,3}|i|x)(\\-[a-zA-Z0-9\\-]{2,8})?\\})?((?!\\{.*$).{0,250}$)?$', // eslint-disable-line\n  CMILangcr: '^((\\{lang=([a-zA-Z]{2,3}|i|x)?(\\-[a-zA-Z0-9\\-]{2,8})?\\}))(.*?)$', // eslint-disable-line\n  CMILangString250cr: '^((\\{lang=([a-zA-Z]{2,3}|i|x)?(\\-[a-zA-Z0-9\\-]{2,8})?\\})?(.{0,250})?)?$', // eslint-disable-line\n  CMILangString4000: '^(\\{lang=([a-zA-Z]{2,3}|i|x)(\\-[a-zA-Z0-9\\-]{2,8})?\\})?((?!\\{.*$).{0,4000}$)?$', // eslint-disable-line\n  CMITime: '^(19[7-9]{1}[0-9]{1}|20[0-2]{1}[0-9]{1}|203[0-8]{1})((-(0[1-9]{1}|1[0-2]{1}))((-(0[1-9]{1}|[1-2]{1}[0-9]{1}|3[0-1]{1}))(T([0-1]{1}[0-9]{1}|2[0-3]{1})((:[0-5]{1}[0-9]{1})((:[0-5]{1}[0-9]{1})((\\\\.[0-9]{1,2})((Z|([+|-]([0-1]{1}[0-9]{1}|2[0-3]{1})))(:[0-5]{1}[0-9]{1})?)?)?)?)?)?)?)?$',\n  CMITimespan: '^P(?:([.,\\\\d]+)Y)?(?:([.,\\\\d]+)M)?(?:([.,\\\\d]+)W)?(?:([.,\\\\d]+)D)?(?:T?(?:([.,\\\\d]+)H)?(?:([.,\\\\d]+)M)?(?:([.,\\\\d]+)S)?)?$',\n  CMIInteger: '^\\\\d+$',\n  CMISInteger: '^-?([0-9]+)$',\n  CMIDecimal: '^-?([0-9]{1,5})(\\\\.[0-9]{1,18})?$',\n  CMIIdentifier: '^\\\\S{1,250}[a-zA-Z0-9]$',\n  CMIShortIdentifier: '^[\\\\w\\\\.\\\\-\\\\_]{1,250}$', // eslint-disable-line\n  CMILongIdentifier: '^(?:(?!urn:)\\\\S{1,4000}|urn:[A-Za-z0-9-]{1,31}:\\\\S{1,4000}|.{1,4000})$', // need to re-examine this\n  CMIFeedback: '^.*$', // This must be redefined\n  CMIIndex: '[._](\\\\d+).',\n  CMIIndexStore: '.N(\\\\d+).',\n\n  // Vocabulary Data Type Definition\n  CMICStatus: '^(completed|incomplete|not attempted|unknown)$',\n  CMISStatus: '^(passed|failed|unknown)$',\n  CMIExit: '^(time-out|suspend|logout|normal)$',\n  CMIType: '^(true-false|choice|fill-in|long-fill-in|matching|performance|sequencing|likert|numeric|other)$',\n  CMIResult: '^(correct|incorrect|unanticipated|neutral|-?([0-9]{1,4})(\\\\.[0-9]{1,18})?)$',\n  NAVEvent: '^(previous|continue|exit|exitAll|abandon|abandonAll|suspendAll|\\{target=\\\\S{0,200}[a-zA-Z0-9]\\}choice|jump)$', // eslint-disable-line\n  NAVBoolean: '^(unknown|true|false$)',\n  NAVTarget: '^(previous|continue|choice.{target=\\\\S{0,200}[a-zA-Z0-9]})$',\n\n  // Data ranges\n  scaled_range: '-1#1',\n  audio_range: '0#*',\n  speed_range: '0#*',\n  text_range: '-1#1',\n  progress_range: '0#1',\n};\n\nconst Regex = {\n  aicc: aicc,\n  scorm12: scorm12,\n  scorm2004: scorm2004,\n};\n\nexport default Regex;\n","// @flow\nimport Regex from './regex';\n\nconst scorm2004_regex = Regex.scorm2004;\n\nconst learner = {\n  'true-false': {\n    format: '^true$|^false$',\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n  'choice': {\n    format: scorm2004_regex.CMILongIdentifier,\n    max: 36,\n    delimiter: '[,]',\n    unique: true,\n  },\n  'fill-in': {\n    format: scorm2004_regex.CMILangString250,\n    max: 10,\n    delimiter: '[,]',\n    unique: false,\n  },\n  'long-fill-in': {\n    format: scorm2004_regex.CMILangString4000,\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n  'matching': {\n    format: scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIShortIdentifier,\n    max: 36,\n    delimiter: '[,]',\n    delimiter2: '[.]',\n    unique: false,\n  },\n  'performance': {\n    format: '^$|' + scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIDecimal + '|^$|' +\n        scorm2004_regex.CMIShortIdentifier,\n    max: 250,\n    delimiter: '[,]',\n    delimiter2: '[.]',\n    unique: false,\n  },\n  'sequencing': {\n    format: scorm2004_regex.CMIShortIdentifier,\n    max: 36,\n    delimiter: '[,]',\n    unique: false,\n  },\n  'likert': {\n    format: scorm2004_regex.CMIShortIdentifier,\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n  'numeric': {\n    format: scorm2004_regex.CMIDecimal,\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n  'other': {\n    format: scorm2004_regex.CMIString4000,\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n};\n\nconst correct = {\n  'true-false': {\n    max: 1,\n    delimiter: '',\n    unique: false,\n    duplicate: false,\n    format: '^true$|^false$',\n    limit: 1,\n  },\n  'choice': {\n    max: 36,\n    delimiter: '[,]',\n    unique: true,\n    duplicate: false,\n    format: scorm2004_regex.CMILongIdentifier,\n  },\n  'fill-in': {\n    max: 10,\n    delimiter: '[,]',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMILangString250cr,\n  },\n  'long-fill-in': {\n    max: 1,\n    delimiter: '',\n    unique: false,\n    duplicate: true,\n    format: scorm2004_regex.CMILangString4000,\n  },\n  'matching': {\n    max: 36,\n    delimiter: '[,]',\n    delimiter2: '[.]',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIShortIdentifier,\n  },\n  'performance': {\n    max: 250,\n    delimiter: '[,]',\n    delimiter2: '[.]',\n    unique: false,\n    duplicate: false,\n    format: '^$|' + scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIDecimal + '|^$|' +\n        scorm2004_regex.CMIShortIdentifier,\n  },\n  'sequencing': {\n    max: 36,\n    delimiter: '[,]',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIShortIdentifier,\n  },\n  'likert': {\n    max: 1,\n    delimiter: '',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIShortIdentifier,\n    limit: 1,\n  },\n  'numeric': {\n    max: 2,\n    delimiter: '[:]',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIDecimal,\n    limit: 1,\n  },\n  'other': {\n    max: 1,\n    delimiter: '',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIString4000,\n    limit: 1,\n  },\n};\n\nconst Responses = {\n  learner: learner,\n  correct: correct,\n};\n\nexport default Responses;\n","// @flow\n\nimport APIConstants from './constants/api_constants';\n\nconst scorm12_errors = APIConstants.scorm12.error_descriptions;\nconst aicc_errors = APIConstants.aicc.error_descriptions;\nconst scorm2004_errors = APIConstants.scorm2004.error_descriptions;\n\n/**\n * Base Validation Exception\n */\nexport class ValidationError extends Error {\n  /**\n   * Constructor to take in an error message and code\n   * @param {number} errorCode\n   * @param {string} errorMessage\n   * @param {string} detailedMessage\n   */\n  constructor(errorCode: number, errorMessage: String, detailedMessage: String) {\n    super(errorMessage);\n    this.#errorCode = errorCode;\n    this.#errorMessage = errorMessage;\n    this.#detailedMessage = detailedMessage;\n  }\n\n  #errorCode;\n  #errorMessage;\n  #detailedMessage;\n\n  /**\n   * Getter for #errorCode\n   * @return {number}\n   */\n  get errorCode() {\n    return this.#errorCode;\n  }\n\n  /**\n   * Getter for #errorMessage\n   * @return {string}\n   */\n  get errorMessage() {\n    return this.#errorMessage;\n  }\n\n  /**\n   * Getter for #detailedMessage\n   * @return {string}\n   */\n  get detailedMessage() {\n    return this.#detailedMessage;\n  }\n}\n\n/**\n * SCORM 1.2 Validation Error\n */\nexport class Scorm12ValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(scorm12_errors, String(errorCode))) {\n      super(errorCode, scorm12_errors[String(errorCode)].basicMessage, scorm12_errors[String(errorCode)].detailMessage);\n    } else {\n      super(101, scorm12_errors['101'].basicMessage, scorm12_errors['101'].detailMessage);\n    }\n  }\n}\n\n/**\n * AICC Validation Error\n */\nexport class AICCValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(aicc_errors, String(errorCode))) {\n      super(errorCode, aicc_errors[String(errorCode)].basicMessage, aicc_errors[String(errorCode)].detailMessage);\n    } else {\n      super(101, aicc_errors['101'].basicMessage, aicc_errors['101'].detailMessage);\n    }\n  }\n}\n\n/**\n * SCORM 2004 Validation Error\n */\nexport class Scorm2004ValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(scorm2004_errors, String(errorCode))) {\n      super(errorCode, scorm2004_errors[String(errorCode)].basicMessage, scorm2004_errors[String(errorCode)].detailMessage);\n    } else {\n      super(101, scorm2004_errors['101'].basicMessage, scorm2004_errors['101'].detailMessage);\n    }\n  }\n}\n","// @flow\nexport const SECONDS_PER_SECOND = 1.0;\nexport const SECONDS_PER_MINUTE = 60;\nexport const SECONDS_PER_HOUR = 60 * SECONDS_PER_MINUTE;\nexport const SECONDS_PER_DAY = 24 * SECONDS_PER_HOUR;\n\nconst designations = [\n  ['D', SECONDS_PER_DAY],\n  ['H', SECONDS_PER_HOUR],\n  ['M', SECONDS_PER_MINUTE],\n  ['S', SECONDS_PER_SECOND],\n];\n\n/**\n * Converts a Number to a String of HH:MM:SS\n *\n * @param {Number} totalSeconds\n * @return {string}\n */\nexport function getSecondsAsHHMMSS(totalSeconds: Number) {\n  // SCORM spec does not deal with negative durations, give zero back\n  if (!totalSeconds || totalSeconds <= 0) {\n    return '00:00:00';\n  }\n\n  const hours = Math.floor(totalSeconds / SECONDS_PER_HOUR);\n\n  const dateObj = new Date(totalSeconds * 1000);\n  const minutes = dateObj.getUTCMinutes();\n  // make sure we add any possible decimal value\n  const seconds = dateObj.getSeconds();\n  const ms = totalSeconds % 1.0;\n  let msStr = '';\n  if (countDecimals(ms) > 0) {\n    if (countDecimals(ms) > 2) {\n      msStr = ms.toFixed(2);\n    } else {\n      msStr = String(ms);\n    }\n    msStr = '.' + msStr.split('.')[1];\n  }\n\n  return (hours + ':' + minutes + ':' + seconds).replace(/\\b\\d\\b/g,\n      '0$&') + msStr;\n}\n\n/**\n * Calculate the number of seconds from ISO 8601 Duration\n *\n * @param {Number} seconds\n * @return {String}\n */\nexport function getSecondsAsISODuration(seconds: Number) {\n  // SCORM spec does not deal with negative durations, give zero back\n  if (!seconds || seconds <= 0) {\n    return 'PT0S';\n  }\n\n  let duration = 'P';\n  let remainder = seconds;\n\n  designations.forEach(([sign, current_seconds]) => {\n    let value = Math.floor(remainder / current_seconds);\n\n    remainder = remainder % current_seconds;\n    if (countDecimals(remainder) > 2) {\n      remainder = Number(Number(remainder).toFixed(2));\n    }\n    // If we have anything left in the remainder, and we're currently adding\n    // seconds to the duration, go ahead and add the decimal to the seconds\n    if (sign === 'S' && remainder > 0) {\n      value += remainder;\n    }\n\n    if (value) {\n      if ((duration.indexOf('D') > 0 ||\n          sign === 'H' || sign === 'M' || sign === 'S') &&\n          duration.indexOf('T') === -1) {\n        duration += 'T';\n      }\n      duration += `${value}${sign}`;\n    }\n  });\n\n  return duration;\n}\n\n/**\n * Calculate the number of seconds from HH:MM:SS.DDDDDD\n *\n * @param {string} timeString\n * @param {RegExp} timeRegex\n * @return {number}\n */\nexport function getTimeAsSeconds(timeString: String, timeRegex: RegExp) {\n  if (!timeString || typeof timeString !== 'string' ||\n      !timeString.match(timeRegex)) {\n    return 0;\n  }\n  const parts = timeString.split(':');\n  const hours = Number(parts[0]);\n  const minutes = Number(parts[1]);\n  const seconds = Number(parts[2]);\n  return (hours * 3600) + (minutes * 60) + seconds;\n}\n\n/**\n * Calculate the number of seconds from ISO 8601 Duration\n *\n * @param {string} duration\n * @param {RegExp} durationRegex\n * @return {number}\n */\nexport function getDurationAsSeconds(duration: String, durationRegex: RegExp) {\n  if (!duration || !duration.match(durationRegex)) {\n    return 0;\n  }\n\n  const [, years, months, , days, hours, minutes, seconds] = new RegExp(\n      durationRegex).exec(duration) || [];\n\n  let result = 0.0;\n\n  result += (Number(seconds) || 0.0);\n  result += (Number(minutes) * 60.0 || 0.0);\n  result += (Number(hours) * 3600.0 || 0.0);\n  result += (Number(days) * (60 * 60 * 24.0) || 0.0);\n  result += (Number(years) * (60 * 60 * 24 * 365.0) || 0.0);\n\n  return result;\n}\n\n/**\n * Adds together two ISO8601 Duration strings\n *\n * @param {string} first\n * @param {string} second\n * @param {RegExp} durationRegex\n * @return {string}\n */\nexport function addTwoDurations(\n    first: String,\n    second: String,\n    durationRegex: RegExp) {\n  return getSecondsAsISODuration(\n      getDurationAsSeconds(first, durationRegex) +\n      getDurationAsSeconds(second, durationRegex),\n  );\n}\n\n/**\n * Add together two HH:MM:SS.DD strings\n *\n * @param {string} first\n * @param {string} second\n * @param {RegExp} timeRegex\n * @return {string}\n */\nexport function addHHMMSSTimeStrings(\n    first: String,\n    second: String,\n    timeRegex: RegExp) {\n  return getSecondsAsHHMMSS(\n      getTimeAsSeconds(first, timeRegex) +\n      getTimeAsSeconds(\n          second, timeRegex),\n  );\n}\n\n/**\n * Flatten a JSON object down to string paths for each values\n * @param {object} data\n * @return {object}\n */\nexport function flatten(data) {\n  const result = {};\n\n  /**\n   * Recurse through the object\n   * @param {*} cur\n   * @param {*} prop\n   */\n  function recurse(cur, prop) {\n    if (Object(cur) !== cur) {\n      result[prop] = cur;\n    } else if (Array.isArray(cur)) {\n      for (let i = 0, l = cur.length; i < l; i++) {\n        recurse(cur[i], prop + '[' + i + ']');\n        if (l === 0) result[prop] = [];\n      }\n    } else {\n      let isEmpty = true;\n      for (const p in cur) {\n        if ({}.hasOwnProperty.call(cur, p)) {\n          isEmpty = false;\n          recurse(cur[p], prop ? prop + '.' + p : p);\n        }\n      }\n      if (isEmpty && prop) result[prop] = {};\n    }\n  }\n\n  recurse(data, '');\n  return result;\n}\n\n/**\n * Un-flatten a flat JSON object\n * @param {object} data\n * @return {object}\n */\nexport function unflatten(data) {\n  'use strict';\n  if (Object(data) !== data || Array.isArray(data)) return data;\n  const regex = /\\.?([^.[\\]]+)|\\[(\\d+)]/g;\n  const result = {};\n  for (const p in data) {\n    if ({}.hasOwnProperty.call(data, p)) {\n      let cur = result;\n      let prop = '';\n      let m = regex.exec(p);\n      while (m) {\n        cur = cur[prop] || (cur[prop] = (m[2] ? [] : {}));\n        prop = m[2] || m[1];\n        m = regex.exec(p);\n      }\n      cur[prop] = data[p];\n    }\n  }\n  return result[''] || result;\n}\n\n/**\n * Counts the number of decimal places\n * @param {number} num\n * @return {number}\n */\nexport function countDecimals(num: number) {\n  if (Math.floor(num) === num || String(num).indexOf('.') < 0) return 0;\n  const parts = num.toString().split('.')[1];\n  return parts.length || 0;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Scorm2004API from '../Scorm2004API';\nimport Scorm12API from '../Scorm12API';\nimport AICC from '../AICC';\n\nwindow.Scorm12API = Scorm12API;\nwindow.Scorm2004API = Scorm2004API;\nwindow.AICC = AICC;\n"],"names":["FUNC_ERROR_TEXT","NAN","symbolTag","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","global","_typeof","Object","freeSelf","self","root","Function","objectProto","prototype","objectToString","toString","nativeMax","Math","max","nativeMin","min","now","Date","debounce","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","toNumber","isObject","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","shouldInvoke","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","arguments","value","type","isObjectLike","isSymbol","call","other","valueOf","replace","isBinary","test","slice","module","exports","Scorm12API","CMI","CMIAttemptRecordsObject","CMIEvaluationCommentsObject","CMITriesObject","NAV","AICC","_Scorm12API","_inherits","_super","_createSuper","settings","_this","_classCallCheck","finalSettings","_objectSpread","mastery_override","cmi","nav","_createClass","key","getChildElement","CMIElement","foundFirstIndex","newChild","_get","_getPrototypeOf","stringMatches","replaceWithAnotherScormAPI","newAPI","default","CMIArray","ValidationError","ErrorCodes","APIConstants","unflatten","global_constants","scorm12_error_codes","scorm12","_timeout","WeakMap","_error_codes","_settings","BaseAPI","error_codes","_classPrivateFieldInitSpec","writable","autocommit","autocommitSeconds","asyncCommit","sendBeaconCommit","lmsCommitUrl","dataCommitFormat","commitRequestDataType","autoProgress","logLevel","LOG_LEVEL_ERROR","selfReportSessionTime","alwaysSendTotalTime","strict_errors","xhrHeaders","xhrWithCredentials","responseHandler","xhr","JSON","parse","responseText","hasOwnProperty","status","SCORM_TRUE","errorCode","SCORM_FALSE","requestHandler","commitObject","onLogMessage","messageLevel","logMessage","console","error","LOG_LEVEL_WARNING","warn","LOG_LEVEL_INFO","info","LOG_LEVEL_DEBUG","debug","log","_defineProperty","constructor","currentState","STATE_NOT_INITIALIZED","lastErrorCode","listenerArray","_classPrivateFieldSet","apiLogLevel","initialize","callbackName","initializeMessage","terminationMessage","returnValue","isInitialized","throwSCORMError","_classPrivateFieldGet","INITIALIZED","isTerminated","TERMINATED","setStartTime","STATE_INITIALIZED","processListeners","apiLog","clearSCORMError","get","set","terminate","checkTerminated","checkState","TERMINATION_BEFORE_INIT","MULTIPLE_TERMINATION","STATE_TERMINATED","storeData","getValue","RETRIEVE_BEFORE_INIT","RETRIEVE_AFTER_TERM","getCMIValue","e","message","GENERAL","setValue","commitCallback","String","STORE_BEFORE_INIT","STORE_AFTER_TERM","setCMIValue","scheduleCommit","commit","clearScheduledCommit","COMMIT_BEFORE_INIT","COMMIT_AFTER_TERM","getLastError","getErrorString","CMIErrorCode","getLmsErrorMessageDetails","getDiagnostic","beforeInitError","afterTermError","isNotInitialized","functionName","formatMessage","baseLength","messageString","fillChars","length","i","CMIElementBaseLength","j","str","tester","match","_checkObjectHasProperty","refObject","attribute","getOwnPropertyDescriptor","getPrototypeOf","_errorNumber","_detail","Error","_CMIElement","_value","_commonSetCMIValue","methodName","scorm2004","structure","split","invalidErrorMessage","concat","invalidErrorCode","UNDEFINED_DATA_MODEL","substr","_isTargetValid","READ_ONLY_ELEMENT","validateCorrectResponse","index","isNaN","item","childArray","initialized","push","_foundFirstIndex","_commonGetCMIValue","uninitializedErrorMessage","target","VALUE_NOT_INITIALIZED","CHILDREN_ERROR","COUNT_ERROR","on","listenerName","callback","listenerFunctions","listenerSplit","off","_loop","v","removeIndex","findIndex","obj","splice","_ret","clear","_this2","_loop2","filter","_ret2","listener","functionsMatch","listenerHasCMIElement","CMIElementsMatch","substring","indexOf","errorNumber","success","_calculateTotalTime","loadFromFlattenedJSON","json","_this3","testPattern","a","c","a_pattern","a_match","c_match","a_num","Number","c_num","int_pattern","obj_pattern","keys","map","sort","_ref","_ref2","_ref3","_slicedToArray","b","_ref4","d","forEach","element","loadFromJSON","startingData","currentCMIElement","renderCMIToJSONString","stringify","renderCMIToJSONObject","renderCommitCMI","_terminateCommit","processHttpRequest","url","params","immediate","api","process","genericError","httpReq","XMLHttpRequest","open","header","setRequestHeader","withCredentials","onload","Array","send","join","fetch","method","body","headers","credentials","keepalive","when","ScheduledCommit","_API","_cancelled","_timeout2","_callback","API","wrapper","bind","CMIInteractionsCorrectResponsesObject","CMIInteractionsObject","CMIInteractionsObjectivesObject","CMIObjectivesObject","Utilities","scorm12_constants","_BaseAPI","LMSInitialize","lmsInitialize","LMSFinish","lmsFinish","LMSGetValue","lmsGetValue","LMSSetValue","lmsSetValue","LMSCommit","lmsCommit","LMSGetLastError","lmsGetLastError","LMSGetErrorString","lmsGetErrorString","LMSGetDiagnostic","lmsGetDiagnostic","event","detail","basicMessage","detailMessage","error_descriptions","terminateCommit","cmiExport","core","total_time","getCurrentTotalTime","flattened","flatten","originalStatus","lesson_status","lesson_mode","credit","student_data","mastery_score","score","raw","parseFloat","_this$startingData","_this$startingData$cm","_this$startingData$cm2","ADL","CMICommentsObject","Responses","ValidLanguages","Regex","scorm2004_constants","scorm2004_error_codes","correct_responses","correct","scorm2004_regex","_version","Scorm2004API","_assertThisInitialized","correct_response","current_index","found","count","_count","adl","Initialize","Terminate","lmsTerminate","GetValue","SetValue","Commit","GetLastError","GetErrorString","GetDiagnostic","request","parts","interaction","interactions","DEPENDENCY_NOT_ESTABLISHED","checkDuplicateChoiceResponse","response_type","checkValidResponseType","GENERAL_SET_FAILURE","interaction_type","nodes","delimiter","checkCorrectResponseValue","interaction_count","response","pattern","pattern_index","limit","duplicate","checkDuplicatedPattern","formatRegex","RegExp","format","removeCorrectResponsePrefixes","delimiter2","values","matches","TYPE_MISMATCH","format2","unique","node","seenOrder","seenCase","seenLang","prefixRegex","langMatches","CMILangcr","lang","toLowerCase","_this$startingData$ad","_this$startingData$ad2","mode","completion_threshold","progress_measure","completion_status","scaled_passing_score","scaled","success_status","navRequest","encodeURIComponent","Scorm12CMI","BaseCMI","checkValidFormat","CMIScore","AICCValidationError","aicc_constants","aicc","aicc_regex","aicc_error_codes","throwReadOnlyError","checkAICCValidFormat","regexPattern","allowEmptyString","_Scorm12CMI$CMI","cmi_children","student_preference","AICCStudentPreferences","AICCCMIStudentData","student_demographics","CMIStudentDemographics","evaluation","CMIEvaluation","paths","CMIPaths","_this$student_prefere","_this$student_data","_this$student_demogra","_this$evaluation","_this$paths","toJSON","jsonString","suspend_data","launch_data","comments","comments_from_lms","objectives","_BaseCMI","_super2","CMIEvaluationComments","_this$comments","_CMIArray","_super3","children","comments_children","INVALID_SET_VALUE","errorClass","_lesson_type","_text_color","_text_location","_text_size","_video","_Scorm12CMI$CMIStuden","_super4","student_preference_children","windows","_this$windows","lesson_type","CMIString256","text_color","text_location","text_size","video","audio","language","speed","text","CMIStudentPreference","_tries_during_lesson","_Scorm12CMI$CMIStuden2","_super5","_this4","student_data_children","tries","CMITries","_this$tries","tries_during_lesson","max_time_allowed","time_limit_action","CMIStudentData","_children","_city","_class","_company","_country","_experience","_familiar_name","_instructor_name","_title","_native_language","_state","_street_address","_telephone","_years_experience","_BaseCMI2","_super6","_this5","student_demographics_children","city","clazz","company","country","experience","familiar_name","instructor_name","title","native_language","state","street_address","telephone","years_experience","class","_CMIArray2","_super7","paths_children","_location_id","_date","_time","_status","_why_left","_time_in_element","CMIPathsObject","_BaseCMI3","_super8","_this6","location_id","date","CMITime","CMIStatus2","why_left","time_in_element","_CMIArray3","_super9","tries_children","_status2","_time2","_BaseCMI4","_super10","_this7","score_children","score_range","invalidTypeCode","invalidRangeCode","VALUE_OUT_OF_RANGE","_this$score","CMIAttemptRecords","_CMIArray4","_super11","attempt_records_children","_lesson_status","_BaseCMI5","_super12","_this8","_this$score2","_content","_location","_time3","_BaseCMI6","_super13","_this9","content","location","scorm12_regex","checkValidRange","rangePattern","ranges","_initialized","_start_time","getTime","_children2","_score_range","_invalid_error_code","_invalid_type_code","_invalid_range_code","_decimal_regex","_error_class","_raw","_min","_max","decimalRegex","CMIDecimal","_errorCode","_errorClass","_children3","Scorm12ValidationError","Util","throwWriteOnlyError","WRITE_ONLY_ELEMENT","throwInvalidValueError","check12ValidFormat","check12ValidRange","_version2","_launch_data","_comments","_comments_from_lms","CMICore","CMIObjectives","CMIInteractions","_this$core","_this$objectives","_this$interactions","_this$core2","CMIString4096","start_time","_student_id","_student_name","_lesson_location","_credit","_entry","_total_time","_lesson_mode","_exit","_session_time","_suspend_data","core_children","student_id","student_name","lesson_location","CMIStatus","entry","exit","CMIExit","session_time","CMITimespan","sessionTime","startTime","seconds","getSecondsAsHHMMSS","addHHMMSSTimeStrings","objectives_children","_children4","_mastery_score","_max_time_allowed","_time_limit_action","_children5","_audio","_language","_speed","_text","CMISInteger","audio_range","speed_range","text_range","interactions_children","_id","_type","_weighting","_student_response","_result","_latency","correct_responses_children","_this$objectives2","_this$correct_respons","id","CMIIdentifier","CMIType","weighting","weighting_range","student_response","CMIFeedback","CMIResult","latency","_id2","_id3","_BaseCMI7","_pattern","_BaseCMI8","_event","_BaseCMI9","NAVEvent","Scorm2004ValidationError","learner_responses","learner","throwTypeMismatchError","throwDependencyNotEstablishedError","throwGeneralSetError","check2004ValidFormat","check2004ValidRange","_completion_status","_completion_threshold","_learner_id","_learner_name","_mode","_progress_measure","_scaled_passing_score","_success_status","learner_preference","CMILearnerPreference","Scorm2004CMIScore","comments_from_learner","CMICommentsFromLearner","CMICommentsFromLMS","_this$learner_prefere","_this$comments_from_l","_this$comments_from_l2","CMICStatus","learner_id","learner_name","CMIString1000","progress_range","CMISStatus","CMIString64000","getSecondsAsISODuration","addTwoDurations","_audio_level","_delivery_speed","_audio_captioning","audio_level","CMILang","delivery_speed","audio_captioning","_timestamp","_learner_response","_description","CMILongIdentifier","timestamp","learner_response","description","CMILangString250","_success_status2","_completion_status2","_progress_measure2","_description2","_scaled","_CMIScore","scaled_range","_comment","_location2","_timestamp2","_readOnlyAfterInit","readOnlyAfterInit","comment","CMILangString4000","CMIString250","ADLNav","_this$nav","_request","_super14","_this10","request_valid","ADLNavRequestValid","_this$request_valid","_continue","_previous","_BaseCMI10","_super15","_this11","_class2","_target","_class4","_","previous","continue","LOG_LEVEL_NONE","INITIALIZATION_FAILED","TERMINATION_FAILURE","ARGUMENT_ERROR","GENERAL_GET_FAILURE","GENERAL_COMMIT_FAILURE","UNIMPLEMENTED_ELEMENT","MULTIPLE_TERMINATIONS","CMIInteger","CMIIndex","CMIString200","CMIString4000","CMILangString250cr","CMIShortIdentifier","CMIIndexStore","NAVBoolean","NAVTarget","scorm12_errors","aicc_errors","scorm2004_errors","_errorMessage","_detailedMessage","_Error","errorMessage","detailedMessage","_wrapNativeSuper","_ValidationError","_possibleConstructorReturn","_ValidationError2","_ValidationError3","SECONDS_PER_SECOND","SECONDS_PER_MINUTE","SECONDS_PER_HOUR","SECONDS_PER_DAY","designations","totalSeconds","hours","floor","dateObj","minutes","getUTCMinutes","getSeconds","ms","msStr","countDecimals","toFixed","duration","remainder","sign","current_seconds","getTimeAsSeconds","timeString","timeRegex","getDurationAsSeconds","durationRegex","exec","years","months","days","first","second","data","recurse","cur","prop","isArray","l","isEmpty","p","regex","m","num","window"],"sourceRoot":""}