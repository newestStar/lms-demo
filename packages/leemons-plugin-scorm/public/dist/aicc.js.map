{"version":3,"file":"aicc.js","mappings":"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","sources":["webpack://scorm-again/./node_modules/lodash.debounce/index.js","webpack://scorm-again/./src/AICC.js","webpack://scorm-again/./src/BaseAPI.js","webpack://scorm-again/./src/Scorm12API.js","webpack://scorm-again/./src/cmi/aicc_cmi.js","webpack://scorm-again/./src/cmi/common.js","webpack://scorm-again/./src/cmi/scorm12_cmi.js","webpack://scorm-again/./src/constants/api_constants.js","webpack://scorm-again/./src/constants/error_codes.js","webpack://scorm-again/./src/constants/regex.js","webpack://scorm-again/./src/exceptions.js","webpack://scorm-again/./src/utilities.js","webpack://scorm-again/webpack/bootstrap","webpack://scorm-again/webpack/runtime/compat get default export","webpack://scorm-again/webpack/runtime/define property getters","webpack://scorm-again/webpack/runtime/global","webpack://scorm-again/webpack/runtime/hasOwnProperty shorthand","webpack://scorm-again/webpack/runtime/make namespace object","webpack://scorm-again/./src/exports/aicc.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","// @flow\nimport Scorm12API from './Scorm12API';\nimport {\n  CMI,\n  CMIAttemptRecordsObject,\n  CMIEvaluationCommentsObject,\n  CMITriesObject,\n} from './cmi/aicc_cmi';\nimport {NAV} from './cmi/scorm12_cmi';\n\n/**\n * The AICC API class\n */\nexport default class AICC extends Scorm12API {\n  /**\n   * Constructor to create AICC API object\n   * @param {object} settings\n   */\n  constructor(settings: {}) {\n    const finalSettings = {\n      ...{\n        mastery_override: false,\n      }, ...settings,\n    };\n\n    super(finalSettings);\n\n    this.cmi = new CMI();\n    this.nav = new NAV();\n  }\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   *\n   * @param {string} CMIElement\n   * @param {any} value\n   * @param {boolean} foundFirstIndex\n   * @return {object}\n   */\n  getChildElement(CMIElement, value, foundFirstIndex) {\n    let newChild = super.getChildElement(CMIElement, value, foundFirstIndex);\n\n    if (!newChild) {\n      if (this.stringMatches(CMIElement, 'cmi\\\\.evaluation\\\\.comments\\\\.\\\\d+')) {\n        newChild = new CMIEvaluationCommentsObject();\n      } else if (this.stringMatches(CMIElement,\n          'cmi\\\\.student_data\\\\.tries\\\\.\\\\d+')) {\n        newChild = new CMITriesObject();\n      } else if (this.stringMatches(CMIElement,\n          'cmi\\\\.student_data\\\\.attempt_records\\\\.\\\\d+')) {\n        newChild = new CMIAttemptRecordsObject();\n      }\n    }\n\n    return newChild;\n  }\n\n  /**\n   * Replace the whole API with another\n   *\n   * @param {AICC} newAPI\n   */\n  replaceWithAnotherScormAPI(newAPI) {\n    // Data Model\n    this.cmi = newAPI.cmi;\n    this.nav = newAPI.nav;\n  }\n}\n","// @flow\nimport {CMIArray} from './cmi/common';\nimport {ValidationError} from './exceptions';\nimport ErrorCodes from './constants/error_codes';\nimport APIConstants from './constants/api_constants';\nimport {unflatten} from './utilities';\nimport debounce from 'lodash.debounce';\n\nconst global_constants = APIConstants.global;\nconst scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Base API class for AICC, SCORM 1.2, and SCORM 2004. Should be considered\n * abstract, and never initialized on it's own.\n */\nexport default class BaseAPI {\n  #timeout;\n  #error_codes;\n  #settings = {\n    autocommit: false,\n    autocommitSeconds: 10,\n    asyncCommit: false,\n    sendBeaconCommit: false,\n    lmsCommitUrl: false,\n    dataCommitFormat: 'json', // valid formats are 'json' or 'flattened', 'params'\n    commitRequestDataType: 'application/json;charset=UTF-8',\n    autoProgress: false,\n    logLevel: global_constants.LOG_LEVEL_ERROR,\n    selfReportSessionTime: false,\n    alwaysSendTotalTime: false,\n    strict_errors: true,\n    xhrHeaders: {},\n    xhrWithCredentials: false,\n    responseHandler: function(xhr) {\n      let result;\n      if (typeof xhr !== 'undefined') {\n        result = JSON.parse(xhr.responseText);\n        if (result === null || !{}.hasOwnProperty.call(result, 'result')) {\n          result = {};\n          if (xhr.status === 200) {\n            result.result = global_constants.SCORM_TRUE;\n            result.errorCode = 0;\n          } else {\n            result.result = global_constants.SCORM_FALSE;\n            result.errorCode = 101;\n          }\n        }\n      }\n      return result;\n    },\n    requestHandler: function(commitObject) {\n      return commitObject;\n    },\n    onLogMessage: function(messageLevel, logMessage) {\n      switch (messageLevel) {\n        case global_constants.LOG_LEVEL_ERROR:\n          console.error(logMessage);\n          break;\n        case global_constants.LOG_LEVEL_WARNING:\n          console.warn(logMessage);\n          break;\n        case global_constants.LOG_LEVEL_INFO:\n          console.info(logMessage);\n          break;\n        case global_constants.LOG_LEVEL_DEBUG:\n          if (console.debug) {\n            console.debug(logMessage);\n          } else {\n            console.log(logMessage);\n          }\n          break;\n      }\n    },\n  };\n  cmi;\n  startingData: {};\n\n  /**\n   * Constructor for Base API class. Sets some shared API fields, as well as\n   * sets up options for the API.\n   * @param {object} error_codes\n   * @param {object} settings\n   */\n  constructor(error_codes, settings) {\n    if (new.target === BaseAPI) {\n      throw new TypeError('Cannot construct BaseAPI instances directly');\n    }\n    this.currentState = global_constants.STATE_NOT_INITIALIZED;\n    this.lastErrorCode = 0;\n    this.listenerArray = [];\n\n    this.#timeout = null;\n    this.#error_codes = error_codes;\n\n    this.settings = settings;\n    this.apiLogLevel = this.settings.logLevel;\n    this.selfReportSessionTime = this.settings.selfReportSessionTime;\n  }\n\n  /**\n   * Initialize the API\n   * @param {string} callbackName\n   * @param {string} initializeMessage\n   * @param {string} terminationMessage\n   * @return {string}\n   */\n  initialize(\n      callbackName: String,\n      initializeMessage?: String,\n      terminationMessage?: String) {\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.isInitialized()) {\n      this.throwSCORMError(this.#error_codes.INITIALIZED, initializeMessage);\n    } else if (this.isTerminated()) {\n      this.throwSCORMError(this.#error_codes.TERMINATED, terminationMessage);\n    } else {\n      if (this.selfReportSessionTime) {\n        this.cmi.setStartTime();\n      }\n\n      this.currentState = global_constants.STATE_INITIALIZED;\n      this.lastErrorCode = 0;\n      returnValue = global_constants.SCORM_TRUE;\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Getter for #error_codes\n   * @return {object}\n   */\n  get error_codes() {\n    return this.#error_codes;\n  }\n\n  /**\n   * Getter for #settings\n   * @return {object}\n   */\n  get settings() {\n    return this.#settings;\n  }\n\n  /**\n   * Setter for #settings\n   * @param {object} settings\n   */\n  set settings(settings: Object) {\n    this.#settings = {...this.#settings, ...settings};\n  }\n\n  /**\n   * Terminates the current run of the API\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @return {string}\n   */\n  terminate(\n      callbackName: String,\n      checkTerminated: boolean) {\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.checkState(checkTerminated,\n        this.#error_codes.TERMINATION_BEFORE_INIT,\n        this.#error_codes.MULTIPLE_TERMINATION)) {\n      this.currentState = global_constants.STATE_TERMINATED;\n\n      const result = this.storeData(true);\n      if (!this.settings.sendBeaconCommit && !this.settings.asyncCommit &&\n        typeof result.errorCode !== 'undefined' && result.errorCode > 0) {\n        this.throwSCORMError(result.errorCode);\n      }\n      returnValue = (typeof result !== 'undefined' && result.result) ?\n        result.result : global_constants.SCORM_FALSE;\n\n      if (checkTerminated) this.lastErrorCode = 0;\n\n      returnValue = global_constants.SCORM_TRUE;\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Get the value of the CMIElement.\n   *\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  getValue(\n      callbackName: String,\n      checkTerminated: boolean,\n      CMIElement: String) {\n    let returnValue;\n\n    if (this.checkState(checkTerminated,\n        this.#error_codes.RETRIEVE_BEFORE_INIT,\n        this.#error_codes.RETRIEVE_AFTER_TERM)) {\n      if (checkTerminated) this.lastErrorCode = 0;\n      try {\n        returnValue = this.getCMIValue(CMIElement);\n      } catch (e) {\n        if (e instanceof ValidationError) {\n          this.lastErrorCode = e.errorCode;\n          returnValue = global_constants.SCORM_FALSE;\n        } else {\n          if (e.message) {\n            console.error(e.message);\n          } else {\n            console.error(e);\n          }\n          this.throwSCORMError(this.#error_codes.GENERAL);\n        }\n      }\n      this.processListeners(callbackName, CMIElement);\n    }\n\n    this.apiLog(callbackName, CMIElement, ': returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Sets the value of the CMIElement.\n   *\n   * @param {string} callbackName\n   * @param {string} commitCallback\n   * @param {boolean} checkTerminated\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  setValue(\n      callbackName: String,\n      commitCallback: String,\n      checkTerminated: boolean,\n      CMIElement,\n      value) {\n    if (value !== undefined) {\n      value = String(value);\n    }\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.checkState(checkTerminated, this.#error_codes.STORE_BEFORE_INIT,\n        this.#error_codes.STORE_AFTER_TERM)) {\n      if (checkTerminated) this.lastErrorCode = 0;\n      try {\n        returnValue = this.setCMIValue(CMIElement, value);\n      } catch (e) {\n        if (e instanceof ValidationError) {\n          this.lastErrorCode = e.errorCode;\n          returnValue = global_constants.SCORM_FALSE;\n        } else {\n          if (e.message) {\n            console.error(e.message);\n          } else {\n            console.error(e);\n          }\n          this.throwSCORMError(this.#error_codes.GENERAL);\n        }\n      }\n      this.processListeners(callbackName, CMIElement, value);\n    }\n\n    if (returnValue === undefined) {\n      returnValue = global_constants.SCORM_FALSE;\n    }\n\n    // If we didn't have any errors while setting the data, go ahead and\n    // schedule a commit, if autocommit is turned on\n    if (String(this.lastErrorCode) === '0') {\n      if (this.settings.autocommit && !this.#timeout) {\n        this.scheduleCommit(this.settings.autocommitSeconds * 1000, commitCallback);\n      }\n    }\n\n    this.apiLog(callbackName, CMIElement,\n        ': ' + value + ': result: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Orders LMS to store all content parameters\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @return {string}\n   */\n  commit(\n      callbackName: String,\n      checkTerminated: boolean) {\n    this.clearScheduledCommit();\n\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.checkState(checkTerminated, this.#error_codes.COMMIT_BEFORE_INIT,\n        this.#error_codes.COMMIT_AFTER_TERM)) {\n      const result = this.storeData(false);\n      if (!this.settings.sendBeaconCommit && !this.settings.asyncCommit &&\n        result.errorCode && result.errorCode > 0) {\n        this.throwSCORMError(result.errorCode);\n      }\n      returnValue = (typeof result !== 'undefined' && result.result) ?\n        result.result : global_constants.SCORM_FALSE;\n\n      this.apiLog(callbackName, 'HttpRequest', ' Result: ' + returnValue,\n          global_constants.LOG_LEVEL_DEBUG);\n\n      if (checkTerminated) this.lastErrorCode = 0;\n\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns last error code\n   * @param {string} callbackName\n   * @return {string}\n   */\n  getLastError(callbackName: String) {\n    const returnValue = String(this.lastErrorCode);\n\n    this.processListeners(callbackName);\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns the errorNumber error description\n   *\n   * @param {string} callbackName\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  getErrorString(callbackName: String, CMIErrorCode) {\n    let returnValue = '';\n\n    if (CMIErrorCode !== null && CMIErrorCode !== '') {\n      returnValue = this.getLmsErrorMessageDetails(CMIErrorCode);\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns a comprehensive description of the errorNumber error.\n   *\n   * @param {string} callbackName\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  getDiagnostic(callbackName: String, CMIErrorCode) {\n    let returnValue = '';\n\n    if (CMIErrorCode !== null && CMIErrorCode !== '') {\n      returnValue = this.getLmsErrorMessageDetails(CMIErrorCode, true);\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Checks the LMS state and ensures it has been initialized.\n   *\n   * @param {boolean} checkTerminated\n   * @param {number} beforeInitError\n   * @param {number} afterTermError\n   * @return {boolean}\n   */\n  checkState(\n      checkTerminated: boolean,\n      beforeInitError: number,\n      afterTermError?: number) {\n    if (this.isNotInitialized()) {\n      this.throwSCORMError(beforeInitError);\n      return false;\n    } else if (checkTerminated && this.isTerminated()) {\n      this.throwSCORMError(afterTermError);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Logging for all SCORM actions\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {string} logMessage\n   * @param {number}messageLevel\n   */\n  apiLog(\n      functionName: String,\n      CMIElement: String,\n      logMessage: String,\n      messageLevel: number) {\n    logMessage = this.formatMessage(functionName, CMIElement, logMessage);\n\n    if (messageLevel >= this.apiLogLevel) {\n      this.settings.onLogMessage(messageLevel, logMessage);\n    }\n  }\n\n  /**\n   * Formats the SCORM messages for easy reading\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {string} message\n   * @return {string}\n   */\n  formatMessage(functionName: String, CMIElement: String, message: String) {\n    const baseLength = 20;\n    let messageString = '';\n\n    messageString += functionName;\n\n    let fillChars = baseLength - messageString.length;\n\n    for (let i = 0; i < fillChars; i++) {\n      messageString += ' ';\n    }\n\n    messageString += ': ';\n\n    if (CMIElement) {\n      const CMIElementBaseLength = 70;\n\n      messageString += CMIElement;\n\n      fillChars = CMIElementBaseLength - messageString.length;\n\n      for (let j = 0; j < fillChars; j++) {\n        messageString += ' ';\n      }\n    }\n\n    if (message) {\n      messageString += message;\n    }\n\n    return messageString;\n  }\n\n  /**\n   * Checks to see if {str} contains {tester}\n   *\n   * @param {string} str String to check against\n   * @param {string} tester String to check for\n   * @return {boolean}\n   */\n  stringMatches(str: String, tester: String) {\n    return str && tester && str.match(tester);\n  }\n\n  /**\n   * Check to see if the specific object has the given property\n   * @param {*} refObject\n   * @param {string} attribute\n   * @return {boolean}\n   * @private\n   */\n  _checkObjectHasProperty(refObject, attribute: String) {\n    return Object.hasOwnProperty.call(refObject, attribute) ||\n      Object.getOwnPropertyDescriptor(\n          Object.getPrototypeOf(refObject), attribute) ||\n      (attribute in refObject);\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {(string|number)} _errorNumber\n   * @param {boolean} _detail\n   * @return {string}\n   * @abstract\n   */\n  getLmsErrorMessageDetails(_errorNumber, _detail) {\n    throw new Error(\n        'The getLmsErrorMessageDetails method has not been implemented');\n  }\n\n  /**\n   * Gets the value for the specific element.\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {string} _CMIElement\n   * @return {string}\n   * @abstract\n   */\n  getCMIValue(_CMIElement) {\n    throw new Error('The getCMIValue method has not been implemented');\n  }\n\n  /**\n   * Sets the value for the specific element.\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {string} _CMIElement\n   * @param {any} _value\n   * @return {string}\n   * @abstract\n   */\n  setCMIValue(_CMIElement, _value) {\n    throw new Error('The setCMIValue method has not been implemented');\n  }\n\n  /**\n   * Shared API method to set a valid for a given element.\n   *\n   * @param {string} methodName\n   * @param {boolean} scorm2004\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  _commonSetCMIValue(\n      methodName: String, scorm2004: boolean, CMIElement, value) {\n    if (!CMIElement || CMIElement === '') {\n      return global_constants.SCORM_FALSE;\n    }\n\n    const structure = CMIElement.split('.');\n    let refObject = this;\n    let returnValue = global_constants.SCORM_FALSE;\n    let foundFirstIndex = false;\n\n    const invalidErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;\n    const invalidErrorCode = scorm2004 ?\n      this.#error_codes.UNDEFINED_DATA_MODEL :\n      this.#error_codes.GENERAL;\n\n    for (let i = 0; i < structure.length; i++) {\n      const attribute = structure[i];\n\n      if (i === structure.length - 1) {\n        if (scorm2004 && (attribute.substr(0, 8) === '{target=') &&\n          (typeof refObject._isTargetValid == 'function')) {\n          this.throwSCORMError(this.#error_codes.READ_ONLY_ELEMENT);\n        } else if (!this._checkObjectHasProperty(refObject, attribute)) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n        } else {\n          if (this.isInitialized() &&\n            this.stringMatches(CMIElement, '\\\\.correct_responses\\\\.\\\\d+')) {\n            this.validateCorrectResponse(CMIElement, value);\n          }\n\n          if (!scorm2004 || this.lastErrorCode === 0) {\n            refObject[attribute] = value;\n            returnValue = global_constants.SCORM_TRUE;\n          }\n        }\n      } else {\n        refObject = refObject[attribute];\n        if (!refObject) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n          break;\n        }\n\n        if (refObject instanceof CMIArray) {\n          const index = parseInt(structure[i + 1], 10);\n\n          // SCO is trying to set an item on an array\n          if (!isNaN(index)) {\n            const item = refObject.childArray[index];\n\n            if (item) {\n              refObject = item;\n              foundFirstIndex = true;\n            } else {\n              const newChild = this.getChildElement(CMIElement, value,\n                  foundFirstIndex);\n              foundFirstIndex = true;\n\n              if (!newChild) {\n                this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n              } else {\n                if (refObject.initialized) newChild.initialize();\n\n                refObject.childArray.push(newChild);\n                refObject = newChild;\n              }\n            }\n\n            // Have to update i value to skip the array position\n            i++;\n          }\n        }\n      }\n    }\n\n    if (returnValue === global_constants.SCORM_FALSE) {\n      this.apiLog(methodName, null,\n          `There was an error setting the value for: ${CMIElement}, value of: ${value}`,\n          global_constants.LOG_LEVEL_WARNING);\n    }\n\n    return returnValue;\n  }\n\n  /**\n   * Abstract method for validating that a response is correct.\n   *\n   * @param {string} _CMIElement\n   * @param {*} _value\n   */\n  validateCorrectResponse(_CMIElement, _value) {\n    // just a stub method\n  }\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   * APIs that inherit BaseAPI should override this method.\n   *\n   * @param {string} _CMIElement - unused\n   * @param {*} _value - unused\n   * @param {boolean} _foundFirstIndex - unused\n   * @return {*}\n   * @abstract\n   */\n  getChildElement(_CMIElement, _value, _foundFirstIndex) {\n    throw new Error('The getChildElement method has not been implemented');\n  }\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} methodName\n   * @param {boolean} scorm2004\n   * @param {string} CMIElement\n   * @return {*}\n   */\n  _commonGetCMIValue(methodName: String, scorm2004: boolean, CMIElement) {\n    if (!CMIElement || CMIElement === '') {\n      return '';\n    }\n\n    const structure = CMIElement.split('.');\n    let refObject = this;\n    let attribute = null;\n\n    const uninitializedErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) has not been initialized.`;\n    const invalidErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;\n    const invalidErrorCode = scorm2004 ?\n      this.#error_codes.UNDEFINED_DATA_MODEL :\n      this.#error_codes.GENERAL;\n\n    for (let i = 0; i < structure.length; i++) {\n      attribute = structure[i];\n\n      if (!scorm2004) {\n        if (i === structure.length - 1) {\n          if (!this._checkObjectHasProperty(refObject, attribute)) {\n            this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n            return;\n          }\n        }\n      } else {\n        if ((String(attribute).substr(0, 8) === '{target=') &&\n          (typeof refObject._isTargetValid == 'function')) {\n          const target = String(attribute).substr(8, String(attribute).length - 9);\n          return refObject._isTargetValid(target);\n        } else if (!this._checkObjectHasProperty(refObject, attribute)) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n          return;\n        }\n      }\n\n      refObject = refObject[attribute];\n      if (refObject === undefined) {\n        this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n        break;\n      }\n\n      if (refObject instanceof CMIArray) {\n        const index = parseInt(structure[i + 1], 10);\n\n        // SCO is trying to set an item on an array\n        if (!isNaN(index)) {\n          const item = refObject.childArray[index];\n\n          if (item) {\n            refObject = item;\n          } else {\n            this.throwSCORMError(this.#error_codes.VALUE_NOT_INITIALIZED,\n                uninitializedErrorMessage);\n            break;\n          }\n\n          // Have to update i value to skip the array position\n          i++;\n        }\n      }\n    }\n\n    if (refObject === null || refObject === undefined) {\n      if (!scorm2004) {\n        if (attribute === '_children') {\n          this.throwSCORMError(scorm12_error_codes.CHILDREN_ERROR);\n        } else if (attribute === '_count') {\n          this.throwSCORMError(scorm12_error_codes.COUNT_ERROR);\n        }\n      }\n    } else {\n      return refObject;\n    }\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_INITIALIZED\n   *\n   * @return {boolean}\n   */\n  isInitialized() {\n    return this.currentState === global_constants.STATE_INITIALIZED;\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_NOT_INITIALIZED\n   *\n   * @return {boolean}\n   */\n  isNotInitialized() {\n    return this.currentState === global_constants.STATE_NOT_INITIALIZED;\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_TERMINATED\n   *\n   * @return {boolean}\n   */\n  isTerminated() {\n    return this.currentState === global_constants.STATE_TERMINATED;\n  }\n\n  /**\n   * Provides a mechanism for attaching to a specific SCORM event\n   *\n   * @param {string} listenerName\n   * @param {function} callback\n   */\n  on(listenerName: String, callback: function) {\n    if (!callback) return;\n\n    const listenerFunctions = listenerName.split(' ');\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split('.');\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + '.', '');\n      }\n\n      this.listenerArray.push({\n        functionName: functionName,\n        CMIElement: CMIElement,\n        callback: callback,\n      });\n\n      this.apiLog('on', functionName, `Added event listener: ${this.listenerArray.length}`, global_constants.LOG_LEVEL_INFO);\n    }\n  }\n\n  /**\n   * Provides a mechanism for detaching a specific SCORM event listener\n   *\n   * @param {string} listenerName\n   * @param {function} callback\n   */\n  off(listenerName: String, callback: function) {\n    if (!callback) return;\n\n    const listenerFunctions = listenerName.split(' ');\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split('.');\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + '.', '');\n      }\n\n      const removeIndex = this.listenerArray.findIndex((obj) =>\n        obj.functionName === functionName &&\n        obj.CMIElement === CMIElement &&\n        obj.callback === callback,\n      );\n      if (removeIndex !== -1) {\n        this.listenerArray.splice(removeIndex, 1);\n        this.apiLog('off', functionName, `Removed event listener: ${this.listenerArray.length}`, global_constants.LOG_LEVEL_INFO);\n      }\n    }\n  }\n\n  /**\n   * Provides a mechanism for clearing all listeners from a specific SCORM event\n   *\n   * @param {string} listenerName\n   */\n  clear(listenerName: String) {\n    const listenerFunctions = listenerName.split(' ');\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split('.');\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + '.', '');\n      }\n\n      this.listenerArray = this.listenerArray.filter((obj) =>\n        obj.functionName !== functionName &&\n        obj.CMIElement !== CMIElement,\n      );\n    }\n  }\n\n  /**\n   * Processes any 'on' listeners that have been created\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {*} value\n   */\n  processListeners(functionName: String, CMIElement: String, value: any) {\n    this.apiLog(functionName, CMIElement, value);\n    for (let i = 0; i < this.listenerArray.length; i++) {\n      const listener = this.listenerArray[i];\n      const functionsMatch = listener.functionName === functionName;\n      const listenerHasCMIElement = !!listener.CMIElement;\n      let CMIElementsMatch = false;\n      if (CMIElement && listener.CMIElement &&\n        listener.CMIElement.substring(listener.CMIElement.length - 1) ===\n        '*') {\n        CMIElementsMatch = CMIElement.indexOf(listener.CMIElement.substring(0,\n            listener.CMIElement.length - 1)) === 0;\n      } else {\n        CMIElementsMatch = listener.CMIElement === CMIElement;\n      }\n\n      if (functionsMatch && (!listenerHasCMIElement || CMIElementsMatch)) {\n        listener.callback(CMIElement, value);\n      }\n    }\n  }\n\n  /**\n   * Throws a SCORM error\n   *\n   * @param {number} errorNumber\n   * @param {string} message\n   */\n  throwSCORMError(errorNumber: number, message: String) {\n    if (!message) {\n      message = this.getLmsErrorMessageDetails(errorNumber);\n    }\n\n    this.apiLog('throwSCORMError', null, errorNumber + ': ' + message,\n        global_constants.LOG_LEVEL_ERROR);\n\n    this.lastErrorCode = String(errorNumber);\n  }\n\n  /**\n   * Clears the last SCORM error code on success.\n   *\n   * @param {string} success\n   */\n  clearSCORMError(success: String) {\n    if (success !== undefined && success !== global_constants.SCORM_FALSE) {\n      this.lastErrorCode = 0;\n    }\n  }\n\n  /**\n   * Attempts to store the data to the LMS, logs data if no LMS configured\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {boolean} _calculateTotalTime\n   * @return {string}\n   * @abstract\n   */\n  storeData(_calculateTotalTime) {\n    throw new Error(\n        'The storeData method has not been implemented');\n  }\n\n  /**\n   * Load the CMI from a flattened JSON object\n   * @param {object} json\n   * @param {string} CMIElement\n   */\n  loadFromFlattenedJSON(json, CMIElement) {\n    if (!this.isNotInitialized()) {\n      console.error(\n          'loadFromFlattenedJSON can only be called before the call to lmsInitialize.');\n      return;\n    }\n\n    /**\n     * Test match pattern.\n     *\n     * @param {string} a\n     * @param {string} c\n     * @param {RegExp} a_pattern\n     * @return {number}\n     */\n    function testPattern(a, c, a_pattern) {\n      const a_match = a.match(a_pattern);\n\n      let c_match;\n      if (a_match !== null && (c_match = c.match(a_pattern)) !== null) {\n        const a_num = Number(a_match[2]);\n        const c_num = Number(c_match[2]);\n        if (a_num === c_num) {\n          if (a_match[3] === 'id') {\n            return -1;\n          } else if (a_match[3] === 'type') {\n            if (c_match[3] === 'id') {\n              return 1;\n            } else {\n              return -1;\n            }\n          } else {\n            return 1;\n          }\n        }\n        return a_num - c_num;\n      }\n\n      return null;\n    }\n\n    const int_pattern = /^(cmi\\.interactions\\.)(\\d+)\\.(.*)$/;\n    const obj_pattern = /^(cmi\\.objectives\\.)(\\d+)\\.(.*)$/;\n\n    const result = Object.keys(json).map(function(key) {\n      return [String(key), json[key]];\n    });\n\n    // CMI interactions need to have id and type loaded before any other fields\n    result.sort(function([a, b], [c, d]) {\n      let test;\n      if ((test = testPattern(a, c, int_pattern)) !== null) {\n        return test;\n      }\n      if ((test = testPattern(a, c, obj_pattern)) !== null) {\n        return test;\n      }\n\n      if (a < c) {\n        return -1;\n      }\n      if (a > c) {\n        return 1;\n      }\n      return 0;\n    });\n\n    let obj;\n    result.forEach((element) => {\n      obj = {};\n      obj[element[0]] = element[1];\n      this.loadFromJSON(unflatten(obj), CMIElement);\n    });\n  }\n\n  /**\n   * Loads CMI data from a JSON object.\n   *\n   * @param {object} json\n   * @param {string} CMIElement\n   */\n  loadFromJSON(json, CMIElement) {\n    if (!this.isNotInitialized()) {\n      console.error(\n          'loadFromJSON can only be called before the call to lmsInitialize.');\n      return;\n    }\n\n    CMIElement = CMIElement !== undefined ? CMIElement : 'cmi';\n\n    this.startingData = json;\n\n    // could this be refactored down to flatten(json) then setCMIValue on each?\n    for (const key in json) {\n      if ({}.hasOwnProperty.call(json, key) && json[key]) {\n        const currentCMIElement = (CMIElement ? CMIElement + '.' : '') + key;\n        const value = json[key];\n\n        if (value['childArray']) {\n          for (let i = 0; i < value['childArray'].length; i++) {\n            this.loadFromJSON(value['childArray'][i],\n                currentCMIElement + '.' + i);\n          }\n        } else if (value.constructor === Object) {\n          this.loadFromJSON(value, currentCMIElement);\n        } else {\n          this.setCMIValue(currentCMIElement, value);\n        }\n      }\n    }\n  }\n\n  /**\n   * Render the CMI object to JSON for sending to an LMS.\n   *\n   * @return {string}\n   */\n  renderCMIToJSONString() {\n    const cmi = this.cmi;\n    // Do we want/need to return fields that have no set value?\n    // return JSON.stringify({ cmi }, (k, v) => v === undefined ? null : v, 2);\n    return JSON.stringify({cmi});\n  }\n\n  /**\n   * Returns a JS object representing the current cmi\n   * @return {object}\n   */\n  renderCMIToJSONObject() {\n    // Do we want/need to return fields that have no set value?\n    // return JSON.stringify({ cmi }, (k, v) => v === undefined ? null : v, 2);\n    return JSON.parse(this.renderCMIToJSONString());\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {boolean} _terminateCommit\n   * @return {*}\n   * @abstract\n   */\n  renderCommitCMI(_terminateCommit) {\n    throw new Error(\n        'The storeData method has not been implemented');\n  }\n\n  /**\n   * Send the request to the LMS\n   * @param {string} url\n   * @param {object|Array} params\n   * @param {boolean} immediate\n   * @return {object}\n   */\n  processHttpRequest(url: String, params, immediate = false) {\n    const api = this;\n    const process = function(url, params, settings, error_codes) {\n      const genericError = {\n        'result': global_constants.SCORM_FALSE,\n        'errorCode': error_codes.GENERAL,\n      };\n\n      let result;\n      if (!settings.sendBeaconCommit) {\n        const httpReq = new XMLHttpRequest();\n        httpReq.open('POST', url, settings.asyncCommit);\n\n        if (Object.keys(settings.xhrHeaders).length) {\n          Object.keys(settings.xhrHeaders).forEach((header) => {\n            httpReq.setRequestHeader(header, settings.xhrHeaders[header]);\n          });\n        }\n\n        httpReq.withCredentials = settings.xhrWithCredentials;\n\n        if (settings.asyncCommit) {\n          httpReq.onload = function(e) {\n            if (typeof settings.responseHandler === 'function') {\n              result = settings.responseHandler(httpReq);\n            } else {\n              result = JSON.parse(httpReq.responseText);\n            }\n          };\n        }\n        try {\n          params = settings.requestHandler(params);\n          if (params instanceof Array) {\n            httpReq.setRequestHeader('Content-Type',\n                'application/x-www-form-urlencoded');\n            httpReq.send(params.join('&'));\n          } else {\n            httpReq.setRequestHeader('Content-Type',\n                settings.commitRequestDataType);\n            httpReq.send(JSON.stringify(params));\n          }\n\n          if (!settings.asyncCommit) {\n            if (typeof settings.responseHandler === 'function') {\n              result = settings.responseHandler(httpReq);\n            } else {\n              result = JSON.parse(httpReq.responseText);\n            }\n          } else {\n            result = {};\n            result.result = global_constants.SCORM_TRUE;\n            result.errorCode = 0;\n            api.processListeners('CommitSuccess');\n            return result;\n          }\n        } catch (e) {\n          console.error(e);\n          api.processListeners('CommitError');\n          return genericError;\n        }\n      } else {\n        try {\n          params = settings.requestHandler(params);\n          fetch(url, {\n            method: 'POST',\n            body: params instanceof Array ? params.join('&') : JSON.stringify(params),\n            headers: {\n              ...settings.xhrHeaders,\n              'Content-Type': settings.commitRequestDataType,\n            },\n            credentials: settings.xhrWithCredentials ? 'include' : undefined,\n            keepalive: true,\n          });\n          result = {};\n          result.result = global_constants.SCORM_TRUE;\n          result.errorCode = 0;\n        } catch (e) {\n          console.error(e);\n          api.processListeners('CommitError');\n          return genericError;\n        }\n      }\n\n      if (typeof result === 'undefined') {\n        api.processListeners('CommitError');\n        return genericError;\n      }\n\n      if (result.result === true ||\n        result.result === global_constants.SCORM_TRUE) {\n        api.processListeners('CommitSuccess');\n      } else {\n        api.processListeners('CommitError');\n      }\n\n      return result;\n    };\n\n    if (typeof debounce !== 'undefined') {\n      const debounced = debounce(process, 500);\n      debounced(url, params, this.settings, this.error_codes);\n\n      // if we're terminating, go ahead and commit immediately\n      if (immediate) {\n        debounced.flush();\n      }\n\n      return {\n        result: global_constants.SCORM_TRUE,\n        errorCode: 0,\n      };\n    } else {\n      return process(url, params, this.settings, this.error_codes);\n    }\n  }\n\n  /**\n   * Throws a SCORM error\n   *\n   * @param {number} when - the number of milliseconds to wait before committing\n   * @param {string} callback - the name of the commit event callback\n   */\n  scheduleCommit(when: number, callback: string) {\n    this.#timeout = new ScheduledCommit(this, when, callback);\n    this.apiLog('scheduleCommit', '', 'scheduled',\n        global_constants.LOG_LEVEL_DEBUG);\n  }\n\n  /**\n   * Clears and cancels any currently scheduled commits\n   */\n  clearScheduledCommit() {\n    if (this.#timeout) {\n      this.#timeout.cancel();\n      this.#timeout = null;\n      this.apiLog('clearScheduledCommit', '', 'cleared',\n          global_constants.LOG_LEVEL_DEBUG);\n    }\n  }\n}\n\n/**\n * Private class that wraps a timeout call to the commit() function\n */\nclass ScheduledCommit {\n  #API;\n  #cancelled = false;\n  #timeout;\n  #callback;\n\n  /**\n   * Constructor for ScheduledCommit\n   * @param {BaseAPI} API\n   * @param {number} when\n   * @param {string} callback\n   */\n  constructor(API: any, when: number, callback: string) {\n    this.#API = API;\n    this.#timeout = setTimeout(this.wrapper.bind(this), when);\n    this.#callback = callback;\n  }\n\n  /**\n   * Cancel any currently scheduled commit\n   */\n  cancel() {\n    this.#cancelled = true;\n    if (this.#timeout) {\n      clearTimeout(this.#timeout);\n    }\n  }\n\n  /**\n   * Wrap the API commit call to check if the call has already been cancelled\n   */\n  wrapper() {\n    if (!this.#cancelled) {\n      this.#API.commit(this.#callback);\n    }\n  }\n}\n","// @flow\nimport BaseAPI from './BaseAPI';\nimport {\n  CMI,\n  CMIInteractionsCorrectResponsesObject,\n  CMIInteractionsObject,\n  CMIInteractionsObjectivesObject,\n  CMIObjectivesObject, NAV,\n} from './cmi/scorm12_cmi';\nimport * as Utilities from './utilities';\nimport APIConstants from './constants/api_constants';\nimport ErrorCodes from './constants/error_codes';\n\nconst scorm12_constants = APIConstants.scorm12;\nconst global_constants = APIConstants.global;\nconst scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * API class for SCORM 1.2\n */\nexport default class Scorm12API extends BaseAPI {\n  /**\n   * Constructor for SCORM 1.2 API\n   * @param {object} settings\n   */\n  constructor(settings: {}) {\n    const finalSettings = {\n      ...{\n        mastery_override: false,\n      }, ...settings,\n    };\n\n    super(scorm12_error_codes, finalSettings);\n\n    this.cmi = new CMI();\n    this.nav = new NAV();\n\n    // Rename functions to match 1.2 Spec and expose to modules\n    this.LMSInitialize = this.lmsInitialize;\n    this.LMSFinish = this.lmsFinish;\n    this.LMSGetValue = this.lmsGetValue;\n    this.LMSSetValue = this.lmsSetValue;\n    this.LMSCommit = this.lmsCommit;\n    this.LMSGetLastError = this.lmsGetLastError;\n    this.LMSGetErrorString = this.lmsGetErrorString;\n    this.LMSGetDiagnostic = this.lmsGetDiagnostic;\n  }\n\n  /**\n   * lmsInitialize function from SCORM 1.2 Spec\n   *\n   * @return {string} bool\n   */\n  lmsInitialize() {\n    this.cmi.initialize();\n    return this.initialize('LMSInitialize', 'LMS was already initialized!',\n        'LMS is already finished!');\n  }\n\n  /**\n   * LMSFinish function from SCORM 1.2 Spec\n   *\n   * @return {string} bool\n   */\n  lmsFinish() {\n    const result = this.terminate('LMSFinish', true);\n\n    if (result === global_constants.SCORM_TRUE) {\n      if (this.nav.event !== '') {\n        if (this.nav.event === 'continue') {\n          this.processListeners('SequenceNext');\n        } else {\n          this.processListeners('SequencePrevious');\n        }\n      } else if (this.settings.autoProgress) {\n        this.processListeners('SequenceNext');\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * LMSGetValue function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  lmsGetValue(CMIElement) {\n    return this.getValue('LMSGetValue', false, CMIElement);\n  }\n\n  /**\n   * LMSSetValue function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  lmsSetValue(CMIElement, value) {\n    return this.setValue('LMSSetValue', 'LMSCommit', false, CMIElement, value);\n  }\n\n  /**\n   * LMSCommit function from SCORM 1.2 Spec\n   *\n   * @return {string} bool\n   */\n  lmsCommit() {\n    return this.commit('LMSCommit', false);\n  }\n\n  /**\n   * LMSGetLastError function from SCORM 1.2 Spec\n   *\n   * @return {string}\n   */\n  lmsGetLastError() {\n    return this.getLastError('LMSGetLastError');\n  }\n\n  /**\n   * LMSGetErrorString function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetErrorString(CMIErrorCode) {\n    return this.getErrorString('LMSGetErrorString', CMIErrorCode);\n  }\n\n  /**\n   * LMSGetDiagnostic function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetDiagnostic(CMIErrorCode) {\n    return this.getDiagnostic('LMSGetDiagnostic', CMIErrorCode);\n  }\n\n  /**\n   * Sets a value on the CMI Object\n   *\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  setCMIValue(CMIElement, value) {\n    return this._commonSetCMIValue('LMSSetValue', false, CMIElement, value);\n  }\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} CMIElement\n   * @return {*}\n   */\n  getCMIValue(CMIElement) {\n    return this._commonGetCMIValue('getCMIValue', false, CMIElement);\n  }\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   *\n   * @param {string} CMIElement\n   * @param {*} value\n   * @param {boolean} foundFirstIndex\n   * @return {object}\n   */\n  getChildElement(CMIElement, value, foundFirstIndex) {\n    let newChild;\n\n    if (this.stringMatches(CMIElement, 'cmi\\\\.objectives\\\\.\\\\d+')) {\n      newChild = new CMIObjectivesObject();\n    } else if (foundFirstIndex && this.stringMatches(CMIElement,\n        'cmi\\\\.interactions\\\\.\\\\d+\\\\.correct_responses\\\\.\\\\d+')) {\n      newChild = new CMIInteractionsCorrectResponsesObject();\n    } else if (foundFirstIndex && this.stringMatches(CMIElement,\n        'cmi\\\\.interactions\\\\.\\\\d+\\\\.objectives\\\\.\\\\d+')) {\n      newChild = new CMIInteractionsObjectivesObject();\n    } else if (!foundFirstIndex &&\n        this.stringMatches(CMIElement, 'cmi\\\\.interactions\\\\.\\\\d+')) {\n      newChild = new CMIInteractionsObject();\n    }\n\n    return newChild;\n  }\n\n  /**\n   * Validates Correct Response values\n   *\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {boolean}\n   */\n  validateCorrectResponse(CMIElement, value) {\n    return true;\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber.\n   *\n   * @param {*} errorNumber\n   * @param {boolean} detail\n   * @return {string}\n   */\n  getLmsErrorMessageDetails(errorNumber, detail) {\n    let basicMessage = 'No Error';\n    let detailMessage = 'No Error';\n\n    // Set error number to string since inconsistent from modules if string or number\n    errorNumber = String(errorNumber);\n    if (scorm12_constants.error_descriptions[errorNumber]) {\n      basicMessage = scorm12_constants.error_descriptions[errorNumber].basicMessage;\n      detailMessage = scorm12_constants.error_descriptions[errorNumber].detailMessage;\n    }\n\n    return detail ? detailMessage : basicMessage;\n  }\n\n  /**\n   * Replace the whole API with another\n   *\n   * @param {Scorm12API} newAPI\n   */\n  replaceWithAnotherScormAPI(newAPI) {\n    // Data Model\n    this.cmi = newAPI.cmi;\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   *\n   * @param {boolean} terminateCommit\n   * @return {object|Array}\n   */\n  renderCommitCMI(terminateCommit: boolean) {\n    const cmiExport = this.renderCMIToJSONObject();\n\n    if (terminateCommit) {\n      cmiExport.cmi.core.total_time = this.cmi.getCurrentTotalTime();\n    }\n\n    const result = [];\n    const flattened = Utilities.flatten(cmiExport);\n    switch (this.settings.dataCommitFormat) {\n      case 'flattened':\n        return Utilities.flatten(cmiExport);\n      case 'params':\n        for (const item in flattened) {\n          if ({}.hasOwnProperty.call(flattened, item)) {\n            result.push(`${item}=${flattened[item]}`);\n          }\n        }\n        return result;\n      case 'json':\n      default:\n        return cmiExport;\n    }\n  }\n\n  /**\n   * Attempts to store the data to the LMS\n   *\n   * @param {boolean} terminateCommit\n   * @return {string}\n   */\n  storeData(terminateCommit: boolean) {\n    if (terminateCommit) {\n      const originalStatus = this.cmi.core.lesson_status;\n      if (originalStatus === 'not attempted') {\n        this.cmi.core.lesson_status = 'completed';\n      }\n\n      if (this.cmi.core.lesson_mode === 'normal') {\n        if (this.cmi.core.credit === 'credit') {\n          if (this.settings.mastery_override &&\n              this.cmi.student_data.mastery_score !== '' &&\n              this.cmi.core.score.raw !== '') {\n            if (parseFloat(this.cmi.core.score.raw) >= parseFloat(this.cmi.student_data.mastery_score)) {\n              this.cmi.core.lesson_status = 'passed';\n            } else {\n              this.cmi.core.lesson_status = 'failed';\n            }\n          }\n        }\n      } else if (this.cmi.core.lesson_mode === 'browse') {\n        if ((this.startingData?.cmi?.core?.lesson_status || '') === '' && originalStatus === 'not attempted') {\n          this.cmi.core.lesson_status = 'browsed';\n        }\n      }\n    }\n\n    const commitObject = this.renderCommitCMI(terminateCommit ||\n        this.settings.alwaysSendTotalTime);\n\n    if (this.apiLogLevel === global_constants.LOG_LEVEL_DEBUG) {\n      console.debug('Commit (terminated: ' + (terminateCommit ? 'yes' : 'no') + '): ');\n      console.debug(commitObject);\n    }\n    if (this.settings.lmsCommitUrl) {\n      return this.processHttpRequest(this.settings.lmsCommitUrl, commitObject, terminateCommit);\n    } else {\n      return global_constants.SCORM_TRUE;\n    }\n  }\n}\n","import * as Scorm12CMI from './scorm12_cmi';\nimport {BaseCMI, checkValidFormat, CMIArray, CMIScore} from './common';\nimport APIConstants from '../constants/api_constants';\nimport Regex from '../constants/regex';\nimport ErrorCodes from '../constants/error_codes';\nimport {AICCValidationError} from '../exceptions';\n\nconst aicc_constants = APIConstants.aicc;\nconst aicc_regex = Regex.aicc;\nconst aicc_error_codes = ErrorCodes.scorm12;\n\n/**\n * Helper method for throwing Read Only error\n */\nfunction throwReadOnlyError() {\n  throw new AICCValidationError(aicc_error_codes.READ_ONLY_ELEMENT);\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {*} value\n * @param {string} regexPattern\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nfunction checkAICCValidFormat(\n    value: String,\n    regexPattern: String,\n    allowEmptyString?: boolean) {\n  return checkValidFormat(\n      value,\n      regexPattern,\n      aicc_error_codes.TYPE_MISMATCH,\n      AICCValidationError,\n      allowEmptyString\n  );\n}\n\n/**\n * CMI Class for AICC\n */\nexport class CMI extends Scorm12CMI.CMI {\n  /**\n   * Constructor for AICC CMI object\n   * @param {boolean} initialized\n   */\n  constructor(initialized: boolean) {\n    super(aicc_constants.cmi_children);\n\n    if (initialized) this.initialize();\n\n    this.student_preference = new AICCStudentPreferences();\n    this.student_data = new AICCCMIStudentData();\n    this.student_demographics = new CMIStudentDemographics();\n    this.evaluation = new CMIEvaluation();\n    this.paths = new CMIPaths();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.student_preference?.initialize();\n    this.student_data?.initialize();\n    this.student_demographics?.initialize();\n    this.evaluation?.initialize();\n    this.paths?.initialize();\n  }\n\n  /**\n   * toJSON for cmi\n   *\n   * @return {\n   *    {\n   *      suspend_data: string,\n   *      launch_data: string,\n   *      comments: string,\n   *      comments_from_lms: string,\n   *      core: CMICore,\n   *      objectives: CMIObjectives,\n   *      student_data: CMIStudentData,\n   *      student_preference: CMIStudentPreference,\n   *      interactions: CMIInteractions,\n   *      paths: CMIPaths\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'suspend_data': this.suspend_data,\n      'launch_data': this.launch_data,\n      'comments': this.comments,\n      'comments_from_lms': this.comments_from_lms,\n      'core': this.core,\n      'objectives': this.objectives,\n      'student_data': this.student_data,\n      'student_preference': this.student_preference,\n      'student_demographics': this.student_demographics,\n      'interactions': this.interactions,\n      'evaluation': this.evaluation,\n      'paths': this.paths,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * AICC Evaluation object\n */\nclass CMIEvaluation extends BaseCMI {\n  /**\n   * Constructor for AICC Evaluation object\n   */\n  constructor() {\n    super();\n\n    this.comments = new CMIEvaluationComments();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.comments?.initialize();\n  }\n\n  /**\n   * toJSON for cmi.evaluation object\n   * @return {{comments: CMIEvaluationComments}}\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'comments': this.comments,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing AICC's cmi.evaluation.comments object\n */\nclass CMIEvaluationComments extends CMIArray {\n  /**\n   * Constructor for AICC Evaluation Comments object\n   */\n  constructor() {\n    super({\n      children: aicc_constants.comments_children,\n      errorCode: aicc_error_codes.INVALID_SET_VALUE,\n      errorClass: AICCValidationError,\n    });\n  }\n}\n\n/**\n * StudentPreferences class for AICC\n */\nclass AICCStudentPreferences extends Scorm12CMI.CMIStudentPreference {\n  /**\n   * Constructor for AICC Student Preferences object\n   */\n  constructor() {\n    super(aicc_constants.student_preference_children);\n\n    this.windows = new CMIArray({\n      errorCode: aicc_error_codes.INVALID_SET_VALUE,\n      errorClass: AICCValidationError,\n      children: '',\n    });\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.windows?.initialize();\n  }\n\n  #lesson_type = '';\n  #text_color = '';\n  #text_location = '';\n  #text_size = '';\n  #video = '';\n\n  /**\n   * Getter for #lesson_type\n   * @return {string}\n   */\n  get lesson_type(): string {\n    return this.#lesson_type;\n  }\n\n  /**\n   * Setter for #lesson_type\n   * @param {string} lesson_type\n   */\n  set lesson_type(lesson_type: string) {\n    if (checkAICCValidFormat(lesson_type, aicc_regex.CMIString256)) {\n      this.#lesson_type = lesson_type;\n    }\n  }\n\n  /**\n   * Getter for #text_color\n   * @return {string}\n   */\n  get text_color(): string {\n    return this.#text_color;\n  }\n\n  /**\n   * Setter for #text_color\n   * @param {string} text_color\n   */\n  set text_color(text_color: string) {\n    if (checkAICCValidFormat(text_color, aicc_regex.CMIString256)) {\n      this.#text_color = text_color;\n    }\n  }\n\n  /**\n   * Getter for #text_location\n   * @return {string}\n   */\n  get text_location(): string {\n    return this.#text_location;\n  }\n\n  /**\n   * Setter for #text_location\n   * @param {string} text_location\n   */\n  set text_location(text_location: string) {\n    if (checkAICCValidFormat(text_location, aicc_regex.CMIString256)) {\n      this.#text_location = text_location;\n    }\n  }\n\n  /**\n   * Getter for #text_size\n   * @return {string}\n   */\n  get text_size(): string {\n    return this.#text_size;\n  }\n\n  /**\n   * Setter for #text_size\n   * @param {string} text_size\n   */\n  set text_size(text_size: string) {\n    if (checkAICCValidFormat(text_size, aicc_regex.CMIString256)) {\n      this.#text_size = text_size;\n    }\n  }\n\n  /**\n   * Getter for #video\n   * @return {string}\n   */\n  get video(): string {\n    return this.#video;\n  }\n\n  /**\n   * Setter for #video\n   * @param {string} video\n   */\n  set video(video: string) {\n    if (checkAICCValidFormat(video, aicc_regex.CMIString256)) {\n      this.#video = video;\n    }\n  }\n\n  /**\n   * toJSON for cmi.student_preference\n   *\n   * @return {\n   *    {\n   *      audio: string,\n   *      language: string,\n   *      speed: string,\n   *      text: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'audio': this.audio,\n      'language': this.language,\n      'lesson_type': this.lesson_type,\n      'speed': this.speed,\n      'text': this.text,\n      'text_color': this.text_color,\n      'text_location': this.text_location,\n      'text_size': this.text_size,\n      'video': this.video,\n      'windows': this.windows,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * StudentData class for AICC\n */\nclass AICCCMIStudentData extends Scorm12CMI.CMIStudentData {\n  /**\n   * Constructor for AICC StudentData object\n   */\n  constructor() {\n    super(aicc_constants.student_data_children);\n\n    this.tries = new CMITries();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.tries?.initialize();\n  }\n\n  #tries_during_lesson = '';\n\n  /**\n   * Getter for tries_during_lesson\n   * @return {string}\n   */\n  get tries_during_lesson() {\n    return this.#tries_during_lesson;\n  }\n\n  /**\n   * Setter for #tries_during_lesson. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} tries_during_lesson\n   */\n  set tries_during_lesson(tries_during_lesson) {\n    !this.initialized ?\n        this.#tries_during_lesson = tries_during_lesson :\n        throwReadOnlyError();\n  }\n\n  /**\n   * toJSON for cmi.student_data object\n   * @return {\n   *    {\n   *      mastery_score: string,\n   *      max_time_allowed: string,\n   *      time_limit_action: string,\n   *      tries: CMITries\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'mastery_score': this.mastery_score,\n      'max_time_allowed': this.max_time_allowed,\n      'time_limit_action': this.time_limit_action,\n      'tries': this.tries,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing the AICC cmi.student_demographics object\n */\nexport class CMIStudentDemographics extends BaseCMI {\n  /**\n   * Constructor for AICC StudentDemographics object\n   */\n  constructor() {\n    super();\n  }\n\n  #_children = aicc_constants.student_demographics_children;\n  #city = '';\n  #class = '';\n  #company = '';\n  #country = '';\n  #experience = '';\n  #familiar_name = '';\n  #instructor_name = '';\n  #title = '';\n  #native_language = '';\n  #state = '';\n  #street_address = '';\n  #telephone = '';\n  #years_experience = '';\n\n  /**\n   * Getter for _children\n   * @return {string}\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Getter for city\n   * @return {string}\n   */\n  get city() {\n    return this.#city;\n  }\n\n  /**\n   * Setter for #city. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} city\n   */\n  set city(city) {\n    !this.initialized ?\n        this.#city = city :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for class\n   * @return {string}\n   */\n  get class() {\n    return this.#class;\n  }\n\n  /**\n   * Setter for #class. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} clazz\n   */\n  set class(clazz) {\n    !this.initialized ?\n        this.#class = clazz :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for company\n   * @return {string}\n   */\n  get company() {\n    return this.#company;\n  }\n\n  /**\n   * Setter for #company. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} company\n   */\n  set company(company) {\n    !this.initialized ?\n        this.#company = company :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for country\n   * @return {string}\n   */\n  get country() {\n    return this.#country;\n  }\n\n  /**\n   * Setter for #country. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} country\n   */\n  set country(country) {\n    !this.initialized ?\n        this.#country = country :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for experience\n   * @return {string}\n   */\n  get experience() {\n    return this.#experience;\n  }\n\n  /**\n   * Setter for #experience. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} experience\n   */\n  set experience(experience) {\n    !this.initialized ?\n        this.#experience = experience :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for familiar_name\n   * @return {string}\n   */\n  get familiar_name() {\n    return this.#familiar_name;\n  }\n\n  /**\n   * Setter for #familiar_name. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} familiar_name\n   */\n  set familiar_name(familiar_name) {\n    !this.initialized ?\n        this.#familiar_name = familiar_name :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for instructor_name\n   * @return {string}\n   */\n  get instructor_name() {\n    return this.#instructor_name;\n  }\n\n  /**\n   * Setter for #instructor_name. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} instructor_name\n   */\n  set instructor_name(instructor_name) {\n    !this.initialized ?\n        this.#instructor_name = instructor_name :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for title\n   * @return {string}\n   */\n  get title() {\n    return this.#title;\n  }\n\n  /**\n   * Setter for #title. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} title\n   */\n  set title(title) {\n    !this.initialized ?\n        this.#title = title :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for native_language\n   * @return {string}\n   */\n  get native_language() {\n    return this.#native_language;\n  }\n\n  /**\n   * Setter for #native_language. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} native_language\n   */\n  set native_language(native_language) {\n    !this.initialized ?\n        this.#native_language = native_language :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for state\n   * @return {string}\n   */\n  get state() {\n    return this.#state;\n  }\n\n  /**\n   * Setter for #state. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} state\n   */\n  set state(state) {\n    !this.initialized ?\n        this.#state = state :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for street_address\n   * @return {string}\n   */\n  get street_address() {\n    return this.#street_address;\n  }\n\n  /**\n   * Setter for #street_address. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} street_address\n   */\n  set street_address(street_address) {\n    !this.initialized ?\n        this.#street_address = street_address :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for telephone\n   * @return {string}\n   */\n  get telephone() {\n    return this.#telephone;\n  }\n\n  /**\n   * Setter for #telephone. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} telephone\n   */\n  set telephone(telephone) {\n    !this.initialized ?\n        this.#telephone = telephone :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for years_experience\n   * @return {string}\n   */\n  get years_experience() {\n    return this.#years_experience;\n  }\n\n  /**\n   * Setter for #years_experience. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} years_experience\n   */\n  set years_experience(years_experience) {\n    !this.initialized ?\n        this.#years_experience = years_experience :\n        throwReadOnlyError();\n  }\n\n  /**\n   * toJSON for cmi.student_demographics object\n   * @return {\n   *      {\n   *        city: string,\n   *        class: string,\n   *        company: string,\n   *        country: string,\n   *        experience: string,\n   *        familiar_name: string,\n   *        instructor_name: string,\n   *        title: string,\n   *        native_language: string,\n   *        state: string,\n   *        street_address: string,\n   *        telephone: string,\n   *        years_experience: string\n   *      }\n   *    }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'city': this.city,\n      'class': this.class,\n      'company': this.company,\n      'country': this.country,\n      'experience': this.experience,\n      'familiar_name': this.familiar_name,\n      'instructor_name': this.instructor_name,\n      'title': this.title,\n      'native_language': this.native_language,\n      'state': this.state,\n      'street_address': this.street_address,\n      'telephone': this.telephone,\n      'years_experience': this.years_experience,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing the AICC cmi.paths object\n */\nexport class CMIPaths extends CMIArray {\n  /**\n   * Constructor for inline Paths Array class\n   */\n  constructor() {\n    super({children: aicc_constants.paths_children});\n  }\n}\n\n/**\n * Class for AICC Paths\n */\nexport class CMIPathsObject extends BaseCMI {\n  /**\n   * Constructor for AICC Paths objects\n   */\n  constructor() {\n    super();\n  }\n\n  #location_id = '';\n  #date = '';\n  #time = '';\n  #status = '';\n  #why_left = '';\n  #time_in_element = '';\n\n  /**\n   * Getter for #location_id\n   * @return {string}\n   */\n  get location_id() {\n    return this.#location_id;\n  }\n\n  /**\n   * Setter for #location_id\n   * @param {string} location_id\n   */\n  set location_id(location_id) {\n    if (checkAICCValidFormat(location_id, aicc_regex.CMIString256)) {\n      this.#location_id = location_id;\n    }\n  }\n\n  /**\n   * Getter for #date\n   * @return {string}\n   */\n  get date() {\n    return this.#date;\n  }\n\n  /**\n   * Setter for #date\n   * @param {string} date\n   */\n  set date(date) {\n    if (checkAICCValidFormat(date, aicc_regex.CMIString256)) {\n      this.#date = date;\n    }\n  }\n\n  /**\n   * Getter for #time\n   * @return {string}\n   */\n  get time() {\n    return this.#time;\n  }\n\n  /**\n   * Setter for #time\n   * @param {string} time\n   */\n  set time(time) {\n    if (checkAICCValidFormat(time, aicc_regex.CMITime)) {\n      this.#time = time;\n    }\n  }\n\n  /**\n   * Getter for #status\n   * @return {string}\n   */\n  get status() {\n    return this.#status;\n  }\n\n  /**\n   * Setter for #status\n   * @param {string} status\n   */\n  set status(status) {\n    if (checkAICCValidFormat(status, aicc_regex.CMIStatus2)) {\n      this.#status = status;\n    }\n  }\n\n  /**\n   * Getter for #why_left\n   * @return {string}\n   */\n  get why_left() {\n    return this.#why_left;\n  }\n\n  /**\n   * Setter for #why_left\n   * @param {string} why_left\n   */\n  set why_left(why_left) {\n    if (checkAICCValidFormat(why_left, aicc_regex.CMIString256)) {\n      this.#why_left = why_left;\n    }\n  }\n\n  /**\n   * Getter for #time_in_element\n   * @return {string}\n   */\n  get time_in_element() {\n    return this.#time_in_element;\n  }\n\n  /**\n   * Setter for #time_in_element\n   * @param {string} time_in_element\n   */\n  set time_in_element(time_in_element) {\n    if (checkAICCValidFormat(time_in_element, aicc_regex.CMITime)) {\n      this.#time_in_element = time_in_element;\n    }\n  }\n\n  /**\n   * toJSON for cmi.paths.n object\n   * @return {\n   *    {\n   *      location_id: string,\n   *      date: string,\n   *      time: string,\n   *      status: string,\n   *      why_left: string,\n   *      time_in_element: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'location_id': this.location_id,\n      'date': this.date,\n      'time': this.time,\n      'status': this.status,\n      'why_left': this.why_left,\n      'time_in_element': this.time_in_element,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing the AICC cmi.student_data.tries object\n */\nexport class CMITries extends CMIArray {\n  /**\n   * Constructor for inline Tries Array class\n   */\n  constructor() {\n    super({children: aicc_constants.tries_children});\n  }\n}\n\n/**\n * Class for AICC Tries\n */\nexport class CMITriesObject extends BaseCMI {\n  /**\n   * Constructor for AICC Tries object\n   */\n  constructor() {\n    super();\n\n    this.score = new CMIScore(\n        {\n          score_children: aicc_constants.score_children,\n          score_range: aicc_regex.score_range,\n          invalidErrorCode: aicc_error_codes.INVALID_SET_VALUE,\n          invalidTypeCode: aicc_error_codes.TYPE_MISMATCH,\n          invalidRangeCode: aicc_error_codes.VALUE_OUT_OF_RANGE,\n          errorClass: AICCValidationError,\n        });\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.score?.initialize();\n  }\n\n  #status = '';\n  #time = '';\n\n  /**\n   * Getter for #status\n   * @return {string}\n   */\n  get status() {\n    return this.#status;\n  }\n\n  /**\n   * Setter for #status\n   * @param {string} status\n   */\n  set status(status) {\n    if (checkAICCValidFormat(status, aicc_regex.CMIStatus2)) {\n      this.#status = status;\n    }\n  }\n\n  /**\n   * Getter for #time\n   * @return {string}\n   */\n  get time() {\n    return this.#time;\n  }\n\n  /**\n   * Setter for #time\n   * @param {string} time\n   */\n  set time(time) {\n    if (checkAICCValidFormat(time, aicc_regex.CMITime)) {\n      this.#time = time;\n    }\n  }\n\n  /**\n   * toJSON for cmi.student_data.tries.n object\n   * @return {\n   *    {\n   *      status: string,\n   *      time: string,\n   *      score: CMIScore\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'status': this.status,\n      'time': this.time,\n      'score': this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class for cmi.student_data.attempt_records array\n */\nexport class CMIAttemptRecords extends CMIArray {\n  /**\n   * Constructor for inline Tries Array class\n   */\n  constructor() {\n    super({children: aicc_constants.attempt_records_children});\n  }\n}\n\n/**\n * Class for AICC Attempt Records\n */\nexport class CMIAttemptRecordsObject extends BaseCMI {\n  /**\n   * Constructor for AICC Attempt Records object\n   */\n  constructor() {\n    super();\n\n    this.score = new CMIScore(\n        {\n          score_children: aicc_constants.score_children,\n          score_range: aicc_regex.score_range,\n          invalidErrorCode: aicc_error_codes.INVALID_SET_VALUE,\n          invalidTypeCode: aicc_error_codes.TYPE_MISMATCH,\n          invalidRangeCode: aicc_error_codes.VALUE_OUT_OF_RANGE,\n          errorClass: AICCValidationError,\n        });\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.score?.initialize();\n  }\n\n  #lesson_status = '';\n\n  /**\n   * Getter for #lesson_status\n   * @return {string}\n   */\n  get lesson_status() {\n    return this.#lesson_status;\n  }\n\n  /**\n   * Setter for #lesson_status\n   * @param {string} lesson_status\n   */\n  set lesson_status(lesson_status) {\n    if (checkAICCValidFormat(lesson_status, aicc_regex.CMIStatus2)) {\n      this.#lesson_status = lesson_status;\n    }\n  }\n\n  /**\n   * toJSON for cmi.student_data.attempt_records.n object\n   * @return {\n   *    {\n   *      status: string,\n   *      time: string,\n   *      score: CMIScore\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'lesson_status': this.lesson_status,\n      'score': this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class for AICC Evaluation Comments\n */\nexport class CMIEvaluationCommentsObject extends BaseCMI {\n  /**\n   * Constructor for Evaluation Comments\n   */\n  constructor() {\n    super();\n  }\n\n  #content = '';\n  #location = '';\n  #time = '';\n\n  /**\n   * Getter for #content\n   * @return {string}\n   */\n  get content() {\n    return this.#content;\n  }\n\n  /**\n   * Setter for #content\n   * @param {string} content\n   */\n  set content(content) {\n    if (checkAICCValidFormat(content, aicc_regex.CMIString256)) {\n      this.#content = content;\n    }\n  }\n\n  /**\n   * Getter for #location\n   * @return {string}\n   */\n  get location() {\n    return this.#location;\n  }\n\n  /**\n   * Setter for #location\n   * @param {string} location\n   */\n  set location(location) {\n    if (checkAICCValidFormat(location, aicc_regex.CMIString256)) {\n      this.#location = location;\n    }\n  }\n\n  /**\n   * Getter for #time\n   * @return {string}\n   */\n  get time() {\n    return this.#time;\n  }\n\n  /**\n   * Setting for #time\n   * @param {string} time\n   */\n  set time(time) {\n    if (checkAICCValidFormat(time, aicc_regex.CMITime)) {\n      this.#time = time;\n    }\n  }\n\n  /**\n   * toJSON for cmi.evaulation.comments.n object\n   * @return {\n   *    {\n   *      content: string,\n   *      location: string,\n   *      time: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'content': this.content,\n      'location': this.location,\n      'time': this.time,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","// @flow\nimport APIConstants from '../constants/api_constants';\nimport ErrorCodes from '../constants/error_codes';\nimport Regex from '../constants/regex';\n\nconst scorm12_constants = APIConstants.scorm12;\nconst scorm12_regex = Regex.scorm12;\nconst scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Check if the value matches the proper format. If not, throw proper error code.\n *\n * @param {string} value\n * @param {string} regexPattern\n * @param {number} errorCode\n * @param {class} errorClass\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nexport function checkValidFormat(\n    value: String,\n    regexPattern: String,\n    errorCode: number,\n    errorClass: function,\n    allowEmptyString?: boolean) {\n  const formatRegex = new RegExp(regexPattern);\n  const matches = value.match(formatRegex);\n  if (allowEmptyString && value === '') {\n    return true;\n  }\n  if (value === undefined || !matches || matches[0] === '') {\n    throw new errorClass.prototype.constructor(errorCode);\n  }\n  return true;\n}\n\n/**\n * Check if the value matches the proper range. If not, throw proper error code.\n *\n * @param {*} value\n * @param {string} rangePattern\n * @param {number} errorCode\n * @param {class} errorClass\n * @return {boolean}\n */\nexport function checkValidRange(\n    value: any,\n    rangePattern: String,\n    errorCode: number,\n    errorClass: function) {\n  const ranges = rangePattern.split('#');\n  value = value * 1.0;\n  if (value >= ranges[0]) {\n    if ((ranges[1] === '*') || (value <= ranges[1])) {\n      return true;\n    } else {\n      throw new errorClass.prototype.constructor(errorCode);\n    }\n  } else {\n    throw new errorClass.prototype.constructor(errorCode);\n  }\n}\n\n/**\n * Base class for API cmi objects\n */\nexport class BaseCMI {\n  jsonString = false;\n  #initialized = false;\n  #start_time;\n\n  /**\n   * Constructor for BaseCMI, just marks the class as abstract\n   */\n  constructor() {\n    if (new.target === BaseCMI) {\n      throw new TypeError('Cannot construct BaseCMI instances directly');\n    }\n  }\n\n  /**\n   * Getter for #initialized\n   * @return {boolean}\n   */\n  get initialized() {\n    return this.#initialized;\n  }\n\n  /**\n   * Getter for #start_time\n   * @return {Number}\n   */\n  get start_time() {\n    return this.#start_time;\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    this.#initialized = true;\n  }\n\n  /**\n   * Called when the player should override the 'session_time' provided by\n   * the module\n   */\n  setStartTime() {\n    this.#start_time = new Date().getTime();\n  }\n}\n\n/**\n * Base class for cmi *.score objects\n */\nexport class CMIScore extends BaseCMI {\n  /**\n   * Constructor for *.score\n   * @param {string} score_children\n   * @param {string} score_range\n   * @param {string} max\n   * @param {number} invalidErrorCode\n   * @param {number} invalidTypeCode\n   * @param {number} invalidRangeCode\n   * @param {string} decimalRegex\n   * @param {class} errorClass\n   */\n  constructor(\n      {\n        score_children,\n        score_range,\n        max,\n        invalidErrorCode,\n        invalidTypeCode,\n        invalidRangeCode,\n        decimalRegex,\n        errorClass,\n      }) {\n    super();\n\n    this.#_children = score_children ||\n        scorm12_constants.score_children;\n    this.#_score_range = !score_range ? false : scorm12_regex.score_range;\n    this.#max = (max || max === '') ? max : '100';\n    this.#_invalid_error_code = invalidErrorCode ||\n        scorm12_error_codes.INVALID_SET_VALUE;\n    this.#_invalid_type_code = invalidTypeCode ||\n        scorm12_error_codes.TYPE_MISMATCH;\n    this.#_invalid_range_code = invalidRangeCode ||\n        scorm12_error_codes.VALUE_OUT_OF_RANGE;\n    this.#_decimal_regex = decimalRegex ||\n        scorm12_regex.CMIDecimal;\n    this.#_error_class = errorClass;\n  }\n\n  #_children;\n  #_score_range;\n  #_invalid_error_code;\n  #_invalid_type_code;\n  #_invalid_range_code;\n  #_decimal_regex;\n  #_error_class;\n  #raw = '';\n  #min = '';\n  #max;\n\n  /**\n   * Getter for _children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for _children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children) {\n    throw new this.#_error_class.prototype.constructor(this.#_invalid_error_code);\n  }\n\n  /**\n   * Getter for #raw\n   * @return {string}\n   */\n  get raw() {\n    return this.#raw;\n  }\n\n  /**\n   * Setter for #raw\n   * @param {string} raw\n   */\n  set raw(raw) {\n    if (checkValidFormat(raw, this.#_decimal_regex, this.#_invalid_type_code, this.#_error_class) &&\n        (!this.#_score_range ||\n            checkValidRange(raw, this.#_score_range, this.#_invalid_range_code, this.#_error_class))) {\n      this.#raw = raw;\n    }\n  }\n\n  /**\n   * Getter for #min\n   * @return {string}\n   */\n  get min() {\n    return this.#min;\n  }\n\n  /**\n   * Setter for #min\n   * @param {string} min\n   */\n  set min(min) {\n    if (checkValidFormat(min, this.#_decimal_regex, this.#_invalid_type_code, this.#_error_class) &&\n        (!this.#_score_range ||\n            checkValidRange(min, this.#_score_range, this.#_invalid_range_code, this.#_error_class))) {\n      this.#min = min;\n    }\n  }\n\n  /**\n   * Getter for #max\n   * @return {string}\n   */\n  get max() {\n    return this.#max;\n  }\n\n  /**\n   * Setter for #max\n   * @param {string} max\n   */\n  set max(max) {\n    if (checkValidFormat(max, this.#_decimal_regex, this.#_invalid_type_code, this.#_error_class) &&\n        (!this.#_score_range ||\n            checkValidRange(max, this.#_score_range, this.#_invalid_range_code, this.#_error_class))) {\n      this.#max = max;\n    }\n  }\n\n  /**\n   * toJSON for *.score\n   * @return {{min: string, max: string, raw: string}}\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'raw': this.raw,\n      'min': this.min,\n      'max': this.max,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Base class for cmi *.n objects\n */\nexport class CMIArray extends BaseCMI {\n  /**\n   * Constructor cmi *.n arrays\n   * @param {string} children\n   * @param {number} errorCode\n   * @param {class} errorClass\n   */\n  constructor({children, errorCode, errorClass}) {\n    super();\n    this.#_children = children;\n    this.#errorCode = errorCode;\n    this.#errorClass = errorClass;\n    this.childArray = [];\n  }\n\n  #errorCode;\n  #errorClass;\n  #_children;\n\n  /**\n   * Getter for _children\n   * @return {*}\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for _children. Just throws an error.\n   * @param {string} _children\n   */\n  set _children(_children) {\n    throw new this.#errorClass.prototype.constructor(this.#errorCode);\n  }\n\n  /**\n   * Getter for _count\n   * @return {number}\n   */\n  get _count() {\n    return this.childArray.length;\n  }\n\n  /**\n   * Setter for _count. Just throws an error.\n   * @param {number} _count\n   */\n  set _count(_count) {\n    throw new this.#errorClass.prototype.constructor(this.#errorCode);\n  }\n\n  /**\n   * toJSON for *.n arrays\n   * @return {object}\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {};\n    for (let i = 0; i < this.childArray.length; i++) {\n      result[i + ''] = this.childArray[i];\n    }\n    delete this.jsonString;\n    return result;\n  }\n}\n","// @flow\nimport {\n  BaseCMI,\n  checkValidFormat,\n  checkValidRange,\n  CMIArray,\n  CMIScore,\n} from './common';\nimport APIConstants from '../constants/api_constants';\nimport ErrorCodes from '../constants/error_codes';\nimport Regex from '../constants/regex';\nimport {Scorm12ValidationError} from '../exceptions';\nimport * as Utilities from '../utilities';\nimport * as Util from '../utilities';\n\nconst scorm12_constants = APIConstants.scorm12;\nconst scorm12_regex = Regex.scorm12;\nconst scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Helper method for throwing Read Only error\n */\nexport function throwReadOnlyError() {\n  throw new Scorm12ValidationError(scorm12_error_codes.READ_ONLY_ELEMENT);\n}\n\n/**\n * Helper method for throwing Write Only error\n */\nexport function throwWriteOnlyError() {\n  throw new Scorm12ValidationError(scorm12_error_codes.WRITE_ONLY_ELEMENT);\n}\n\n/**\n * Helper method for throwing Invalid Set error\n */\nfunction throwInvalidValueError() {\n  throw new Scorm12ValidationError(scorm12_error_codes.INVALID_SET_VALUE);\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {*} value\n * @param {string} regexPattern\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nexport function check12ValidFormat(\n    value: String,\n    regexPattern: String,\n    allowEmptyString?: boolean) {\n  return checkValidFormat(\n      value,\n      regexPattern,\n      scorm12_error_codes.TYPE_MISMATCH,\n      Scorm12ValidationError,\n      allowEmptyString\n  );\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {*} value\n * @param {string} rangePattern\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nexport function check12ValidRange(\n    value: any,\n    rangePattern: String,\n    allowEmptyString?: boolean) {\n  return checkValidRange(\n      value,\n      rangePattern,\n      scorm12_error_codes.VALUE_OUT_OF_RANGE,\n      Scorm12ValidationError,\n      allowEmptyString\n  );\n}\n\n/**\n * Class representing the cmi object for SCORM 1.2\n */\nexport class CMI extends BaseCMI {\n  #_children = '';\n  #_version = '3.4';\n  #launch_data = '';\n  #comments = '';\n  #comments_from_lms = '';\n\n  student_data = null;\n\n  /**\n   * Constructor for the SCORM 1.2 cmi object\n   * @param {string} cmi_children\n   * @param {(CMIStudentData|AICCCMIStudentData)} student_data\n   * @param {boolean} initialized\n   */\n  constructor(cmi_children, student_data, initialized: boolean) {\n    super();\n\n    if (initialized) this.initialize();\n\n    this.#_children = cmi_children ?\n        cmi_children :\n        scorm12_constants.cmi_children;\n    this.core = new CMICore();\n    this.objectives = new CMIObjectives();\n    this.student_data = student_data ? student_data : new CMIStudentData();\n    this.student_preference = new CMIStudentPreference();\n    this.interactions = new CMIInteractions();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.core?.initialize();\n    this.objectives?.initialize();\n    this.student_data?.initialize();\n    this.student_preference?.initialize();\n    this.interactions?.initialize();\n  }\n\n  /**\n   * toJSON for cmi\n   *\n   * @return {\n   *    {\n   *      suspend_data: string,\n   *      launch_data: string,\n   *      comments: string,\n   *      comments_from_lms: string,\n   *      core: CMICore,\n   *      objectives: CMIObjectives,\n   *      student_data: CMIStudentData,\n   *      student_preference: CMIStudentPreference,\n   *      interactions: CMIInteractions\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'suspend_data': this.suspend_data,\n      'launch_data': this.launch_data,\n      'comments': this.comments,\n      'comments_from_lms': this.comments_from_lms,\n      'core': this.core,\n      'objectives': this.objectives,\n      'student_data': this.student_data,\n      'student_preference': this.student_preference,\n      'interactions': this.interactions,\n    };\n    delete this.jsonString;\n    return result;\n  }\n\n  /**\n   * Getter for #_version\n   * @return {string}\n   */\n  get _version() {\n    return this.#_version;\n  }\n\n  /**\n   * Setter for #_version. Just throws an error.\n   * @param {string} _version\n   */\n  set _version(_version) {\n    throwInvalidValueError();\n  }\n\n  /**\n   * Getter for #_children\n   * @return {string}\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_version. Just throws an error.\n   * @param {string} _children\n   */\n  set _children(_children) {\n    throwInvalidValueError();\n  }\n\n  /**\n   * Getter for #suspend_data\n   * @return {string}\n   */\n  get suspend_data() {\n    return this.core?.suspend_data;\n  }\n\n  /**\n   * Setter for #suspend_data\n   * @param {string} suspend_data\n   */\n  set suspend_data(suspend_data) {\n    if (this.core) {\n      this.core.suspend_data = suspend_data;\n    }\n  }\n\n  /**\n   * Getter for #launch_data\n   * @return {string}\n   */\n  get launch_data() {\n    return this.#launch_data;\n  }\n\n  /**\n   * Setter for #launch_data. Can only be called before  initialization.\n   * @param {string} launch_data\n   */\n  set launch_data(launch_data) {\n    !this.initialized ? this.#launch_data = launch_data : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #comments\n   * @return {string}\n   */\n  get comments() {\n    return this.#comments;\n  }\n\n  /**\n   * Setter for #comments\n   * @param {string} comments\n   */\n  set comments(comments) {\n    if (check12ValidFormat(comments, scorm12_regex.CMIString4096, true)) {\n      this.#comments = comments;\n    }\n  }\n\n  /**\n   * Getter for #comments_from_lms\n   * @return {string}\n   */\n  get comments_from_lms() {\n    return this.#comments_from_lms;\n  }\n\n  /**\n   * Setter for #comments_from_lms. Can only be called before  initialization.\n   * @param {string} comments_from_lms\n   */\n  set comments_from_lms(comments_from_lms) {\n    !this.initialized ?\n        this.#comments_from_lms = comments_from_lms :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Adds the current session time to the existing total time.\n   *\n   * @return {string}\n   */\n  getCurrentTotalTime() {\n    return this.core.getCurrentTotalTime(this.start_time);\n  }\n}\n\n/**\n * Class representing the cmi.core object\n * @extends BaseCMI\n */\nclass CMICore extends BaseCMI {\n  /**\n   * Constructor for cmi.core\n   */\n  constructor() {\n    super();\n\n    this.score = new CMIScore(\n        {\n          score_children: scorm12_constants.score_children,\n          score_range: scorm12_regex.score_range,\n          invalidErrorCode: scorm12_error_codes.INVALID_SET_VALUE,\n          invalidTypeCode: scorm12_error_codes.TYPE_MISMATCH,\n          invalidRangeCode: scorm12_error_codes.VALUE_OUT_OF_RANGE,\n          errorClass: Scorm12ValidationError,\n        });\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.score?.initialize();\n  }\n\n  #_children = scorm12_constants.core_children;\n  #student_id = '';\n  #student_name = '';\n  #lesson_location = '';\n  #credit = '';\n  #lesson_status = 'not attempted';\n  #entry = '';\n  #total_time = '';\n  #lesson_mode = 'normal';\n  #exit = '';\n  #session_time = '00:00:00';\n  #suspend_data = '';\n\n  /**\n   * Getter for #_children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children) {\n    throwInvalidValueError();\n  }\n\n  /**\n   * Getter for #student_id\n   * @return {string}\n   */\n  get student_id() {\n    return this.#student_id;\n  }\n\n  /**\n   * Setter for #student_id. Can only be called before  initialization.\n   * @param {string} student_id\n   */\n  set student_id(student_id) {\n    !this.initialized ? this.#student_id = student_id : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #student_name\n   * @return {string}\n   */\n  get student_name() {\n    return this.#student_name;\n  }\n\n  /**\n   * Setter for #student_name. Can only be called before  initialization.\n   * @param {string} student_name\n   */\n  set student_name(student_name) {\n    !this.initialized ?\n        this.#student_name = student_name :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #lesson_location\n   * @return {string}\n   */\n  get lesson_location() {\n    return this.#lesson_location;\n  }\n\n  /**\n   * Setter for #lesson_location\n   * @param {string} lesson_location\n   */\n  set lesson_location(lesson_location) {\n    if (check12ValidFormat(lesson_location, scorm12_regex.CMIString256, true)) {\n      this.#lesson_location = lesson_location;\n    }\n  }\n\n  /**\n   * Getter for #credit\n   * @return {string}\n   */\n  get credit() {\n    return this.#credit;\n  }\n\n  /**\n   * Setter for #credit. Can only be called before  initialization.\n   * @param {string} credit\n   */\n  set credit(credit) {\n    !this.initialized ? this.#credit = credit : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #lesson_status\n   * @return {string}\n   */\n  get lesson_status() {\n    return this.#lesson_status;\n  }\n\n  /**\n   * Setter for #lesson_status\n   * @param {string} lesson_status\n   */\n  set lesson_status(lesson_status) {\n    if (this.initialized) {\n      if (check12ValidFormat(lesson_status, scorm12_regex.CMIStatus)) {\n        this.#lesson_status = lesson_status;\n      }\n    } else {\n      if (check12ValidFormat(lesson_status, scorm12_regex.CMIStatus2)) {\n        this.#lesson_status = lesson_status;\n      }\n    }\n  }\n\n  /**\n   * Getter for #entry\n   * @return {string}\n   */\n  get entry() {\n    return this.#entry;\n  }\n\n  /**\n   * Setter for #entry. Can only be called before  initialization.\n   * @param {string} entry\n   */\n  set entry(entry) {\n    !this.initialized ? this.#entry = entry : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #total_time\n   * @return {string}\n   */\n  get total_time() {\n    return this.#total_time;\n  }\n\n  /**\n   * Setter for #total_time. Can only be called before  initialization.\n   * @param {string} total_time\n   */\n  set total_time(total_time) {\n    !this.initialized ? this.#total_time = total_time : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #lesson_mode\n   * @return {string}\n   */\n  get lesson_mode() {\n    return this.#lesson_mode;\n  }\n\n  /**\n   * Setter for #lesson_mode. Can only be called before  initialization.\n   * @param {string} lesson_mode\n   */\n  set lesson_mode(lesson_mode) {\n    !this.initialized ? this.#lesson_mode = lesson_mode : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #exit. Should only be called during JSON export.\n   * @return {*}\n   */\n  get exit() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#exit;\n  }\n\n  /**\n   * Setter for #exit\n   * @param {string} exit\n   */\n  set exit(exit) {\n    if (check12ValidFormat(exit, scorm12_regex.CMIExit, true)) {\n      this.#exit = exit;\n    }\n  }\n\n  /**\n   * Getter for #session_time. Should only be called during JSON export.\n   * @return {*}\n   */\n  get session_time() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#session_time;\n  }\n\n  /**\n   * Setter for #session_time\n   * @param {string} session_time\n   */\n  set session_time(session_time) {\n    if (check12ValidFormat(session_time, scorm12_regex.CMITimespan)) {\n      this.#session_time = session_time;\n    }\n  }\n\n  /**\n   * Getter for #suspend_data\n   * @return {string}\n   */\n  get suspend_data() {\n    return this.#suspend_data;\n  }\n\n  /**\n   * Setter for #suspend_data\n   * @param {string} suspend_data\n   */\n  set suspend_data(suspend_data) {\n    if (check12ValidFormat(suspend_data, scorm12_regex.CMIString4096, true)) {\n      this.#suspend_data = suspend_data;\n    }\n  }\n\n  /**\n   * Adds the current session time to the existing total time.\n   * @param {Number} start_time\n   * @return {string}\n   */\n  getCurrentTotalTime(start_time: Number) {\n    let sessionTime = this.#session_time;\n    const startTime = start_time;\n\n    if (typeof startTime !== 'undefined' && startTime !== null) {\n      const seconds = new Date().getTime() - startTime;\n      sessionTime = Util.getSecondsAsHHMMSS(seconds / 1000);\n    }\n\n    return Utilities.addHHMMSSTimeStrings(\n        this.#total_time,\n        sessionTime,\n        new RegExp(scorm12_regex.CMITimespan),\n    );\n  }\n\n  /**\n   * toJSON for cmi.core\n   *\n   * @return {\n   *    {\n   *      student_name: string,\n   *      entry: string,\n   *      exit: string,\n   *      score: CMIScore,\n   *      student_id: string,\n   *      lesson_mode: string,\n   *      lesson_location: string,\n   *      lesson_status: string,\n   *      credit: string,\n   *      session_time: *\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'student_id': this.student_id,\n      'student_name': this.student_name,\n      'lesson_location': this.lesson_location,\n      'credit': this.credit,\n      'lesson_status': this.lesson_status,\n      'entry': this.entry,\n      'lesson_mode': this.lesson_mode,\n      'exit': this.exit,\n      'session_time': this.session_time,\n      'score': this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.objectives object\n * @extends CMIArray\n */\nclass CMIObjectives extends CMIArray {\n  /**\n   * Constructor for cmi.objectives\n   */\n  constructor() {\n    super({\n      children: scorm12_constants.objectives_children,\n      errorCode: scorm12_error_codes.INVALID_SET_VALUE,\n      errorClass: Scorm12ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.student_data object\n * @extends BaseCMI\n */\nexport class CMIStudentData extends BaseCMI {\n  #_children;\n  #mastery_score = '';\n  #max_time_allowed = '';\n  #time_limit_action = '';\n\n  /**\n   * Constructor for cmi.student_data\n   * @param {string} student_data_children\n   */\n  constructor(student_data_children) {\n    super();\n\n    this.#_children = student_data_children ?\n        student_data_children :\n        scorm12_constants.student_data_children;\n  }\n\n  /**\n   * Getter for #_children\n   * @return {*}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children) {\n    throwInvalidValueError();\n  }\n\n  /**\n   * Getter for #master_score\n   * @return {string}\n   */\n  get mastery_score() {\n    return this.#mastery_score;\n  }\n\n  /**\n   * Setter for #master_score. Can only be called before  initialization.\n   * @param {string} mastery_score\n   */\n  set mastery_score(mastery_score) {\n    !this.initialized ?\n        this.#mastery_score = mastery_score :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #max_time_allowed\n   * @return {string}\n   */\n  get max_time_allowed() {\n    return this.#max_time_allowed;\n  }\n\n  /**\n   * Setter for #max_time_allowed. Can only be called before  initialization.\n   * @param {string} max_time_allowed\n   */\n  set max_time_allowed(max_time_allowed) {\n    !this.initialized ?\n        this.#max_time_allowed = max_time_allowed :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #time_limit_action\n   * @return {string}\n   */\n  get time_limit_action() {\n    return this.#time_limit_action;\n  }\n\n  /**\n   * Setter for #time_limit_action. Can only be called before  initialization.\n   * @param {string} time_limit_action\n   */\n  set time_limit_action(time_limit_action) {\n    !this.initialized ?\n        this.#time_limit_action = time_limit_action :\n        throwReadOnlyError();\n  }\n\n  /**\n   * toJSON for cmi.student_data\n   *\n   * @return {\n   *    {\n   *      max_time_allowed: string,\n   *      time_limit_action: string,\n   *      mastery_score: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'mastery_score': this.mastery_score,\n      'max_time_allowed': this.max_time_allowed,\n      'time_limit_action': this.time_limit_action,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.student_preference object\n * @extends BaseCMI\n */\nexport class CMIStudentPreference extends BaseCMI {\n  #_children;\n\n  /**\n   * Constructor for cmi.student_preference\n   * @param {string} student_preference_children\n   */\n  constructor(student_preference_children) {\n    super();\n\n    this.#_children = student_preference_children ?\n        student_preference_children :\n        scorm12_constants.student_preference_children;\n  }\n\n  #audio = '';\n  #language = '';\n  #speed = '';\n  #text = '';\n\n  /**\n   * Getter for #_children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children) {\n    throwInvalidValueError();\n  }\n\n  /**\n   * Getter for #audio\n   * @return {string}\n   */\n  get audio() {\n    return this.#audio;\n  }\n\n  /**\n   * Setter for #audio\n   * @param {string} audio\n   */\n  set audio(audio) {\n    if (check12ValidFormat(audio, scorm12_regex.CMISInteger) &&\n        check12ValidRange(audio, scorm12_regex.audio_range)) {\n      this.#audio = audio;\n    }\n  }\n\n  /**\n   * Getter for #language\n   * @return {string}\n   */\n  get language() {\n    return this.#language;\n  }\n\n  /**\n   * Setter for #language\n   * @param {string} language\n   */\n  set language(language) {\n    if (check12ValidFormat(language, scorm12_regex.CMIString256)) {\n      this.#language = language;\n    }\n  }\n\n  /**\n   * Getter for #speed\n   * @return {string}\n   */\n  get speed() {\n    return this.#speed;\n  }\n\n  /**\n   * Setter for #speed\n   * @param {string} speed\n   */\n  set speed(speed) {\n    if (check12ValidFormat(speed, scorm12_regex.CMISInteger) &&\n        check12ValidRange(speed, scorm12_regex.speed_range)) {\n      this.#speed = speed;\n    }\n  }\n\n  /**\n   * Getter for #text\n   * @return {string}\n   */\n  get text() {\n    return this.#text;\n  }\n\n  /**\n   * Setter for #text\n   * @param {string} text\n   */\n  set text(text) {\n    if (check12ValidFormat(text, scorm12_regex.CMISInteger) &&\n        check12ValidRange(text, scorm12_regex.text_range)) {\n      this.#text = text;\n    }\n  }\n\n  /**\n   * toJSON for cmi.student_preference\n   *\n   * @return {\n   *    {\n   *      audio: string,\n   *      language: string,\n   *      speed: string,\n   *      text: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'audio': this.audio,\n      'language': this.language,\n      'speed': this.speed,\n      'text': this.text,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.interactions object\n * @extends BaseCMI\n */\nclass CMIInteractions extends CMIArray {\n  /**\n   * Constructor for cmi.interactions\n   */\n  constructor() {\n    super({\n      children: scorm12_constants.interactions_children,\n      errorCode: scorm12_error_codes.INVALID_SET_VALUE,\n      errorClass: Scorm12ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.interactions.n object\n * @extends BaseCMI\n */\nexport class CMIInteractionsObject extends BaseCMI {\n  /**\n   * Constructor for cmi.interactions.n object\n   */\n  constructor() {\n    super();\n\n    this.objectives = new CMIArray({\n      errorCode: scorm12_error_codes.INVALID_SET_VALUE,\n      errorClass: Scorm12ValidationError,\n      children: scorm12_constants.objectives_children,\n    });\n    this.correct_responses = new CMIArray({\n      errorCode: scorm12_error_codes.INVALID_SET_VALUE,\n      errorClass: Scorm12ValidationError,\n      children: scorm12_constants.correct_responses_children,\n    });\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.objectives?.initialize();\n    this.correct_responses?.initialize();\n  }\n\n  #id = '';\n  #time = '';\n  #type = '';\n  #weighting = '';\n  #student_response = '';\n  #result = '';\n  #latency = '';\n\n  /**\n   * Getter for #id. Should only be called during JSON export.\n   * @return {*}\n   */\n  get id() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check12ValidFormat(id, scorm12_regex.CMIIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * Getter for #time. Should only be called during JSON export.\n   * @return {*}\n   */\n  get time() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#time;\n  }\n\n  /**\n   * Setter for #time\n   * @param {string} time\n   */\n  set time(time) {\n    if (check12ValidFormat(time, scorm12_regex.CMITime)) {\n      this.#time = time;\n    }\n  }\n\n  /**\n   * Getter for #type. Should only be called during JSON export.\n   * @return {*}\n   */\n  get type() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#type;\n  }\n\n  /**\n   * Setter for #type\n   * @param {string} type\n   */\n  set type(type) {\n    if (check12ValidFormat(type, scorm12_regex.CMIType)) {\n      this.#type = type;\n    }\n  }\n\n  /**\n   * Getter for #weighting. Should only be called during JSON export.\n   * @return {*}\n   */\n  get weighting() {\n    return (!this.jsonString) ?\n        throwWriteOnlyError() :\n        this.#weighting;\n  }\n\n  /**\n   * Setter for #weighting\n   * @param {string} weighting\n   */\n  set weighting(weighting) {\n    if (check12ValidFormat(weighting, scorm12_regex.CMIDecimal) &&\n        check12ValidRange(weighting, scorm12_regex.weighting_range)) {\n      this.#weighting = weighting;\n    }\n  }\n\n  /**\n   * Getter for #student_response. Should only be called during JSON export.\n   * @return {*}\n   */\n  get student_response() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#student_response;\n  }\n\n  /**\n   * Setter for #student_response\n   * @param {string} student_response\n   */\n  set student_response(student_response) {\n    if (check12ValidFormat(student_response, scorm12_regex.CMIFeedback, true)) {\n      this.#student_response = student_response;\n    }\n  }\n\n  /**\n   * Getter for #result. Should only be called during JSON export.\n   * @return {*}\n   */\n  get result() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#result;\n  }\n\n  /**\n   * Setter for #result\n   * @param {string} result\n   */\n  set result(result) {\n    if (check12ValidFormat(result, scorm12_regex.CMIResult)) {\n      this.#result = result;\n    }\n  }\n\n  /**\n   * Getter for #latency. Should only be called during JSON export.\n   * @return {*}\n   */\n  get latency() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#latency;\n  }\n\n  /**\n   * Setter for #latency\n   * @param {string} latency\n   */\n  set latency(latency) {\n    if (check12ValidFormat(latency, scorm12_regex.CMITimespan)) {\n      this.#latency = latency;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n\n   *\n   * @return {\n   *    {\n   *      id: string,\n   *      time: string,\n   *      type: string,\n   *      weighting: string,\n   *      student_response: string,\n   *      result: string,\n   *      latency: string,\n   *      objectives: CMIArray,\n   *      correct_responses: CMIArray\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n      'time': this.time,\n      'type': this.type,\n      'weighting': this.weighting,\n      'student_response': this.student_response,\n      'result': this.result,\n      'latency': this.latency,\n      'objectives': this.objectives,\n      'correct_responses': this.correct_responses,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.objectives.n object\n * @extends BaseCMI\n */\nexport class CMIObjectivesObject extends BaseCMI {\n  /**\n   * Constructor for cmi.objectives.n\n   */\n  constructor() {\n    super();\n\n    this.score = new CMIScore(\n        {\n          score_children: scorm12_constants.score_children,\n          score_range: scorm12_regex.score_range,\n          invalidErrorCode: scorm12_error_codes.INVALID_SET_VALUE,\n          invalidTypeCode: scorm12_error_codes.TYPE_MISMATCH,\n          invalidRangeCode: scorm12_error_codes.VALUE_OUT_OF_RANGE,\n          errorClass: Scorm12ValidationError,\n        });\n  }\n\n  #id = '';\n  #status = '';\n\n  /**\n   * Getter for #id\n   * @return {\"\"}\n   */\n  get id() {\n    return this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check12ValidFormat(id, scorm12_regex.CMIIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * Getter for #status\n   * @return {\"\"}\n   */\n  get status() {\n    return this.#status;\n  }\n\n  /**\n   * Setter for #status\n   * @param {string} status\n   */\n  set status(status) {\n    if (check12ValidFormat(status, scorm12_regex.CMIStatus2)) {\n      this.#status = status;\n    }\n  }\n\n  /**\n   * toJSON for cmi.objectives.n\n   * @return {\n   *    {\n   *      id: string,\n   *      status: string,\n   *      score: CMIScore\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n      'status': this.status,\n      'score': this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.interactions.n.objectives.n object\n * @extends BaseCMI\n */\nexport class CMIInteractionsObjectivesObject extends BaseCMI {\n  /**\n   * Constructor for cmi.interactions.n.objectives.n\n   */\n  constructor() {\n    super();\n  }\n\n  #id = '';\n\n  /**\n   * Getter for #id\n   * @return {\"\"}\n   */\n  get id() {\n    return this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check12ValidFormat(id, scorm12_regex.CMIIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n.objectives.n\n   * @return {\n   *    {\n   *      id: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.interactions.correct_responses.n object\n * @extends BaseCMI\n */\nexport class CMIInteractionsCorrectResponsesObject extends BaseCMI {\n  /**\n   * Constructor for cmi.interactions.correct_responses.n\n   */\n  constructor() {\n    super();\n  }\n\n  #pattern = '';\n\n  /**\n   * Getter for #pattern\n   * @return {string}\n   */\n  get pattern() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#pattern;\n  }\n\n  /**\n   * Setter for #pattern\n   * @param {string} pattern\n   */\n  set pattern(pattern) {\n    if (check12ValidFormat(pattern, scorm12_regex.CMIFeedback, true)) {\n      this.#pattern = pattern;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.correct_responses.n\n   * @return {\n   *    {\n   *      pattern: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'pattern': this.pattern,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class for AICC Navigation object\n */\nexport class NAV extends BaseCMI {\n  /**\n   * Constructor for NAV object\n   */\n  constructor() {\n    super();\n  }\n\n  #event = '';\n\n  /**\n   * Getter for #event\n   * @return {string}\n   */\n  get event() {\n    return this.#event;\n  }\n\n  /**\n   * Setter for #event\n   * @param {string} event\n   */\n  set event(event) {\n    if (check12ValidFormat(event, scorm12_regex.NAVEvent)) {\n      this.#event = event;\n    }\n  }\n\n  /**\n   * toJSON for nav object\n   * @return {\n   *    {\n   *      event: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'event': this.event,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","// @flow\n\nconst global = {\n  SCORM_TRUE: 'true',\n  SCORM_FALSE: 'false',\n  STATE_NOT_INITIALIZED: 0,\n  STATE_INITIALIZED: 1,\n  STATE_TERMINATED: 2,\n  LOG_LEVEL_DEBUG: 1,\n  LOG_LEVEL_INFO: 2,\n  LOG_LEVEL_WARNING: 3,\n  LOG_LEVEL_ERROR: 4,\n  LOG_LEVEL_NONE: 5,\n};\n\nconst scorm12 = {\n  // Children lists\n  cmi_children: 'core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions',\n  core_children: 'student_id,student_name,lesson_location,credit,lesson_status,entry,score,total_time,lesson_mode,exit,session_time',\n  score_children: 'raw,min,max',\n  comments_children: 'content,location,time',\n  objectives_children: 'id,score,status',\n  correct_responses_children: 'pattern',\n  student_data_children: 'mastery_score,max_time_allowed,time_limit_action',\n  student_preference_children: 'audio,language,speed,text',\n  interactions_children: 'id,objectives,time,type,correct_responses,weighting,student_response,result,latency',\n\n  error_descriptions: {\n    '101': {\n      basicMessage: 'General Exception',\n      detailMessage: 'No specific error code exists to describe the error. Use LMSGetDiagnostic for more information',\n    },\n    '201': {\n      basicMessage: 'Invalid argument error',\n      detailMessage: 'Indicates that an argument represents an invalid data model element or is otherwise incorrect.',\n    },\n    '202': {\n      basicMessage: 'Element cannot have children',\n      detailMessage: 'Indicates that LMSGetValue was called with a data model element name that ends in \"_children\" for a data model element that does not support the \"_children\" suffix.',\n    },\n    '203': {\n      basicMessage: 'Element not an array - cannot have count',\n      detailMessage: 'Indicates that LMSGetValue was called with a data model element name that ends in \"_count\" for a data model element that does not support the \"_count\" suffix.',\n    },\n    '301': {\n      basicMessage: 'Not initialized',\n      detailMessage: 'Indicates that an API call was made before the call to lmsInitialize.',\n    },\n    '401': {\n      basicMessage: 'Not implemented error',\n      detailMessage: 'The data model element indicated in a call to LMSGetValue or LMSSetValue is valid, but was not implemented by this LMS. SCORM 1.2 defines a set of data model elements as being optional for an LMS to implement.',\n    },\n    '402': {\n      basicMessage: 'Invalid set value, element is a keyword',\n      detailMessage: 'Indicates that LMSSetValue was called on a data model element that represents a keyword (elements that end in \"_children\" and \"_count\").',\n    },\n    '403': {\n      basicMessage: 'Element is read only',\n      detailMessage: 'LMSSetValue was called with a data model element that can only be read.',\n    },\n    '404': {\n      basicMessage: 'Element is write only',\n      detailMessage: 'LMSGetValue was called on a data model element that can only be written to.',\n    },\n    '405': {\n      basicMessage: 'Incorrect Data Type',\n      detailMessage: 'LMSSetValue was called with a value that is not consistent with the data format of the supplied data model element.',\n    },\n    '407': {\n      basicMessage: 'Element Value Out Of Range',\n      detailMessage: 'The numeric value supplied to a LMSSetValue call is outside of the numeric range allowed for the supplied data model element.',\n    },\n    '408': {\n      basicMessage: 'Data Model Dependency Not Established',\n      detailMessage: 'Some data model elements cannot be set until another data model element was set. This error condition indicates that the prerequisite element was not set before the dependent element.',\n    },\n  },\n};\n\nconst aicc = {\n  ...scorm12, ...{\n    cmi_children: 'core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions,evaluation',\n    student_preference_children: 'audio,language,lesson_type,speed,text,text_color,text_location,text_size,video,windows',\n    student_data_children: 'attempt_number,tries,mastery_score,max_time_allowed,time_limit_action',\n    student_demographics_children: 'city,class,company,country,experience,familiar_name,instructor_name,title,native_language,state,street_address,telephone,years_experience',\n    tries_children: 'time,status,score',\n    attempt_records_children: 'score,lesson_status',\n    paths_children: 'location_id,date,time,status,why_left,time_in_element',\n  },\n};\n\nconst scorm2004 = {\n  // Children lists\n  cmi_children: '_version,comments_from_learner,comments_from_lms,completion_status,credit,entry,exit,interactions,launch_data,learner_id,learner_name,learner_preference,location,max_time_allowed,mode,objectives,progress_measure,scaled_passing_score,score,session_time,success_status,suspend_data,time_limit_action,total_time',\n  comments_children: 'comment,timestamp,location',\n  score_children: 'max,raw,scaled,min',\n  objectives_children: 'progress_measure,completion_status,success_status,description,score,id',\n  correct_responses_children: 'pattern',\n  student_data_children: 'mastery_score,max_time_allowed,time_limit_action',\n  student_preference_children: 'audio_level,audio_captioning,delivery_speed,language',\n  interactions_children: 'id,type,objectives,timestamp,correct_responses,weighting,learner_response,result,latency,description',\n\n  error_descriptions: {\n    '0': {\n      basicMessage: 'No Error',\n      detailMessage: 'No error occurred, the previous API call was successful.',\n    },\n    '101': {\n      basicMessage: 'General Exception',\n      detailMessage: 'No specific error code exists to describe the error. Use GetDiagnostic for more information.',\n    },\n    '102': {\n      basicMessage: 'General Initialization Failure',\n      detailMessage: 'Call to Initialize failed for an unknown reason.',\n    },\n    '103': {\n      basicMessage: 'Already Initialized',\n      detailMessage: 'Call to Initialize failed because Initialize was already called.',\n    },\n    '104': {\n      basicMessage: 'Content Instance Terminated',\n      detailMessage: 'Call to Initialize failed because Terminate was already called.',\n    },\n    '111': {\n      basicMessage: 'General Termination Failure',\n      detailMessage: 'Call to Terminate failed for an unknown reason.',\n    },\n    '112': {\n      basicMessage: 'Termination Before Initialization',\n      detailMessage: 'Call to Terminate failed because it was made before the call to Initialize.',\n    },\n    '113': {\n      basicMessage: 'Termination After Termination',\n      detailMessage: 'Call to Terminate failed because Terminate was already called.',\n    },\n    '122': {\n      basicMessage: 'Retrieve Data Before Initialization',\n      detailMessage: 'Call to GetValue failed because it was made before the call to Initialize.',\n    },\n    '123': {\n      basicMessage: 'Retrieve Data After Termination',\n      detailMessage: 'Call to GetValue failed because it was made after the call to Terminate.',\n    },\n    '132': {\n      basicMessage: 'Store Data Before Initialization',\n      detailMessage: 'Call to SetValue failed because it was made before the call to Initialize.',\n    },\n    '133': {\n      basicMessage: 'Store Data After Termination',\n      detailMessage: 'Call to SetValue failed because it was made after the call to Terminate.',\n    },\n    '142': {\n      basicMessage: 'Commit Before Initialization',\n      detailMessage: 'Call to Commit failed because it was made before the call to Initialize.',\n    },\n    '143': {\n      basicMessage: 'Commit After Termination',\n      detailMessage: 'Call to Commit failed because it was made after the call to Terminate.',\n    },\n    '201': {\n      basicMessage: 'General Argument Error',\n      detailMessage: 'An invalid argument was passed to an API method (usually indicates that Initialize, Commit or Terminate did not receive the expected empty string argument.',\n    },\n    '301': {\n      basicMessage: 'General Get Failure',\n      detailMessage: 'Indicates a failed GetValue call where no other specific error code is applicable. Use GetDiagnostic for more information.',\n    },\n    '351': {\n      basicMessage: 'General Set Failure',\n      detailMessage: 'Indicates a failed SetValue call where no other specific error code is applicable. Use GetDiagnostic for more information.',\n    },\n    '391': {\n      basicMessage: 'General Commit Failure',\n      detailMessage: 'Indicates a failed Commit call where no other specific error code is applicable. Use GetDiagnostic for more information.',\n    },\n    '401': {\n      basicMessage: 'Undefined Data Model Element',\n      detailMessage: 'The data model element name passed to GetValue or SetValue is not a valid SCORM data model element.',\n    },\n    '402': {\n      basicMessage: 'Unimplemented Data Model Element',\n      detailMessage: 'The data model element indicated in a call to GetValue or SetValue is valid, but was not implemented by this LMS. In SCORM 2004, this error would indicate an LMS that is not fully SCORM conformant.',\n    },\n    '403': {\n      basicMessage: 'Data Model Element Value Not Initialized',\n      detailMessage: 'Attempt to read a data model element that has not been initialized by the LMS or through a SetValue call. This error condition is often reached during normal execution of a SCO.',\n    },\n    '404': {\n      basicMessage: 'Data Model Element Is Read Only',\n      detailMessage: 'SetValue was called with a data model element that can only be read.',\n    },\n    '405': {\n      basicMessage: 'Data Model Element Is Write Only',\n      detailMessage: 'GetValue was called on a data model element that can only be written to.',\n    },\n    '406': {\n      basicMessage: 'Data Model Element Type Mismatch',\n      detailMessage: 'SetValue was called with a value that is not consistent with the data format of the supplied data model element.',\n    },\n    '407': {\n      basicMessage: 'Data Model Element Value Out Of Range',\n      detailMessage: 'The numeric value supplied to a SetValue call is outside of the numeric range allowed for the supplied data model element.',\n    },\n    '408': {\n      basicMessage: 'Data Model Dependency Not Established',\n      detailMessage: 'Some data model elements cannot be set until another data model element was set. This error condition indicates that the prerequisite element was not set before the dependent element.',\n    },\n  },\n};\n\nconst APIConstants = {\n  global: global,\n  scorm12: scorm12,\n  aicc: aicc,\n  scorm2004: scorm2004,\n};\n\nexport default APIConstants;\n","// @flow\nconst global = {\n  GENERAL: 101,\n  INITIALIZATION_FAILED: 101,\n  INITIALIZED: 101,\n  TERMINATED: 101,\n  TERMINATION_FAILURE: 101,\n  TERMINATION_BEFORE_INIT: 101,\n  MULTIPLE_TERMINATION: 101,\n  RETRIEVE_BEFORE_INIT: 101,\n  RETRIEVE_AFTER_TERM: 101,\n  STORE_BEFORE_INIT: 101,\n  STORE_AFTER_TERM: 101,\n  COMMIT_BEFORE_INIT: 101,\n  COMMIT_AFTER_TERM: 101,\n  ARGUMENT_ERROR: 101,\n  CHILDREN_ERROR: 101,\n  COUNT_ERROR: 101,\n  GENERAL_GET_FAILURE: 101,\n  GENERAL_SET_FAILURE: 101,\n  GENERAL_COMMIT_FAILURE: 101,\n  UNDEFINED_DATA_MODEL: 101,\n  UNIMPLEMENTED_ELEMENT: 101,\n  VALUE_NOT_INITIALIZED: 101,\n  INVALID_SET_VALUE: 101,\n  READ_ONLY_ELEMENT: 101,\n  WRITE_ONLY_ELEMENT: 101,\n  TYPE_MISMATCH: 101,\n  VALUE_OUT_OF_RANGE: 101,\n  DEPENDENCY_NOT_ESTABLISHED: 101,\n};\n\nconst scorm12 = {\n  ...global, ...{\n    RETRIEVE_BEFORE_INIT: 301,\n    STORE_BEFORE_INIT: 301,\n    COMMIT_BEFORE_INIT: 301,\n    ARGUMENT_ERROR: 201,\n    CHILDREN_ERROR: 202,\n    COUNT_ERROR: 203,\n    UNDEFINED_DATA_MODEL: 401,\n    UNIMPLEMENTED_ELEMENT: 401,\n    VALUE_NOT_INITIALIZED: 301,\n    INVALID_SET_VALUE: 402,\n    READ_ONLY_ELEMENT: 403,\n    WRITE_ONLY_ELEMENT: 404,\n    TYPE_MISMATCH: 405,\n    VALUE_OUT_OF_RANGE: 407,\n    DEPENDENCY_NOT_ESTABLISHED: 408,\n  },\n};\n\nconst scorm2004 = {\n  ...global, ...{\n    INITIALIZATION_FAILED: 102,\n    INITIALIZED: 103,\n    TERMINATED: 104,\n    TERMINATION_FAILURE: 111,\n    TERMINATION_BEFORE_INIT: 112,\n    MULTIPLE_TERMINATIONS: 113,\n    RETRIEVE_BEFORE_INIT: 122,\n    RETRIEVE_AFTER_TERM: 123,\n    STORE_BEFORE_INIT: 132,\n    STORE_AFTER_TERM: 133,\n    COMMIT_BEFORE_INIT: 142,\n    COMMIT_AFTER_TERM: 143,\n    ARGUMENT_ERROR: 201,\n    GENERAL_GET_FAILURE: 301,\n    GENERAL_SET_FAILURE: 351,\n    GENERAL_COMMIT_FAILURE: 391,\n    UNDEFINED_DATA_MODEL: 401,\n    UNIMPLEMENTED_ELEMENT: 402,\n    VALUE_NOT_INITIALIZED: 403,\n    READ_ONLY_ELEMENT: 404,\n    WRITE_ONLY_ELEMENT: 405,\n    TYPE_MISMATCH: 406,\n    VALUE_OUT_OF_RANGE: 407,\n    DEPENDENCY_NOT_ESTABLISHED: 408,\n  },\n};\n\nconst ErrorCodes = {\n  scorm12: scorm12,\n  scorm2004: scorm2004,\n};\n\nexport default ErrorCodes;\n","// @flow\n\nconst scorm12 = {\n  CMIString256: '^.{0,255}$',\n  CMIString4096: '^.{0,4096}$',\n  CMITime: '^(?:[01]\\\\d|2[0123]):(?:[012345]\\\\d):(?:[012345]\\\\d)$', // eslint-disable-line\n  CMITimespan: '^([0-9]{2,}):([0-9]{2}):([0-9]{2})(\\.[0-9]{1,2})?$', // eslint-disable-line\n  CMIInteger: '^\\\\d+$',\n  CMISInteger: '^-?([0-9]+)$',\n  CMIDecimal: '^-?([0-9]{0,3})(\\.[0-9]*)?$', // eslint-disable-line\n  CMIIdentifier: '^[\\\\u0021-\\\\u007E\\\\s]{0,255}$',\n  CMIFeedback: '^.{0,255}$', // This must be redefined\n  CMIIndex: '[._](\\\\d+).',\n\n  // Vocabulary Data Type Definition\n  CMIStatus: '^(passed|completed|failed|incomplete|browsed)$',\n  CMIStatus2: '^(passed|completed|failed|incomplete|browsed|not attempted)$',\n  CMIExit: '^(time-out|suspend|logout|)$',\n  CMIType: '^(true-false|choice|fill-in|matching|performance|sequencing|likert|numeric)$',\n  CMIResult: '^(correct|wrong|unanticipated|neutral|([0-9]{0,3})?(\\\\.[0-9]*)?)$', // eslint-disable-line\n  NAVEvent: '^(previous|continue)$',\n\n  // Data ranges\n  score_range: '0#100',\n  audio_range: '-1#100',\n  speed_range: '-100#100',\n  weighting_range: '-100#100',\n  text_range: '-1#1',\n};\n\nconst aicc = {\n  ...scorm12, ...{\n    CMIIdentifier: '^\\\\w{1,255}$',\n  },\n};\n\nconst scorm2004 = {\n  CMIString200: '^[\\\\u0000-\\\\uFFFF]{0,200}$',\n  CMIString250: '^[\\\\u0000-\\\\uFFFF]{0,250}$',\n  CMIString1000: '^[\\\\u0000-\\\\uFFFF]{0,1000}$',\n  CMIString4000: '^[\\\\u0000-\\\\uFFFF]{0,4000}$',\n  CMIString64000: '^[\\\\u0000-\\\\uFFFF]{0,64000}$',\n  CMILang: '^([a-zA-Z]{2,3}|i|x)(\\-[a-zA-Z0-9\\-]{2,8})?$|^$', // eslint-disable-line\n  CMILangString250: '^(\\{lang=([a-zA-Z]{2,3}|i|x)(\\-[a-zA-Z0-9\\-]{2,8})?\\})?((?!\\{.*$).{0,250}$)?$', // eslint-disable-line\n  CMILangcr: '^((\\{lang=([a-zA-Z]{2,3}|i|x)?(\\-[a-zA-Z0-9\\-]{2,8})?\\}))(.*?)$', // eslint-disable-line\n  CMILangString250cr: '^((\\{lang=([a-zA-Z]{2,3}|i|x)?(\\-[a-zA-Z0-9\\-]{2,8})?\\})?(.{0,250})?)?$', // eslint-disable-line\n  CMILangString4000: '^(\\{lang=([a-zA-Z]{2,3}|i|x)(\\-[a-zA-Z0-9\\-]{2,8})?\\})?((?!\\{.*$).{0,4000}$)?$', // eslint-disable-line\n  CMITime: '^(19[7-9]{1}[0-9]{1}|20[0-2]{1}[0-9]{1}|203[0-8]{1})((-(0[1-9]{1}|1[0-2]{1}))((-(0[1-9]{1}|[1-2]{1}[0-9]{1}|3[0-1]{1}))(T([0-1]{1}[0-9]{1}|2[0-3]{1})((:[0-5]{1}[0-9]{1})((:[0-5]{1}[0-9]{1})((\\\\.[0-9]{1,2})((Z|([+|-]([0-1]{1}[0-9]{1}|2[0-3]{1})))(:[0-5]{1}[0-9]{1})?)?)?)?)?)?)?)?$',\n  CMITimespan: '^P(?:([.,\\\\d]+)Y)?(?:([.,\\\\d]+)M)?(?:([.,\\\\d]+)W)?(?:([.,\\\\d]+)D)?(?:T?(?:([.,\\\\d]+)H)?(?:([.,\\\\d]+)M)?(?:([.,\\\\d]+)S)?)?$',\n  CMIInteger: '^\\\\d+$',\n  CMISInteger: '^-?([0-9]+)$',\n  CMIDecimal: '^-?([0-9]{1,5})(\\\\.[0-9]{1,18})?$',\n  CMIIdentifier: '^\\\\S{1,250}[a-zA-Z0-9]$',\n  CMIShortIdentifier: '^[\\\\w\\\\.\\\\-\\\\_]{1,250}$', // eslint-disable-line\n  CMILongIdentifier: '^(?:(?!urn:)\\\\S{1,4000}|urn:[A-Za-z0-9-]{1,31}:\\\\S{1,4000}|.{1,4000})$', // need to re-examine this\n  CMIFeedback: '^.*$', // This must be redefined\n  CMIIndex: '[._](\\\\d+).',\n  CMIIndexStore: '.N(\\\\d+).',\n\n  // Vocabulary Data Type Definition\n  CMICStatus: '^(completed|incomplete|not attempted|unknown)$',\n  CMISStatus: '^(passed|failed|unknown)$',\n  CMIExit: '^(time-out|suspend|logout|normal)$',\n  CMIType: '^(true-false|choice|fill-in|long-fill-in|matching|performance|sequencing|likert|numeric|other)$',\n  CMIResult: '^(correct|incorrect|unanticipated|neutral|-?([0-9]{1,4})(\\\\.[0-9]{1,18})?)$',\n  NAVEvent: '^(previous|continue|exit|exitAll|abandon|abandonAll|suspendAll|\\{target=\\\\S{0,200}[a-zA-Z0-9]\\}choice|jump)$', // eslint-disable-line\n  NAVBoolean: '^(unknown|true|false$)',\n  NAVTarget: '^(previous|continue|choice.{target=\\\\S{0,200}[a-zA-Z0-9]})$',\n\n  // Data ranges\n  scaled_range: '-1#1',\n  audio_range: '0#*',\n  speed_range: '0#*',\n  text_range: '-1#1',\n  progress_range: '0#1',\n};\n\nconst Regex = {\n  aicc: aicc,\n  scorm12: scorm12,\n  scorm2004: scorm2004,\n};\n\nexport default Regex;\n","// @flow\n\nimport APIConstants from './constants/api_constants';\n\nconst scorm12_errors = APIConstants.scorm12.error_descriptions;\nconst aicc_errors = APIConstants.aicc.error_descriptions;\nconst scorm2004_errors = APIConstants.scorm2004.error_descriptions;\n\n/**\n * Base Validation Exception\n */\nexport class ValidationError extends Error {\n  /**\n   * Constructor to take in an error message and code\n   * @param {number} errorCode\n   * @param {string} errorMessage\n   * @param {string} detailedMessage\n   */\n  constructor(errorCode: number, errorMessage: String, detailedMessage: String) {\n    super(errorMessage);\n    this.#errorCode = errorCode;\n    this.#errorMessage = errorMessage;\n    this.#detailedMessage = detailedMessage;\n  }\n\n  #errorCode;\n  #errorMessage;\n  #detailedMessage;\n\n  /**\n   * Getter for #errorCode\n   * @return {number}\n   */\n  get errorCode() {\n    return this.#errorCode;\n  }\n\n  /**\n   * Getter for #errorMessage\n   * @return {string}\n   */\n  get errorMessage() {\n    return this.#errorMessage;\n  }\n\n  /**\n   * Getter for #detailedMessage\n   * @return {string}\n   */\n  get detailedMessage() {\n    return this.#detailedMessage;\n  }\n}\n\n/**\n * SCORM 1.2 Validation Error\n */\nexport class Scorm12ValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(scorm12_errors, String(errorCode))) {\n      super(errorCode, scorm12_errors[String(errorCode)].basicMessage, scorm12_errors[String(errorCode)].detailMessage);\n    } else {\n      super(101, scorm12_errors['101'].basicMessage, scorm12_errors['101'].detailMessage);\n    }\n  }\n}\n\n/**\n * AICC Validation Error\n */\nexport class AICCValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(aicc_errors, String(errorCode))) {\n      super(errorCode, aicc_errors[String(errorCode)].basicMessage, aicc_errors[String(errorCode)].detailMessage);\n    } else {\n      super(101, aicc_errors['101'].basicMessage, aicc_errors['101'].detailMessage);\n    }\n  }\n}\n\n/**\n * SCORM 2004 Validation Error\n */\nexport class Scorm2004ValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(scorm2004_errors, String(errorCode))) {\n      super(errorCode, scorm2004_errors[String(errorCode)].basicMessage, scorm2004_errors[String(errorCode)].detailMessage);\n    } else {\n      super(101, scorm2004_errors['101'].basicMessage, scorm2004_errors['101'].detailMessage);\n    }\n  }\n}\n","// @flow\nexport const SECONDS_PER_SECOND = 1.0;\nexport const SECONDS_PER_MINUTE = 60;\nexport const SECONDS_PER_HOUR = 60 * SECONDS_PER_MINUTE;\nexport const SECONDS_PER_DAY = 24 * SECONDS_PER_HOUR;\n\nconst designations = [\n  ['D', SECONDS_PER_DAY],\n  ['H', SECONDS_PER_HOUR],\n  ['M', SECONDS_PER_MINUTE],\n  ['S', SECONDS_PER_SECOND],\n];\n\n/**\n * Converts a Number to a String of HH:MM:SS\n *\n * @param {Number} totalSeconds\n * @return {string}\n */\nexport function getSecondsAsHHMMSS(totalSeconds: Number) {\n  // SCORM spec does not deal with negative durations, give zero back\n  if (!totalSeconds || totalSeconds <= 0) {\n    return '00:00:00';\n  }\n\n  const hours = Math.floor(totalSeconds / SECONDS_PER_HOUR);\n\n  const dateObj = new Date(totalSeconds * 1000);\n  const minutes = dateObj.getUTCMinutes();\n  // make sure we add any possible decimal value\n  const seconds = dateObj.getSeconds();\n  const ms = totalSeconds % 1.0;\n  let msStr = '';\n  if (countDecimals(ms) > 0) {\n    if (countDecimals(ms) > 2) {\n      msStr = ms.toFixed(2);\n    } else {\n      msStr = String(ms);\n    }\n    msStr = '.' + msStr.split('.')[1];\n  }\n\n  return (hours + ':' + minutes + ':' + seconds).replace(/\\b\\d\\b/g,\n      '0$&') + msStr;\n}\n\n/**\n * Calculate the number of seconds from ISO 8601 Duration\n *\n * @param {Number} seconds\n * @return {String}\n */\nexport function getSecondsAsISODuration(seconds: Number) {\n  // SCORM spec does not deal with negative durations, give zero back\n  if (!seconds || seconds <= 0) {\n    return 'PT0S';\n  }\n\n  let duration = 'P';\n  let remainder = seconds;\n\n  designations.forEach(([sign, current_seconds]) => {\n    let value = Math.floor(remainder / current_seconds);\n\n    remainder = remainder % current_seconds;\n    if (countDecimals(remainder) > 2) {\n      remainder = Number(Number(remainder).toFixed(2));\n    }\n    // If we have anything left in the remainder, and we're currently adding\n    // seconds to the duration, go ahead and add the decimal to the seconds\n    if (sign === 'S' && remainder > 0) {\n      value += remainder;\n    }\n\n    if (value) {\n      if ((duration.indexOf('D') > 0 ||\n          sign === 'H' || sign === 'M' || sign === 'S') &&\n          duration.indexOf('T') === -1) {\n        duration += 'T';\n      }\n      duration += `${value}${sign}`;\n    }\n  });\n\n  return duration;\n}\n\n/**\n * Calculate the number of seconds from HH:MM:SS.DDDDDD\n *\n * @param {string} timeString\n * @param {RegExp} timeRegex\n * @return {number}\n */\nexport function getTimeAsSeconds(timeString: String, timeRegex: RegExp) {\n  if (!timeString || typeof timeString !== 'string' ||\n      !timeString.match(timeRegex)) {\n    return 0;\n  }\n  const parts = timeString.split(':');\n  const hours = Number(parts[0]);\n  const minutes = Number(parts[1]);\n  const seconds = Number(parts[2]);\n  return (hours * 3600) + (minutes * 60) + seconds;\n}\n\n/**\n * Calculate the number of seconds from ISO 8601 Duration\n *\n * @param {string} duration\n * @param {RegExp} durationRegex\n * @return {number}\n */\nexport function getDurationAsSeconds(duration: String, durationRegex: RegExp) {\n  if (!duration || !duration.match(durationRegex)) {\n    return 0;\n  }\n\n  const [, years, months, , days, hours, minutes, seconds] = new RegExp(\n      durationRegex).exec(duration) || [];\n\n  let result = 0.0;\n\n  result += (Number(seconds) || 0.0);\n  result += (Number(minutes) * 60.0 || 0.0);\n  result += (Number(hours) * 3600.0 || 0.0);\n  result += (Number(days) * (60 * 60 * 24.0) || 0.0);\n  result += (Number(years) * (60 * 60 * 24 * 365.0) || 0.0);\n\n  return result;\n}\n\n/**\n * Adds together two ISO8601 Duration strings\n *\n * @param {string} first\n * @param {string} second\n * @param {RegExp} durationRegex\n * @return {string}\n */\nexport function addTwoDurations(\n    first: String,\n    second: String,\n    durationRegex: RegExp) {\n  return getSecondsAsISODuration(\n      getDurationAsSeconds(first, durationRegex) +\n      getDurationAsSeconds(second, durationRegex),\n  );\n}\n\n/**\n * Add together two HH:MM:SS.DD strings\n *\n * @param {string} first\n * @param {string} second\n * @param {RegExp} timeRegex\n * @return {string}\n */\nexport function addHHMMSSTimeStrings(\n    first: String,\n    second: String,\n    timeRegex: RegExp) {\n  return getSecondsAsHHMMSS(\n      getTimeAsSeconds(first, timeRegex) +\n      getTimeAsSeconds(\n          second, timeRegex),\n  );\n}\n\n/**\n * Flatten a JSON object down to string paths for each values\n * @param {object} data\n * @return {object}\n */\nexport function flatten(data) {\n  const result = {};\n\n  /**\n   * Recurse through the object\n   * @param {*} cur\n   * @param {*} prop\n   */\n  function recurse(cur, prop) {\n    if (Object(cur) !== cur) {\n      result[prop] = cur;\n    } else if (Array.isArray(cur)) {\n      for (let i = 0, l = cur.length; i < l; i++) {\n        recurse(cur[i], prop + '[' + i + ']');\n        if (l === 0) result[prop] = [];\n      }\n    } else {\n      let isEmpty = true;\n      for (const p in cur) {\n        if ({}.hasOwnProperty.call(cur, p)) {\n          isEmpty = false;\n          recurse(cur[p], prop ? prop + '.' + p : p);\n        }\n      }\n      if (isEmpty && prop) result[prop] = {};\n    }\n  }\n\n  recurse(data, '');\n  return result;\n}\n\n/**\n * Un-flatten a flat JSON object\n * @param {object} data\n * @return {object}\n */\nexport function unflatten(data) {\n  'use strict';\n  if (Object(data) !== data || Array.isArray(data)) return data;\n  const regex = /\\.?([^.[\\]]+)|\\[(\\d+)]/g;\n  const result = {};\n  for (const p in data) {\n    if ({}.hasOwnProperty.call(data, p)) {\n      let cur = result;\n      let prop = '';\n      let m = regex.exec(p);\n      while (m) {\n        cur = cur[prop] || (cur[prop] = (m[2] ? [] : {}));\n        prop = m[2] || m[1];\n        m = regex.exec(p);\n      }\n      cur[prop] = data[p];\n    }\n  }\n  return result[''] || result;\n}\n\n/**\n * Counts the number of decimal places\n * @param {number} num\n * @return {number}\n */\nexport function countDecimals(num: number) {\n  if (Math.floor(num) === num || String(num).indexOf('.') < 0) return 0;\n  const parts = num.toString().split('.')[1];\n  return parts.length || 0;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import AICC from '../AICC';\n\nwindow.AICC = AICC;\n"],"names":["FUNC_ERROR_TEXT","NAN","symbolTag","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","global","_typeof","Object","freeSelf","self","root","Function","objectProto","prototype","objectToString","toString","nativeMax","Math","max","nativeMin","min","now","Date","debounce","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","toNumber","isObject","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","shouldInvoke","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","arguments","value","type","isObjectLike","isSymbol","call","other","valueOf","replace","isBinary","test","slice","module","exports","Scorm12API","CMI","CMIAttemptRecordsObject","CMIEvaluationCommentsObject","CMITriesObject","NAV","AICC","_Scorm12API","_inherits","_super","_createSuper","settings","_this","_classCallCheck","finalSettings","_objectSpread","mastery_override","cmi","nav","_createClass","key","getChildElement","CMIElement","foundFirstIndex","newChild","_get","_getPrototypeOf","stringMatches","replaceWithAnotherScormAPI","newAPI","default","CMIArray","ValidationError","ErrorCodes","APIConstants","unflatten","global_constants","scorm12_error_codes","scorm12","_timeout","WeakMap","_error_codes","_settings","BaseAPI","error_codes","_classPrivateFieldInitSpec","writable","autocommit","autocommitSeconds","asyncCommit","sendBeaconCommit","lmsCommitUrl","dataCommitFormat","commitRequestDataType","autoProgress","logLevel","LOG_LEVEL_ERROR","selfReportSessionTime","alwaysSendTotalTime","strict_errors","xhrHeaders","xhrWithCredentials","responseHandler","xhr","JSON","parse","responseText","hasOwnProperty","status","SCORM_TRUE","errorCode","SCORM_FALSE","requestHandler","commitObject","onLogMessage","messageLevel","logMessage","console","error","LOG_LEVEL_WARNING","warn","LOG_LEVEL_INFO","info","LOG_LEVEL_DEBUG","debug","log","_defineProperty","constructor","currentState","STATE_NOT_INITIALIZED","lastErrorCode","listenerArray","_classPrivateFieldSet","apiLogLevel","initialize","callbackName","initializeMessage","terminationMessage","returnValue","isInitialized","throwSCORMError","_classPrivateFieldGet","INITIALIZED","isTerminated","TERMINATED","setStartTime","STATE_INITIALIZED","processListeners","apiLog","clearSCORMError","get","set","terminate","checkTerminated","checkState","TERMINATION_BEFORE_INIT","MULTIPLE_TERMINATION","STATE_TERMINATED","storeData","getValue","RETRIEVE_BEFORE_INIT","RETRIEVE_AFTER_TERM","getCMIValue","e","message","GENERAL","setValue","commitCallback","String","STORE_BEFORE_INIT","STORE_AFTER_TERM","setCMIValue","scheduleCommit","commit","clearScheduledCommit","COMMIT_BEFORE_INIT","COMMIT_AFTER_TERM","getLastError","getErrorString","CMIErrorCode","getLmsErrorMessageDetails","getDiagnostic","beforeInitError","afterTermError","isNotInitialized","functionName","formatMessage","baseLength","messageString","fillChars","length","i","CMIElementBaseLength","j","str","tester","match","_checkObjectHasProperty","refObject","attribute","getOwnPropertyDescriptor","getPrototypeOf","_errorNumber","_detail","Error","_CMIElement","_value","_commonSetCMIValue","methodName","scorm2004","structure","split","invalidErrorMessage","concat","invalidErrorCode","UNDEFINED_DATA_MODEL","substr","_isTargetValid","READ_ONLY_ELEMENT","validateCorrectResponse","index","isNaN","item","childArray","initialized","push","_foundFirstIndex","_commonGetCMIValue","uninitializedErrorMessage","target","VALUE_NOT_INITIALIZED","CHILDREN_ERROR","COUNT_ERROR","on","listenerName","callback","listenerFunctions","listenerSplit","off","_loop","v","removeIndex","findIndex","obj","splice","_ret","clear","_this2","_loop2","filter","_ret2","listener","functionsMatch","listenerHasCMIElement","CMIElementsMatch","substring","indexOf","errorNumber","success","_calculateTotalTime","loadFromFlattenedJSON","json","_this3","testPattern","a","c","a_pattern","a_match","c_match","a_num","Number","c_num","int_pattern","obj_pattern","keys","map","sort","_ref","_ref2","_ref3","_slicedToArray","b","_ref4","d","forEach","element","loadFromJSON","startingData","currentCMIElement","renderCMIToJSONString","stringify","renderCMIToJSONObject","renderCommitCMI","_terminateCommit","processHttpRequest","url","params","immediate","api","process","genericError","httpReq","XMLHttpRequest","open","header","setRequestHeader","withCredentials","onload","Array","send","join","fetch","method","body","headers","credentials","keepalive","when","ScheduledCommit","_API","_cancelled","_timeout2","_callback","API","wrapper","bind","CMIInteractionsCorrectResponsesObject","CMIInteractionsObject","CMIInteractionsObjectivesObject","CMIObjectivesObject","Utilities","scorm12_constants","_BaseAPI","LMSInitialize","lmsInitialize","LMSFinish","lmsFinish","LMSGetValue","lmsGetValue","LMSSetValue","lmsSetValue","LMSCommit","lmsCommit","LMSGetLastError","lmsGetLastError","LMSGetErrorString","lmsGetErrorString","LMSGetDiagnostic","lmsGetDiagnostic","event","detail","basicMessage","detailMessage","error_descriptions","terminateCommit","cmiExport","core","total_time","getCurrentTotalTime","flattened","flatten","originalStatus","lesson_status","lesson_mode","credit","student_data","mastery_score","score","raw","parseFloat","_this$startingData","_this$startingData$cm","_this$startingData$cm2","Scorm12CMI","BaseCMI","checkValidFormat","CMIScore","Regex","AICCValidationError","aicc_constants","aicc","aicc_regex","aicc_error_codes","throwReadOnlyError","checkAICCValidFormat","regexPattern","allowEmptyString","TYPE_MISMATCH","_Scorm12CMI$CMI","cmi_children","student_preference","AICCStudentPreferences","AICCCMIStudentData","student_demographics","CMIStudentDemographics","evaluation","CMIEvaluation","paths","CMIPaths","_this$student_prefere","_this$student_data","_this$student_demogra","_this$evaluation","_this$paths","toJSON","jsonString","suspend_data","launch_data","comments","comments_from_lms","objectives","interactions","_BaseCMI","_super2","CMIEvaluationComments","_this$comments","_CMIArray","_super3","children","comments_children","INVALID_SET_VALUE","errorClass","_lesson_type","_text_color","_text_location","_text_size","_video","_Scorm12CMI$CMIStuden","_super4","student_preference_children","_assertThisInitialized","windows","_this$windows","lesson_type","CMIString256","text_color","text_location","text_size","video","audio","language","speed","text","CMIStudentPreference","_tries_during_lesson","_Scorm12CMI$CMIStuden2","_super5","_this4","student_data_children","tries","CMITries","_this$tries","tries_during_lesson","max_time_allowed","time_limit_action","CMIStudentData","_children","_city","_class","_company","_country","_experience","_familiar_name","_instructor_name","_title","_native_language","_state","_street_address","_telephone","_years_experience","_BaseCMI2","_super6","_this5","student_demographics_children","city","clazz","company","country","experience","familiar_name","instructor_name","title","native_language","state","street_address","telephone","years_experience","class","_CMIArray2","_super7","paths_children","_location_id","_date","_time","_status","_why_left","_time_in_element","CMIPathsObject","_BaseCMI3","_super8","_this6","location_id","date","CMITime","CMIStatus2","why_left","time_in_element","_CMIArray3","_super9","tries_children","_status2","_time2","_BaseCMI4","_super10","_this7","score_children","score_range","invalidTypeCode","invalidRangeCode","VALUE_OUT_OF_RANGE","_this$score","CMIAttemptRecords","_CMIArray4","_super11","attempt_records_children","_lesson_status","_BaseCMI5","_super12","_this8","_this$score2","_content","_location","_time3","_BaseCMI6","_super13","_this9","content","location","scorm12_regex","formatRegex","RegExp","matches","checkValidRange","rangePattern","ranges","_initialized","_start_time","getTime","_children2","_score_range","_invalid_error_code","_invalid_type_code","_invalid_range_code","_decimal_regex","_error_class","_raw","_min","_max","decimalRegex","CMIDecimal","_errorCode","_errorClass","_children3","_count","Scorm12ValidationError","Util","throwWriteOnlyError","WRITE_ONLY_ELEMENT","throwInvalidValueError","check12ValidFormat","check12ValidRange","_version2","_launch_data","_comments","_comments_from_lms","CMICore","CMIObjectives","CMIInteractions","_this$core","_this$objectives","_this$interactions","_version","_this$core2","CMIString4096","start_time","_student_id","_student_name","_lesson_location","_credit","_entry","_total_time","_lesson_mode","_exit","_session_time","_suspend_data","core_children","student_id","student_name","lesson_location","CMIStatus","entry","exit","CMIExit","session_time","CMITimespan","sessionTime","startTime","seconds","getSecondsAsHHMMSS","addHHMMSSTimeStrings","objectives_children","_children4","_mastery_score","_max_time_allowed","_time_limit_action","_children5","_audio","_language","_speed","_text","CMISInteger","audio_range","speed_range","text_range","interactions_children","_id","_type","_weighting","_student_response","_result","_latency","correct_responses","correct_responses_children","_this$objectives2","_this$correct_respons","id","CMIIdentifier","CMIType","weighting","weighting_range","student_response","CMIFeedback","CMIResult","latency","_id2","_id3","_BaseCMI7","_pattern","_BaseCMI8","pattern","_event","_BaseCMI9","NAVEvent","LOG_LEVEL_NONE","INITIALIZATION_FAILED","TERMINATION_FAILURE","ARGUMENT_ERROR","GENERAL_GET_FAILURE","GENERAL_SET_FAILURE","GENERAL_COMMIT_FAILURE","UNIMPLEMENTED_ELEMENT","DEPENDENCY_NOT_ESTABLISHED","MULTIPLE_TERMINATIONS","CMIInteger","CMIIndex","CMIString200","CMIString250","CMIString1000","CMIString4000","CMIString64000","CMILang","CMILangString250","CMILangcr","CMILangString250cr","CMILangString4000","CMIShortIdentifier","CMILongIdentifier","CMIIndexStore","CMICStatus","CMISStatus","NAVBoolean","NAVTarget","scaled_range","progress_range","scorm12_errors","aicc_errors","scorm2004_errors","_errorMessage","_detailedMessage","_Error","errorMessage","detailedMessage","_wrapNativeSuper","_ValidationError","_possibleConstructorReturn","_ValidationError2","Scorm2004ValidationError","_ValidationError3","SECONDS_PER_SECOND","SECONDS_PER_MINUTE","SECONDS_PER_HOUR","SECONDS_PER_DAY","designations","totalSeconds","hours","floor","dateObj","minutes","getUTCMinutes","getSeconds","ms","msStr","countDecimals","toFixed","getSecondsAsISODuration","duration","remainder","sign","current_seconds","getTimeAsSeconds","timeString","timeRegex","parts","getDurationAsSeconds","durationRegex","exec","years","months","days","addTwoDurations","first","second","data","recurse","cur","prop","isArray","l","isEmpty","p","regex","m","num","window"],"sourceRoot":""}