{"version":3,"file":"scorm2004.js","mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAIA,eAAe,GAAG,qBAAqB;;AAE3C;AACA,IAAIC,GAAG,GAAG,CAAC,GAAG,CAAC;;AAEf;AACA,IAAIC,SAAS,GAAG,iBAAiB;;AAEjC;AACA,IAAIC,MAAM,GAAG,YAAY;;AAEzB;AACA,IAAIC,UAAU,GAAG,oBAAoB;;AAErC;AACA,IAAIC,UAAU,GAAG,YAAY;;AAE7B;AACA,IAAIC,SAAS,GAAG,aAAa;;AAE7B;AACA,IAAIC,YAAY,GAAGC,QAAQ;;AAE3B;AACA,IAAIC,UAAU,GAAG,QAAOC,qBAAM,iCAAAC,OAAA,CAAND,qBAAM,MAAI,QAAQ,IAAIA,qBAAM,IAAIA,qBAAM,CAACE,MAAM,KAAKA,MAAM,IAAIF,qBAAM;;AAE1F;AACA,IAAIG,QAAQ,GAAG,QAAOC,IAAI,iCAAAH,OAAA,CAAJG,IAAI,MAAI,QAAQ,IAAIA,IAAI,IAAIA,IAAI,CAACF,MAAM,KAAKA,MAAM,IAAIE,IAAI;;AAEhF;AACA,IAAIC,IAAI,GAAGN,UAAU,IAAII,QAAQ,IAAIG,QAAQ,CAAC,aAAa,CAAC,EAAE;;AAE9D;AACA,IAAIC,WAAW,GAAGL,MAAM,CAACM,SAAS;;AAElC;AACA;AACA;AACA;AACA;AACA,IAAIC,cAAc,GAAGF,WAAW,CAACG,QAAQ;;AAEzC;AACA,IAAIC,SAAS,GAAGC,IAAI,CAACC,GAAG;EACpBC,SAAS,GAAGF,IAAI,CAACG,GAAG;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAc;EACnB,OAAOX,IAAI,CAACY,IAAI,CAACD,GAAG,EAAE;AACxB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,QAAQA,CAACC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAE;EACrC,IAAIC,QAAQ;IACRC,QAAQ;IACRC,OAAO;IACPC,MAAM;IACNC,OAAO;IACPC,YAAY;IACZC,cAAc,GAAG,CAAC;IAClBC,OAAO,GAAG,KAAK;IACfC,MAAM,GAAG,KAAK;IACdC,QAAQ,GAAG,IAAI;EAEnB,IAAI,OAAOZ,IAAI,IAAI,UAAU,EAAE;IAC7B,MAAM,IAAIa,SAAS,CAAC1C,eAAe,CAAC;EACtC;EACA8B,IAAI,GAAGa,QAAQ,CAACb,IAAI,CAAC,IAAI,CAAC;EAC1B,IAAIc,QAAQ,CAACb,OAAO,CAAC,EAAE;IACrBQ,OAAO,GAAG,CAAC,CAACR,OAAO,CAACQ,OAAO;IAC3BC,MAAM,GAAG,SAAS,IAAIT,OAAO;IAC7BG,OAAO,GAAGM,MAAM,GAAGnB,SAAS,CAACsB,QAAQ,CAACZ,OAAO,CAACG,OAAO,CAAC,IAAI,CAAC,EAAEJ,IAAI,CAAC,GAAGI,OAAO;IAC5EO,QAAQ,GAAG,UAAU,IAAIV,OAAO,GAAG,CAAC,CAACA,OAAO,CAACU,QAAQ,GAAGA,QAAQ;EAClE;EAEA,SAASI,UAAUA,CAACC,IAAI,EAAE;IACxB,IAAIC,IAAI,GAAGf,QAAQ;MACfgB,OAAO,GAAGf,QAAQ;IAEtBD,QAAQ,GAAGC,QAAQ,GAAGgB,SAAS;IAC/BX,cAAc,GAAGQ,IAAI;IACrBX,MAAM,GAAGN,IAAI,CAACqB,KAAK,CAACF,OAAO,EAAED,IAAI,CAAC;IAClC,OAAOZ,MAAM;EACf;EAEA,SAASgB,WAAWA,CAACL,IAAI,EAAE;IACzB;IACAR,cAAc,GAAGQ,IAAI;IACrB;IACAV,OAAO,GAAGgB,UAAU,CAACC,YAAY,EAAEvB,IAAI,CAAC;IACxC;IACA,OAAOS,OAAO,GAAGM,UAAU,CAACC,IAAI,CAAC,GAAGX,MAAM;EAC5C;EAEA,SAASmB,aAAaA,CAACR,IAAI,EAAE;IAC3B,IAAIS,iBAAiB,GAAGT,IAAI,GAAGT,YAAY;MACvCmB,mBAAmB,GAAGV,IAAI,GAAGR,cAAc;MAC3CH,MAAM,GAAGL,IAAI,GAAGyB,iBAAiB;IAErC,OAAOf,MAAM,GAAGhB,SAAS,CAACW,MAAM,EAAED,OAAO,GAAGsB,mBAAmB,CAAC,GAAGrB,MAAM;EAC3E;EAEA,SAASsB,YAAYA,CAACX,IAAI,EAAE;IAC1B,IAAIS,iBAAiB,GAAGT,IAAI,GAAGT,YAAY;MACvCmB,mBAAmB,GAAGV,IAAI,GAAGR,cAAc;;IAE/C;IACA;IACA;IACA,OAAQD,YAAY,KAAKY,SAAS,IAAKM,iBAAiB,IAAIzB,IAAK,IAC9DyB,iBAAiB,GAAG,CAAE,IAAKf,MAAM,IAAIgB,mBAAmB,IAAItB,OAAQ;EACzE;EAEA,SAASmB,YAAYA,CAAA,EAAG;IACtB,IAAIP,IAAI,GAAGpB,GAAG,EAAE;IAChB,IAAI+B,YAAY,CAACX,IAAI,CAAC,EAAE;MACtB,OAAOY,YAAY,CAACZ,IAAI,CAAC;IAC3B;IACA;IACAV,OAAO,GAAGgB,UAAU,CAACC,YAAY,EAAEC,aAAa,CAACR,IAAI,CAAC,CAAC;EACzD;EAEA,SAASY,YAAYA,CAACZ,IAAI,EAAE;IAC1BV,OAAO,GAAGa,SAAS;;IAEnB;IACA;IACA,IAAIR,QAAQ,IAAIT,QAAQ,EAAE;MACxB,OAAOa,UAAU,CAACC,IAAI,CAAC;IACzB;IACAd,QAAQ,GAAGC,QAAQ,GAAGgB,SAAS;IAC/B,OAAOd,MAAM;EACf;EAEA,SAASwB,MAAMA,CAAA,EAAG;IAChB,IAAIvB,OAAO,KAAKa,SAAS,EAAE;MACzBW,YAAY,CAACxB,OAAO,CAAC;IACvB;IACAE,cAAc,GAAG,CAAC;IAClBN,QAAQ,GAAGK,YAAY,GAAGJ,QAAQ,GAAGG,OAAO,GAAGa,SAAS;EAC1D;EAEA,SAASY,KAAKA,CAAA,EAAG;IACf,OAAOzB,OAAO,KAAKa,SAAS,GAAGd,MAAM,GAAGuB,YAAY,CAAChC,GAAG,EAAE,CAAC;EAC7D;EAEA,SAASoC,SAASA,CAAA,EAAG;IACnB,IAAIhB,IAAI,GAAGpB,GAAG,EAAE;MACZqC,UAAU,GAAGN,YAAY,CAACX,IAAI,CAAC;IAEnCd,QAAQ,GAAGgC,SAAS;IACpB/B,QAAQ,GAAG,IAAI;IACfI,YAAY,GAAGS,IAAI;IAEnB,IAAIiB,UAAU,EAAE;MACd,IAAI3B,OAAO,KAAKa,SAAS,EAAE;QACzB,OAAOE,WAAW,CAACd,YAAY,CAAC;MAClC;MACA,IAAIG,MAAM,EAAE;QACV;QACAJ,OAAO,GAAGgB,UAAU,CAACC,YAAY,EAAEvB,IAAI,CAAC;QACxC,OAAOe,UAAU,CAACR,YAAY,CAAC;MACjC;IACF;IACA,IAAID,OAAO,KAAKa,SAAS,EAAE;MACzBb,OAAO,GAAGgB,UAAU,CAACC,YAAY,EAAEvB,IAAI,CAAC;IAC1C;IACA,OAAOK,MAAM;EACf;EACA2B,SAAS,CAACH,MAAM,GAAGA,MAAM;EACzBG,SAAS,CAACD,KAAK,GAAGA,KAAK;EACvB,OAAOC,SAAS;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASlB,QAAQA,CAACqB,KAAK,EAAE;EACvB,IAAIC,IAAI,GAAAvD,OAAA,CAAUsD,KAAK;EACvB,OAAO,CAAC,CAACA,KAAK,KAAKC,IAAI,IAAI,QAAQ,IAAIA,IAAI,IAAI,UAAU,CAAC;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACF,KAAK,EAAE;EAC3B,OAAO,CAAC,CAACA,KAAK,IAAItD,OAAA,CAAOsD,KAAK,KAAI,QAAQ;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,QAAQA,CAACH,KAAK,EAAE;EACvB,OAAOtD,OAAA,CAAOsD,KAAK,KAAI,QAAQ,IAC5BE,YAAY,CAACF,KAAK,CAAC,IAAI9C,cAAc,CAACkD,IAAI,CAACJ,KAAK,CAAC,IAAI/D,SAAU;AACpE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASyC,QAAQA,CAACsB,KAAK,EAAE;EACvB,IAAI,OAAOA,KAAK,IAAI,QAAQ,EAAE;IAC5B,OAAOA,KAAK;EACd;EACA,IAAIG,QAAQ,CAACH,KAAK,CAAC,EAAE;IACnB,OAAOhE,GAAG;EACZ;EACA,IAAI2C,QAAQ,CAACqB,KAAK,CAAC,EAAE;IACnB,IAAIK,KAAK,GAAG,OAAOL,KAAK,CAACM,OAAO,IAAI,UAAU,GAAGN,KAAK,CAACM,OAAO,EAAE,GAAGN,KAAK;IACxEA,KAAK,GAAGrB,QAAQ,CAAC0B,KAAK,CAAC,GAAIA,KAAK,GAAG,EAAE,GAAIA,KAAK;EAChD;EACA,IAAI,OAAOL,KAAK,IAAI,QAAQ,EAAE;IAC5B,OAAOA,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK;EACrC;EACAA,KAAK,GAAGA,KAAK,CAACO,OAAO,CAACrE,MAAM,EAAE,EAAE,CAAC;EACjC,IAAIsE,QAAQ,GAAGpE,UAAU,CAACqE,IAAI,CAACT,KAAK,CAAC;EACrC,OAAQQ,QAAQ,IAAInE,SAAS,CAACoE,IAAI,CAACT,KAAK,CAAC,GACrC1D,YAAY,CAAC0D,KAAK,CAACU,KAAK,CAAC,CAAC,CAAC,EAAEF,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,GAC7CrE,UAAU,CAACsE,IAAI,CAACT,KAAK,CAAC,GAAGhE,GAAG,GAAG,CAACgE,KAAM;AAC7C;AAEAW,MAAM,CAACC,OAAO,GAAGjD,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvXa;AACO;AACI;AACI;AACf;AACC;AAEvC,IAAMuD,gBAAgB,GAAGF,uEAAmB;AAC5C,IAAMG,mBAAmB,GAAGJ,sEAAkB;;AAE9C;AACA;AACA;AACA;AAHA,IAAAM,QAAA,oBAAAC,OAAA;AAAA,IAAAC,YAAA,oBAAAD,OAAA;AAAA,IAAAE,SAAA,oBAAAF,OAAA;AAAA,IAIqBG,OAAO;EA8D1B;AACF;AACA;AACA;AACA;AACA;EACE,SAAAA,QAAYC,WAAW,EAAEC,QAAQ,EAAE;IAAAC,eAAA,OAAAH,OAAA;IAAAI,0BAAA,OAAAR,QAAA;MAAAS,QAAA;MAAA9B,KAAA;IAAA;IAAA6B,0BAAA,OAAAN,YAAA;MAAAO,QAAA;MAAA9B,KAAA;IAAA;IAAA6B,0BAAA,OAAAL,SAAA;MAAAM,QAAA;MAAA9B,KAAA,EAjEvB;QACV+B,UAAU,EAAE,KAAK;QACjBC,iBAAiB,EAAE,EAAE;QACrBC,WAAW,EAAE,KAAK;QAClBC,gBAAgB,EAAE,KAAK;QACvBC,YAAY,EAAE,KAAK;QACnBC,gBAAgB,EAAE,MAAM;QAAE;QAC1BC,qBAAqB,EAAE,gCAAgC;QACvDC,YAAY,EAAE,KAAK;QACnBC,QAAQ,EAAErB,gBAAgB,CAACsB,eAAe;QAC1CC,qBAAqB,EAAE,KAAK;QAC5BC,mBAAmB,EAAE,KAAK;QAC1BC,aAAa,EAAE,IAAI;QACnBC,UAAU,EAAE,CAAC,CAAC;QACdC,kBAAkB,EAAE,KAAK;QACzBC,eAAe,EAAE,SAAAA,gBAASC,GAAG,EAAE;UAC7B,IAAI7E,MAAM;UACV,IAAI,OAAO6E,GAAG,KAAK,WAAW,EAAE;YAC9B7E,MAAM,GAAG8E,IAAI,CAACC,KAAK,CAACF,GAAG,CAACG,YAAY,CAAC;YACrC,IAAIhF,MAAM,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,CAACiF,cAAc,CAAC/C,IAAI,CAAClC,MAAM,EAAE,QAAQ,CAAC,EAAE;cAChEA,MAAM,GAAG,CAAC,CAAC;cACX,IAAI6E,GAAG,CAACK,MAAM,KAAK,GAAG,EAAE;gBACtBlF,MAAM,CAACA,MAAM,GAAGgD,gBAAgB,CAACmC,UAAU;gBAC3CnF,MAAM,CAACoF,SAAS,GAAG,CAAC;cACtB,CAAC,MAAM;gBACLpF,MAAM,CAACA,MAAM,GAAGgD,gBAAgB,CAACqC,WAAW;gBAC5CrF,MAAM,CAACoF,SAAS,GAAG,GAAG;cACxB;YACF;UACF;UACA,OAAOpF,MAAM;QACf,CAAC;QACDsF,cAAc,EAAE,SAAAA,eAASC,YAAY,EAAE;UACrC,OAAOA,YAAY;QACrB,CAAC;QACDC,YAAY,EAAE,SAAAA,aAASC,YAAY,EAAEC,UAAU,EAAE;UAC/C,QAAQD,YAAY;YAClB,KAAKzC,gBAAgB,CAACsB,eAAe;cACnCqB,OAAO,CAACC,KAAK,CAACF,UAAU,CAAC;cACzB;YACF,KAAK1C,gBAAgB,CAAC6C,iBAAiB;cACrCF,OAAO,CAACG,IAAI,CAACJ,UAAU,CAAC;cACxB;YACF,KAAK1C,gBAAgB,CAAC+C,cAAc;cAClCJ,OAAO,CAACK,IAAI,CAACN,UAAU,CAAC;cACxB;YACF,KAAK1C,gBAAgB,CAACiD,eAAe;cACnC,IAAIN,OAAO,CAACO,KAAK,EAAE;gBACjBP,OAAO,CAACO,KAAK,CAACR,UAAU,CAAC;cAC3B,CAAC,MAAM;gBACLC,OAAO,CAACQ,GAAG,CAACT,UAAU,CAAC;cACzB;cACA;UAAM;QAEZ;MACF;IAAC;IAAAU,eAAA;IAAAA,eAAA;IAWC,IAAI,iBAAA7C,OAAA,QAAA8C,WAAA,eAAe9C,OAAO,EAAE;MAC1B,MAAM,IAAIhD,SAAS,CAAC,6CAA6C,CAAC;IACpE;IACA,IAAI,CAAC+F,YAAY,GAAGtD,gBAAgB,CAACuD,qBAAqB;IAC1D,IAAI,CAACC,aAAa,GAAG,CAAC;IACtB,IAAI,CAACC,aAAa,GAAG,EAAE;IAEvBC,qBAAA,KAAI,EAAAvD,QAAA,EAAY,IAAI;IACpBuD,qBAAA,KAAI,EAAArD,YAAA,EAAgBG,WAAW;IAE/B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACkD,WAAW,GAAG,IAAI,CAAClD,QAAQ,CAACY,QAAQ;IACzC,IAAI,CAACE,qBAAqB,GAAG,IAAI,CAACd,QAAQ,CAACc,qBAAqB;EAClE;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANEqC,YAAA,CAAArD,OAAA;IAAAsD,GAAA;IAAA/E,KAAA,EAOA,SAAAgF,WACIC,YAAoB,EACpBC,iBAA0B,EAC1BC,kBAA2B,EAAE;MAC/B,IAAIC,WAAW,GAAGlE,gBAAgB,CAACqC,WAAW;MAE9C,IAAI,IAAI,CAAC8B,aAAa,EAAE,EAAE;QACxB,IAAI,CAACC,eAAe,CAACC,qBAAA,KAAI,EAAAhE,YAAA,EAAciE,WAAW,EAAEN,iBAAiB,CAAC;MACxE,CAAC,MAAM,IAAI,IAAI,CAACO,YAAY,EAAE,EAAE;QAC9B,IAAI,CAACH,eAAe,CAACC,qBAAA,KAAI,EAAAhE,YAAA,EAAcmE,UAAU,EAAEP,kBAAkB,CAAC;MACxE,CAAC,MAAM;QACL,IAAI,IAAI,CAAC1C,qBAAqB,EAAE;UAC9B,IAAI,CAACkD,GAAG,CAACC,YAAY,EAAE;QACzB;QAEA,IAAI,CAACpB,YAAY,GAAGtD,gBAAgB,CAAC2E,iBAAiB;QACtD,IAAI,CAACnB,aAAa,GAAG,CAAC;QACtBU,WAAW,GAAGlE,gBAAgB,CAACmC,UAAU;QACzC,IAAI,CAACyC,gBAAgB,CAACb,YAAY,CAAC;MACrC;MAEA,IAAI,CAACc,MAAM,CAACd,YAAY,EAAE,IAAI,EAAE,YAAY,GAAGG,WAAW,EACtDlE,gBAAgB,CAAC+C,cAAc,CAAC;MACpC,IAAI,CAAC+B,eAAe,CAACZ,WAAW,CAAC;MAEjC,OAAOA,WAAW;IACpB;;IAEA;AACF;AACA;AACA;EAHE;IAAAL,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAkB;MAChB,OAAAV,qBAAA,CAAO,IAAI,EAAAhE,YAAA;IACb;;IAEA;AACF;AACA;AACA;EAHE;IAAAwD,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAe;MACb,OAAAV,qBAAA,CAAO,IAAI,EAAA/D,SAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA0E,GAAA,EAIA,SAAAA,IAAavE,QAAgB,EAAE;MAC7BiD,qBAAA,KAAI,EAAApD,SAAA,EAAA2E,aAAA,CAAAA,aAAA,KAAAZ,qBAAA,CAAiB,IAAI,EAAA/D,SAAA,IAAeG,QAAQ;IAClD;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAoD,GAAA;IAAA/E,KAAA,EAMA,SAAAoG,UACInB,YAAoB,EACpBoB,eAAwB,EAAE;MAC5B,IAAIjB,WAAW,GAAGlE,gBAAgB,CAACqC,WAAW;MAE9C,IAAI,IAAI,CAAC+C,UAAU,CAACD,eAAe,EAC/Bd,qBAAA,KAAI,EAAAhE,YAAA,EAAcgF,uBAAuB,EACzChB,qBAAA,KAAI,EAAAhE,YAAA,EAAciF,oBAAoB,CAAC,EAAE;QAC3C,IAAI,CAAChC,YAAY,GAAGtD,gBAAgB,CAACuF,gBAAgB;QAErD,IAAMvI,MAAM,GAAG,IAAI,CAACwI,SAAS,CAAC,IAAI,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC/E,QAAQ,CAACO,gBAAgB,IAAI,CAAC,IAAI,CAACP,QAAQ,CAACM,WAAW,IAC/D,OAAO/D,MAAM,CAACoF,SAAS,KAAK,WAAW,IAAIpF,MAAM,CAACoF,SAAS,GAAG,CAAC,EAAE;UACjE,IAAI,CAACgC,eAAe,CAACpH,MAAM,CAACoF,SAAS,CAAC;QACxC;QACA8B,WAAW,GAAI,OAAOlH,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACA,MAAM,GAC3DA,MAAM,CAACA,MAAM,GAAGgD,gBAAgB,CAACqC,WAAW;QAE9C,IAAI8C,eAAe,EAAE,IAAI,CAAC3B,aAAa,GAAG,CAAC;QAE3CU,WAAW,GAAGlE,gBAAgB,CAACmC,UAAU;QACzC,IAAI,CAACyC,gBAAgB,CAACb,YAAY,CAAC;MACrC;MAEA,IAAI,CAACc,MAAM,CAACd,YAAY,EAAE,IAAI,EAAE,YAAY,GAAGG,WAAW,EACtDlE,gBAAgB,CAAC+C,cAAc,CAAC;MACpC,IAAI,CAAC+B,eAAe,CAACZ,WAAW,CAAC;MAEjC,OAAOA,WAAW;IACpB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAL,GAAA;IAAA/E,KAAA,EAQA,SAAA2G,SACI1B,YAAoB,EACpBoB,eAAwB,EACxBO,UAAkB,EAAE;MACtB,IAAIxB,WAAW;MAEf,IAAI,IAAI,CAACkB,UAAU,CAACD,eAAe,EAC/Bd,qBAAA,KAAI,EAAAhE,YAAA,EAAcsF,oBAAoB,EACtCtB,qBAAA,KAAI,EAAAhE,YAAA,EAAcuF,mBAAmB,CAAC,EAAE;QAC1C,IAAIT,eAAe,EAAE,IAAI,CAAC3B,aAAa,GAAG,CAAC;QAC3C,IAAI;UACFU,WAAW,GAAG,IAAI,CAAC2B,WAAW,CAACH,UAAU,CAAC;QAC5C,CAAC,CAAC,OAAOI,CAAC,EAAE;UACV,IAAIA,CAAC,YAAYlG,wDAAe,EAAE;YAChC,IAAI,CAAC4D,aAAa,GAAGsC,CAAC,CAAC1D,SAAS;YAChC8B,WAAW,GAAGlE,gBAAgB,CAACqC,WAAW;UAC5C,CAAC,MAAM;YACL,IAAIyD,CAAC,CAACC,OAAO,EAAE;cACbpD,OAAO,CAACC,KAAK,CAACkD,CAAC,CAACC,OAAO,CAAC;YAC1B,CAAC,MAAM;cACLpD,OAAO,CAACC,KAAK,CAACkD,CAAC,CAAC;YAClB;YACA,IAAI,CAAC1B,eAAe,CAACC,qBAAA,KAAI,EAAAhE,YAAA,EAAc2F,OAAO,CAAC;UACjD;QACF;QACA,IAAI,CAACpB,gBAAgB,CAACb,YAAY,EAAE2B,UAAU,CAAC;MACjD;MAEA,IAAI,CAACb,MAAM,CAACd,YAAY,EAAE2B,UAAU,EAAE,cAAc,GAAGxB,WAAW,EAC9DlE,gBAAgB,CAAC+C,cAAc,CAAC;MACpC,IAAI,CAAC+B,eAAe,CAACZ,WAAW,CAAC;MAEjC,OAAOA,WAAW;IACpB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAL,GAAA;IAAA/E,KAAA,EAUA,SAAAmH,SACIlC,YAAoB,EACpBmC,cAAsB,EACtBf,eAAwB,EACxBO,UAAU,EACV5G,KAAK,EAAE;MACT,IAAIA,KAAK,KAAKhB,SAAS,EAAE;QACvBgB,KAAK,GAAGqH,MAAM,CAACrH,KAAK,CAAC;MACvB;MACA,IAAIoF,WAAW,GAAGlE,gBAAgB,CAACqC,WAAW;MAE9C,IAAI,IAAI,CAAC+C,UAAU,CAACD,eAAe,EAAEd,qBAAA,KAAI,EAAAhE,YAAA,EAAc+F,iBAAiB,EACpE/B,qBAAA,KAAI,EAAAhE,YAAA,EAAcgG,gBAAgB,CAAC,EAAE;QACvC,IAAIlB,eAAe,EAAE,IAAI,CAAC3B,aAAa,GAAG,CAAC;QAC3C,IAAI;UACFU,WAAW,GAAG,IAAI,CAACoC,WAAW,CAACZ,UAAU,EAAE5G,KAAK,CAAC;QACnD,CAAC,CAAC,OAAOgH,CAAC,EAAE;UACV,IAAIA,CAAC,YAAYlG,wDAAe,EAAE;YAChC,IAAI,CAAC4D,aAAa,GAAGsC,CAAC,CAAC1D,SAAS;YAChC8B,WAAW,GAAGlE,gBAAgB,CAACqC,WAAW;UAC5C,CAAC,MAAM;YACL,IAAIyD,CAAC,CAACC,OAAO,EAAE;cACbpD,OAAO,CAACC,KAAK,CAACkD,CAAC,CAACC,OAAO,CAAC;YAC1B,CAAC,MAAM;cACLpD,OAAO,CAACC,KAAK,CAACkD,CAAC,CAAC;YAClB;YACA,IAAI,CAAC1B,eAAe,CAACC,qBAAA,KAAI,EAAAhE,YAAA,EAAc2F,OAAO,CAAC;UACjD;QACF;QACA,IAAI,CAACpB,gBAAgB,CAACb,YAAY,EAAE2B,UAAU,EAAE5G,KAAK,CAAC;MACxD;MAEA,IAAIoF,WAAW,KAAKpG,SAAS,EAAE;QAC7BoG,WAAW,GAAGlE,gBAAgB,CAACqC,WAAW;MAC5C;;MAEA;MACA;MACA,IAAI8D,MAAM,CAAC,IAAI,CAAC3C,aAAa,CAAC,KAAK,GAAG,EAAE;QACtC,IAAI,IAAI,CAAC/C,QAAQ,CAACI,UAAU,IAAI,CAAAwD,qBAAA,CAAC,IAAI,EAAAlE,QAAA,CAAS,EAAE;UAC9C,IAAI,CAACoG,cAAc,CAAC,IAAI,CAAC9F,QAAQ,CAACK,iBAAiB,GAAG,IAAI,EAAEoF,cAAc,CAAC;QAC7E;MACF;MAEA,IAAI,CAACrB,MAAM,CAACd,YAAY,EAAE2B,UAAU,EAChC,IAAI,GAAG5G,KAAK,GAAG,YAAY,GAAGoF,WAAW,EACzClE,gBAAgB,CAAC+C,cAAc,CAAC;MACpC,IAAI,CAAC+B,eAAe,CAACZ,WAAW,CAAC;MAEjC,OAAOA,WAAW;IACpB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAL,GAAA;IAAA/E,KAAA,EAMA,SAAA0H,OACIzC,YAAoB,EACpBoB,eAAwB,EAAE;MAC5B,IAAI,CAACsB,oBAAoB,EAAE;MAE3B,IAAIvC,WAAW,GAAGlE,gBAAgB,CAACqC,WAAW;MAE9C,IAAI,IAAI,CAAC+C,UAAU,CAACD,eAAe,EAAEd,qBAAA,KAAI,EAAAhE,YAAA,EAAcqG,kBAAkB,EACrErC,qBAAA,KAAI,EAAAhE,YAAA,EAAcsG,iBAAiB,CAAC,EAAE;QACxC,IAAM3J,MAAM,GAAG,IAAI,CAACwI,SAAS,CAAC,KAAK,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC/E,QAAQ,CAACO,gBAAgB,IAAI,CAAC,IAAI,CAACP,QAAQ,CAACM,WAAW,IAC/D/D,MAAM,CAACoF,SAAS,IAAIpF,MAAM,CAACoF,SAAS,GAAG,CAAC,EAAE;UAC1C,IAAI,CAACgC,eAAe,CAACpH,MAAM,CAACoF,SAAS,CAAC;QACxC;QACA8B,WAAW,GAAI,OAAOlH,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACA,MAAM,GAC3DA,MAAM,CAACA,MAAM,GAAGgD,gBAAgB,CAACqC,WAAW;QAE9C,IAAI,CAACwC,MAAM,CAACd,YAAY,EAAE,aAAa,EAAE,WAAW,GAAGG,WAAW,EAC9DlE,gBAAgB,CAACiD,eAAe,CAAC;QAErC,IAAIkC,eAAe,EAAE,IAAI,CAAC3B,aAAa,GAAG,CAAC;QAE3C,IAAI,CAACoB,gBAAgB,CAACb,YAAY,CAAC;MACrC;MAEA,IAAI,CAACc,MAAM,CAACd,YAAY,EAAE,IAAI,EAAE,YAAY,GAAGG,WAAW,EACtDlE,gBAAgB,CAAC+C,cAAc,CAAC;MACpC,IAAI,CAAC+B,eAAe,CAACZ,WAAW,CAAC;MAEjC,OAAOA,WAAW;IACpB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAL,GAAA;IAAA/E,KAAA,EAKA,SAAA8H,aAAa7C,YAAoB,EAAE;MACjC,IAAMG,WAAW,GAAGiC,MAAM,CAAC,IAAI,CAAC3C,aAAa,CAAC;MAE9C,IAAI,CAACoB,gBAAgB,CAACb,YAAY,CAAC;MAEnC,IAAI,CAACc,MAAM,CAACd,YAAY,EAAE,IAAI,EAAE,YAAY,GAAGG,WAAW,EACtDlE,gBAAgB,CAAC+C,cAAc,CAAC;MAEpC,OAAOmB,WAAW;IACpB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAL,GAAA;IAAA/E,KAAA,EAOA,SAAA+H,eAAe9C,YAAoB,EAAE+C,YAAY,EAAE;MACjD,IAAI5C,WAAW,GAAG,EAAE;MAEpB,IAAI4C,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,EAAE,EAAE;QAChD5C,WAAW,GAAG,IAAI,CAAC6C,yBAAyB,CAACD,YAAY,CAAC;QAC1D,IAAI,CAAClC,gBAAgB,CAACb,YAAY,CAAC;MACrC;MAEA,IAAI,CAACc,MAAM,CAACd,YAAY,EAAE,IAAI,EAAE,YAAY,GAAGG,WAAW,EACtDlE,gBAAgB,CAAC+C,cAAc,CAAC;MAEpC,OAAOmB,WAAW;IACpB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAL,GAAA;IAAA/E,KAAA,EAOA,SAAAkI,cAAcjD,YAAoB,EAAE+C,YAAY,EAAE;MAChD,IAAI5C,WAAW,GAAG,EAAE;MAEpB,IAAI4C,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,EAAE,EAAE;QAChD5C,WAAW,GAAG,IAAI,CAAC6C,yBAAyB,CAACD,YAAY,EAAE,IAAI,CAAC;QAChE,IAAI,CAAClC,gBAAgB,CAACb,YAAY,CAAC;MACrC;MAEA,IAAI,CAACc,MAAM,CAACd,YAAY,EAAE,IAAI,EAAE,YAAY,GAAGG,WAAW,EACtDlE,gBAAgB,CAAC+C,cAAc,CAAC;MAEpC,OAAOmB,WAAW;IACpB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAL,GAAA;IAAA/E,KAAA,EAQA,SAAAsG,WACID,eAAwB,EACxB8B,eAAuB,EACvBC,cAAuB,EAAE;MAC3B,IAAI,IAAI,CAACC,gBAAgB,EAAE,EAAE;QAC3B,IAAI,CAAC/C,eAAe,CAAC6C,eAAe,CAAC;QACrC,OAAO,KAAK;MACd,CAAC,MAAM,IAAI9B,eAAe,IAAI,IAAI,CAACZ,YAAY,EAAE,EAAE;QACjD,IAAI,CAACH,eAAe,CAAC8C,cAAc,CAAC;QACpC,OAAO,KAAK;MACd;MAEA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAArD,GAAA;IAAA/E,KAAA,EAQA,SAAA+F,OACIuC,YAAoB,EACpB1B,UAAkB,EAClBhD,UAAkB,EAClBD,YAAoB,EAAE;MACxBC,UAAU,GAAG,IAAI,CAAC2E,aAAa,CAACD,YAAY,EAAE1B,UAAU,EAAEhD,UAAU,CAAC;MAErE,IAAID,YAAY,IAAI,IAAI,CAACkB,WAAW,EAAE;QACpC,IAAI,CAAClD,QAAQ,CAAC+B,YAAY,CAACC,YAAY,EAAEC,UAAU,CAAC;MACtD;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAmB,GAAA;IAAA/E,KAAA,EAQA,SAAAuI,cAAcD,YAAoB,EAAE1B,UAAkB,EAAEK,OAAe,EAAE;MACvE,IAAMuB,UAAU,GAAG,EAAE;MACrB,IAAIC,aAAa,GAAG,EAAE;MAEtBA,aAAa,IAAIH,YAAY;MAE7B,IAAII,SAAS,GAAGF,UAAU,GAAGC,aAAa,CAACE,MAAM;MAEjD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,EAAEE,CAAC,EAAE,EAAE;QAClCH,aAAa,IAAI,GAAG;MACtB;MAEAA,aAAa,IAAI,IAAI;MAErB,IAAI7B,UAAU,EAAE;QACd,IAAMiC,oBAAoB,GAAG,EAAE;QAE/BJ,aAAa,IAAI7B,UAAU;QAE3B8B,SAAS,GAAGG,oBAAoB,GAAGJ,aAAa,CAACE,MAAM;QAEvD,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,SAAS,EAAEI,CAAC,EAAE,EAAE;UAClCL,aAAa,IAAI,GAAG;QACtB;MACF;MAEA,IAAIxB,OAAO,EAAE;QACXwB,aAAa,IAAIxB,OAAO;MAC1B;MAEA,OAAOwB,aAAa;IACtB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA1D,GAAA;IAAA/E,KAAA,EAOA,SAAA+I,cAAcC,GAAW,EAAEC,MAAc,EAAE;MACzC,OAAOD,GAAG,IAAIC,MAAM,IAAID,GAAG,CAACE,KAAK,CAACD,MAAM,CAAC;IAC3C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAlE,GAAA;IAAA/E,KAAA,EAOA,SAAAmJ,wBAAwBC,SAAS,EAAEC,SAAiB,EAAE;MACpD,OAAO1M,MAAM,CAACwG,cAAc,CAAC/C,IAAI,CAACgJ,SAAS,EAAEC,SAAS,CAAC,IACrD1M,MAAM,CAAC2M,wBAAwB,CAC3B3M,MAAM,CAAC4M,cAAc,CAACH,SAAS,CAAC,EAAEC,SAAS,CAAC,IAC/CA,SAAS,IAAID,SAAU;IAC5B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAArE,GAAA;IAAA/E,KAAA,EASA,SAAAiI,0BAA0BuB,YAAY,EAAEC,OAAO,EAAE;MAC/C,MAAM,IAAIC,KAAK,CACX,+DAA+D,CAAC;IACtE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA3E,GAAA;IAAA/E,KAAA,EAQA,SAAA+G,YAAY4C,WAAW,EAAE;MACvB,MAAM,IAAID,KAAK,CAAC,iDAAiD,CAAC;IACpE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAA3E,GAAA;IAAA/E,KAAA,EASA,SAAAwH,YAAYmC,WAAW,EAAEC,MAAM,EAAE;MAC/B,MAAM,IAAIF,KAAK,CAAC,iDAAiD,CAAC;IACpE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAA3E,GAAA;IAAA/E,KAAA,EASA,SAAA6J,mBACIC,UAAkB,EAAEC,SAAkB,EAAEnD,UAAU,EAAE5G,KAAK,EAAE;MAC7D,IAAI,CAAC4G,UAAU,IAAIA,UAAU,KAAK,EAAE,EAAE;QACpC,OAAO1F,gBAAgB,CAACqC,WAAW;MACrC;MAEA,IAAMyG,SAAS,GAAGpD,UAAU,CAACqD,KAAK,CAAC,GAAG,CAAC;MACvC,IAAIb,SAAS,GAAG,IAAI;MACpB,IAAIhE,WAAW,GAAGlE,gBAAgB,CAACqC,WAAW;MAC9C,IAAI2G,eAAe,GAAG,KAAK;MAE3B,IAAMC,mBAAmB,uCAAAC,MAAA,CAAuCN,UAAU,QAAAM,MAAA,CAAKxD,UAAU,+CAA4C;MACrI,IAAMyD,gBAAgB,GAAGN,SAAS,GAChCxE,qBAAA,KAAI,EAAAhE,YAAA,EAAc+I,oBAAoB,GACtC/E,qBAAA,KAAI,EAAAhE,YAAA,EAAc2F,OAAO;MAE3B,KAAK,IAAI0B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoB,SAAS,CAACrB,MAAM,EAAEC,CAAC,EAAE,EAAE;QACzC,IAAMS,SAAS,GAAGW,SAAS,CAACpB,CAAC,CAAC;QAE9B,IAAIA,CAAC,KAAKoB,SAAS,CAACrB,MAAM,GAAG,CAAC,EAAE;UAC9B,IAAIoB,SAAS,IAAKV,SAAS,CAACkB,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,UAAW,IACrD,OAAOnB,SAAS,CAACoB,cAAc,IAAI,UAAW,EAAE;YACjD,IAAI,CAAClF,eAAe,CAACC,qBAAA,KAAI,EAAAhE,YAAA,EAAckJ,iBAAiB,CAAC;UAC3D,CAAC,MAAM,IAAI,CAAC,IAAI,CAACtB,uBAAuB,CAACC,SAAS,EAAEC,SAAS,CAAC,EAAE;YAC9D,IAAI,CAAC/D,eAAe,CAAC+E,gBAAgB,EAAEF,mBAAmB,CAAC;UAC7D,CAAC,MAAM;YACL,IAAI,IAAI,CAAC9E,aAAa,EAAE,IACtB,IAAI,CAAC0D,aAAa,CAACnC,UAAU,EAAE,6BAA6B,CAAC,EAAE;cAC/D,IAAI,CAAC8D,uBAAuB,CAAC9D,UAAU,EAAE5G,KAAK,CAAC;YACjD;YAEA,IAAI,CAAC+J,SAAS,IAAI,IAAI,CAACrF,aAAa,KAAK,CAAC,EAAE;cAC1C0E,SAAS,CAACC,SAAS,CAAC,GAAGrJ,KAAK;cAC5BoF,WAAW,GAAGlE,gBAAgB,CAACmC,UAAU;YAC3C;UACF;QACF,CAAC,MAAM;UACL+F,SAAS,GAAGA,SAAS,CAACC,SAAS,CAAC;UAChC,IAAI,CAACD,SAAS,EAAE;YACd,IAAI,CAAC9D,eAAe,CAAC+E,gBAAgB,EAAEF,mBAAmB,CAAC;YAC3D;UACF;UAEA,IAAIf,SAAS,YAAYvI,iDAAQ,EAAE;YACjC,IAAM8J,KAAK,GAAGpO,QAAQ,CAACyN,SAAS,CAACpB,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;;YAE5C;YACA,IAAI,CAACgC,KAAK,CAACD,KAAK,CAAC,EAAE;cACjB,IAAME,IAAI,GAAGzB,SAAS,CAAC0B,UAAU,CAACH,KAAK,CAAC;cAExC,IAAIE,IAAI,EAAE;gBACRzB,SAAS,GAAGyB,IAAI;gBAChBX,eAAe,GAAG,IAAI;cACxB,CAAC,MAAM;gBACL,IAAMa,QAAQ,GAAG,IAAI,CAACC,eAAe,CAACpE,UAAU,EAAE5G,KAAK,EACnDkK,eAAe,CAAC;gBACpBA,eAAe,GAAG,IAAI;gBAEtB,IAAI,CAACa,QAAQ,EAAE;kBACb,IAAI,CAACzF,eAAe,CAAC+E,gBAAgB,EAAEF,mBAAmB,CAAC;gBAC7D,CAAC,MAAM;kBACL,IAAIf,SAAS,CAAC6B,WAAW,EAAEF,QAAQ,CAAC/F,UAAU,EAAE;kBAEhDoE,SAAS,CAAC0B,UAAU,CAACI,IAAI,CAACH,QAAQ,CAAC;kBACnC3B,SAAS,GAAG2B,QAAQ;gBACtB;cACF;;cAEA;cACAnC,CAAC,EAAE;YACL;UACF;QACF;MACF;MAEA,IAAIxD,WAAW,KAAKlE,gBAAgB,CAACqC,WAAW,EAAE;QAChD,IAAI,CAACwC,MAAM,CAAC+D,UAAU,EAAE,IAAI,+CAAAM,MAAA,CACqBxD,UAAU,kBAAAwD,MAAA,CAAepK,KAAK,GAC3EkB,gBAAgB,CAAC6C,iBAAiB,CAAC;MACzC;MAEA,OAAOqB,WAAW;IACpB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAL,GAAA;IAAA/E,KAAA,EAMA,SAAA0K,wBAAwBf,WAAW,EAAEC,MAAM,EAAE;MAC3C;IAAA;;IAGF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAA7E,GAAA;IAAA/E,KAAA,EAUA,SAAAgL,gBAAgBrB,WAAW,EAAEC,MAAM,EAAEuB,gBAAgB,EAAE;MACrD,MAAM,IAAIzB,KAAK,CAAC,qDAAqD,CAAC;IACxE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA3E,GAAA;IAAA/E,KAAA,EAQA,SAAAoL,mBAAmBtB,UAAkB,EAAEC,SAAkB,EAAEnD,UAAU,EAAE;MACrE,IAAI,CAACA,UAAU,IAAIA,UAAU,KAAK,EAAE,EAAE;QACpC,OAAO,EAAE;MACX;MAEA,IAAMoD,SAAS,GAAGpD,UAAU,CAACqD,KAAK,CAAC,GAAG,CAAC;MACvC,IAAIb,SAAS,GAAG,IAAI;MACpB,IAAIC,SAAS,GAAG,IAAI;MAEpB,IAAMgC,yBAAyB,uCAAAjB,MAAA,CAAuCN,UAAU,QAAAM,MAAA,CAAKxD,UAAU,gCAA6B;MAC5H,IAAMuD,mBAAmB,uCAAAC,MAAA,CAAuCN,UAAU,QAAAM,MAAA,CAAKxD,UAAU,+CAA4C;MACrI,IAAMyD,gBAAgB,GAAGN,SAAS,GAChCxE,qBAAA,KAAI,EAAAhE,YAAA,EAAc+I,oBAAoB,GACtC/E,qBAAA,KAAI,EAAAhE,YAAA,EAAc2F,OAAO;MAE3B,KAAK,IAAI0B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoB,SAAS,CAACrB,MAAM,EAAEC,CAAC,EAAE,EAAE;QACzCS,SAAS,GAAGW,SAAS,CAACpB,CAAC,CAAC;QAExB,IAAI,CAACmB,SAAS,EAAE;UACd,IAAInB,CAAC,KAAKoB,SAAS,CAACrB,MAAM,GAAG,CAAC,EAAE;YAC9B,IAAI,CAAC,IAAI,CAACQ,uBAAuB,CAACC,SAAS,EAAEC,SAAS,CAAC,EAAE;cACvD,IAAI,CAAC/D,eAAe,CAAC+E,gBAAgB,EAAEF,mBAAmB,CAAC;cAC3D;YACF;UACF;QACF,CAAC,MAAM;UACL,IAAK9C,MAAM,CAACgC,SAAS,CAAC,CAACkB,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,UAAU,IAC/C,OAAOnB,SAAS,CAACoB,cAAc,IAAI,UAAW,EAAE;YACjD,IAAMc,MAAM,GAAGjE,MAAM,CAACgC,SAAS,CAAC,CAACkB,MAAM,CAAC,CAAC,EAAElD,MAAM,CAACgC,SAAS,CAAC,CAACV,MAAM,GAAG,CAAC,CAAC;YACxE,OAAOS,SAAS,CAACoB,cAAc,CAACc,MAAM,CAAC;UACzC,CAAC,MAAM,IAAI,CAAC,IAAI,CAACnC,uBAAuB,CAACC,SAAS,EAAEC,SAAS,CAAC,EAAE;YAC9D,IAAI,CAAC/D,eAAe,CAAC+E,gBAAgB,EAAEF,mBAAmB,CAAC;YAC3D;UACF;QACF;QAEAf,SAAS,GAAGA,SAAS,CAACC,SAAS,CAAC;QAChC,IAAID,SAAS,KAAKpK,SAAS,EAAE;UAC3B,IAAI,CAACsG,eAAe,CAAC+E,gBAAgB,EAAEF,mBAAmB,CAAC;UAC3D;QACF;QAEA,IAAIf,SAAS,YAAYvI,iDAAQ,EAAE;UACjC,IAAM8J,KAAK,GAAGpO,QAAQ,CAACyN,SAAS,CAACpB,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;;UAE5C;UACA,IAAI,CAACgC,KAAK,CAACD,KAAK,CAAC,EAAE;YACjB,IAAME,IAAI,GAAGzB,SAAS,CAAC0B,UAAU,CAACH,KAAK,CAAC;YAExC,IAAIE,IAAI,EAAE;cACRzB,SAAS,GAAGyB,IAAI;YAClB,CAAC,MAAM;cACL,IAAI,CAACvF,eAAe,CAACC,qBAAA,KAAI,EAAAhE,YAAA,EAAcgK,qBAAqB,EACxDF,yBAAyB,CAAC;cAC9B;YACF;;YAEA;YACAzC,CAAC,EAAE;UACL;QACF;MACF;MAEA,IAAIQ,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAKpK,SAAS,EAAE;QACjD,IAAI,CAAC+K,SAAS,EAAE;UACd,IAAIV,SAAS,KAAK,WAAW,EAAE;YAC7B,IAAI,CAAC/D,eAAe,CAACnE,mBAAmB,CAACqK,cAAc,CAAC;UAC1D,CAAC,MAAM,IAAInC,SAAS,KAAK,QAAQ,EAAE;YACjC,IAAI,CAAC/D,eAAe,CAACnE,mBAAmB,CAACsK,WAAW,CAAC;UACvD;QACF;MACF,CAAC,MAAM;QACL,OAAOrC,SAAS;MAClB;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAArE,GAAA;IAAA/E,KAAA,EAKA,SAAAqF,cAAA,EAAgB;MACd,OAAO,IAAI,CAACb,YAAY,KAAKtD,gBAAgB,CAAC2E,iBAAiB;IACjE;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAd,GAAA;IAAA/E,KAAA,EAKA,SAAAqI,iBAAA,EAAmB;MACjB,OAAO,IAAI,CAAC7D,YAAY,KAAKtD,gBAAgB,CAACuD,qBAAqB;IACrE;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAM,GAAA;IAAA/E,KAAA,EAKA,SAAAyF,aAAA,EAAe;MACb,OAAO,IAAI,CAACjB,YAAY,KAAKtD,gBAAgB,CAACuF,gBAAgB;IAChE;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1B,GAAA;IAAA/E,KAAA,EAMA,SAAA0L,GAAGC,YAAoB,EAAEC,QAAkB,EAAE;MAC3C,IAAI,CAACA,QAAQ,EAAE;MAEf,IAAMC,iBAAiB,GAAGF,YAAY,CAAC1B,KAAK,CAAC,GAAG,CAAC;MACjD,KAAK,IAAIrB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiD,iBAAiB,CAAClD,MAAM,EAAEC,CAAC,EAAE,EAAE;QACjD,IAAMkD,aAAa,GAAGD,iBAAiB,CAACjD,CAAC,CAAC,CAACqB,KAAK,CAAC,GAAG,CAAC;QACrD,IAAI6B,aAAa,CAACnD,MAAM,KAAK,CAAC,EAAE;QAEhC,IAAML,YAAY,GAAGwD,aAAa,CAAC,CAAC,CAAC;QAErC,IAAIlF,UAAU,GAAG,IAAI;QACrB,IAAIkF,aAAa,CAACnD,MAAM,GAAG,CAAC,EAAE;UAC5B/B,UAAU,GAAG+E,YAAY,CAACpL,OAAO,CAAC+H,YAAY,GAAG,GAAG,EAAE,EAAE,CAAC;QAC3D;QAEA,IAAI,CAAC3D,aAAa,CAACuG,IAAI,CAAC;UACtB5C,YAAY,EAAEA,YAAY;UAC1B1B,UAAU,EAAEA,UAAU;UACtBgF,QAAQ,EAAEA;QACZ,CAAC,CAAC;QAEF,IAAI,CAAC7F,MAAM,CAAC,IAAI,EAAEuC,YAAY,2BAAA8B,MAAA,CAA2B,IAAI,CAACzF,aAAa,CAACgE,MAAM,GAAIzH,gBAAgB,CAAC+C,cAAc,CAAC;MACxH;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAc,GAAA;IAAA/E,KAAA,EAMA,SAAA+L,IAAIJ,YAAoB,EAAEC,QAAkB,EAAE;MAAA,IAAAI,KAAA;MAC5C,IAAI,CAACJ,QAAQ,EAAE;MAEf,IAAMC,iBAAiB,GAAGF,YAAY,CAAC1B,KAAK,CAAC,GAAG,CAAC;MAAC,IAAAgC,KAAA,YAAAA,MAAA,EACC;QACjD,IAAMH,aAAa,GAAGD,iBAAiB,CAACjD,CAAC,CAAC,CAACqB,KAAK,CAAC,GAAG,CAAC;QACrD,IAAI6B,aAAa,CAACnD,MAAM,KAAK,CAAC;UAAAuD,CAAA;QAAA;QAE9B,IAAM5D,YAAY,GAAGwD,aAAa,CAAC,CAAC,CAAC;QAErC,IAAIlF,UAAU,GAAG,IAAI;QACrB,IAAIkF,aAAa,CAACnD,MAAM,GAAG,CAAC,EAAE;UAC5B/B,UAAU,GAAG+E,YAAY,CAACpL,OAAO,CAAC+H,YAAY,GAAG,GAAG,EAAE,EAAE,CAAC;QAC3D;QAEA,IAAM6D,WAAW,GAAGH,KAAI,CAACrH,aAAa,CAACyH,SAAS,CAAC,UAACC,GAAG;UAAA,OACnDA,GAAG,CAAC/D,YAAY,KAAKA,YAAY,IACjC+D,GAAG,CAACzF,UAAU,KAAKA,UAAU,IAC7ByF,GAAG,CAACT,QAAQ,KAAKA,QAAQ;QAAA,EAC1B;QACD,IAAIO,WAAW,KAAK,CAAC,CAAC,EAAE;UACtBH,KAAI,CAACrH,aAAa,CAAC2H,MAAM,CAACH,WAAW,EAAE,CAAC,CAAC;UACzCH,KAAI,CAACjG,MAAM,CAAC,KAAK,EAAEuC,YAAY,6BAAA8B,MAAA,CAA6B4B,KAAI,CAACrH,aAAa,CAACgE,MAAM,GAAIzH,gBAAgB,CAAC+C,cAAc,CAAC;QAC3H;MACF,CAAC;MApBD,KAAK,IAAI2E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiD,iBAAiB,CAAClD,MAAM,EAAEC,CAAC,EAAE;QAAA,IAAA2D,IAAA,GAAAN,KAAA;QAAA,IAAAvP,OAAA,CAAA6P,IAAA,uBAAAA,IAAA,CAAAL,CAAA;MAAA;IAqBnD;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAnH,GAAA;IAAA/E,KAAA,EAKA,SAAAwM,MAAMb,YAAoB,EAAE;MAAA,IAAAc,MAAA;MAC1B,IAAMZ,iBAAiB,GAAGF,YAAY,CAAC1B,KAAK,CAAC,GAAG,CAAC;MAAC,IAAAyC,MAAA,YAAAA,OAAA,EACC;QACjD,IAAMZ,aAAa,GAAGD,iBAAiB,CAACjD,CAAC,CAAC,CAACqB,KAAK,CAAC,GAAG,CAAC;QACrD,IAAI6B,aAAa,CAACnD,MAAM,KAAK,CAAC;UAAAuD,CAAA;QAAA;QAE9B,IAAM5D,YAAY,GAAGwD,aAAa,CAAC,CAAC,CAAC;QAErC,IAAIlF,UAAU,GAAG,IAAI;QACrB,IAAIkF,aAAa,CAACnD,MAAM,GAAG,CAAC,EAAE;UAC5B/B,UAAU,GAAG+E,YAAY,CAACpL,OAAO,CAAC+H,YAAY,GAAG,GAAG,EAAE,EAAE,CAAC;QAC3D;QAEAmE,MAAI,CAAC9H,aAAa,GAAG8H,MAAI,CAAC9H,aAAa,CAACgI,MAAM,CAAC,UAACN,GAAG;UAAA,OACjDA,GAAG,CAAC/D,YAAY,KAAKA,YAAY,IACjC+D,GAAG,CAACzF,UAAU,KAAKA,UAAU;QAAA,EAC9B;MACH,CAAC;MAfD,KAAK,IAAIgC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiD,iBAAiB,CAAClD,MAAM,EAAEC,CAAC,EAAE;QAAA,IAAAgE,KAAA,GAAAF,MAAA;QAAA,IAAAhQ,OAAA,CAAAkQ,KAAA,uBAAAA,KAAA,CAAAV,CAAA;MAAA;IAgBnD;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAnH,GAAA;IAAA/E,KAAA,EAOA,SAAA8F,iBAAiBwC,YAAoB,EAAE1B,UAAkB,EAAE5G,KAAU,EAAE;MACrE,IAAI,CAAC+F,MAAM,CAACuC,YAAY,EAAE1B,UAAU,EAAE5G,KAAK,CAAC;MAC5C,KAAK,IAAI4I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACjE,aAAa,CAACgE,MAAM,EAAEC,CAAC,EAAE,EAAE;QAClD,IAAMiE,QAAQ,GAAG,IAAI,CAAClI,aAAa,CAACiE,CAAC,CAAC;QACtC,IAAMkE,cAAc,GAAGD,QAAQ,CAACvE,YAAY,KAAKA,YAAY;QAC7D,IAAMyE,qBAAqB,GAAG,CAAC,CAACF,QAAQ,CAACjG,UAAU;QACnD,IAAIoG,gBAAgB,GAAG,KAAK;QAC5B,IAAIpG,UAAU,IAAIiG,QAAQ,CAACjG,UAAU,IACnCiG,QAAQ,CAACjG,UAAU,CAACqG,SAAS,CAACJ,QAAQ,CAACjG,UAAU,CAAC+B,MAAM,GAAG,CAAC,CAAC,KAC7D,GAAG,EAAE;UACLqE,gBAAgB,GAAGpG,UAAU,CAACsG,OAAO,CAACL,QAAQ,CAACjG,UAAU,CAACqG,SAAS,CAAC,CAAC,EACjEJ,QAAQ,CAACjG,UAAU,CAAC+B,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;QAC5C,CAAC,MAAM;UACLqE,gBAAgB,GAAGH,QAAQ,CAACjG,UAAU,KAAKA,UAAU;QACvD;QAEA,IAAIkG,cAAc,KAAK,CAACC,qBAAqB,IAAIC,gBAAgB,CAAC,EAAE;UAClEH,QAAQ,CAACjB,QAAQ,CAAChF,UAAU,EAAE5G,KAAK,CAAC;QACtC;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA+E,GAAA;IAAA/E,KAAA,EAMA,SAAAsF,gBAAgB6H,WAAmB,EAAElG,OAAe,EAAE;MACpD,IAAI,CAACA,OAAO,EAAE;QACZA,OAAO,GAAG,IAAI,CAACgB,yBAAyB,CAACkF,WAAW,CAAC;MACvD;MAEA,IAAI,CAACpH,MAAM,CAAC,iBAAiB,EAAE,IAAI,EAAEoH,WAAW,GAAG,IAAI,GAAGlG,OAAO,EAC7D/F,gBAAgB,CAACsB,eAAe,CAAC;MAErC,IAAI,CAACkC,aAAa,GAAG2C,MAAM,CAAC8F,WAAW,CAAC;IAC1C;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAApI,GAAA;IAAA/E,KAAA,EAKA,SAAAgG,gBAAgBoH,OAAe,EAAE;MAC/B,IAAIA,OAAO,KAAKpO,SAAS,IAAIoO,OAAO,KAAKlM,gBAAgB,CAACqC,WAAW,EAAE;QACrE,IAAI,CAACmB,aAAa,GAAG,CAAC;MACxB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAK,GAAA;IAAA/E,KAAA,EAQA,SAAA0G,UAAU2G,mBAAmB,EAAE;MAC7B,MAAM,IAAI3D,KAAK,CACX,+CAA+C,CAAC;IACtD;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA3E,GAAA;IAAA/E,KAAA,EAKA,SAAAsN,sBAAsBC,IAAI,EAAE3G,UAAU,EAAE;MAAA,IAAA4G,MAAA;MACtC,IAAI,CAAC,IAAI,CAACnF,gBAAgB,EAAE,EAAE;QAC5BxE,OAAO,CAACC,KAAK,CACT,4EAA4E,CAAC;QACjF;MACF;;MAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACI,SAAS2J,WAAWA,CAACC,CAAC,EAAEC,CAAC,EAAEC,SAAS,EAAE;QACpC,IAAMC,OAAO,GAAGH,CAAC,CAACxE,KAAK,CAAC0E,SAAS,CAAC;QAElC,IAAIE,OAAO;QACX,IAAID,OAAO,KAAK,IAAI,IAAI,CAACC,OAAO,GAAGH,CAAC,CAACzE,KAAK,CAAC0E,SAAS,CAAC,MAAM,IAAI,EAAE;UAC/D,IAAMG,KAAK,GAAGC,MAAM,CAACH,OAAO,CAAC,CAAC,CAAC,CAAC;UAChC,IAAMI,KAAK,GAAGD,MAAM,CAACF,OAAO,CAAC,CAAC,CAAC,CAAC;UAChC,IAAIC,KAAK,KAAKE,KAAK,EAAE;YACnB,IAAIJ,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;cACvB,OAAO,CAAC,CAAC;YACX,CAAC,MAAM,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;cAChC,IAAIC,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;gBACvB,OAAO,CAAC;cACV,CAAC,MAAM;gBACL,OAAO,CAAC,CAAC;cACX;YACF,CAAC,MAAM;cACL,OAAO,CAAC;YACV;UACF;UACA,OAAOC,KAAK,GAAGE,KAAK;QACtB;QAEA,OAAO,IAAI;MACb;MAEA,IAAMC,WAAW,GAAG,oCAAoC;MACxD,IAAMC,WAAW,GAAG,kCAAkC;MAEtD,IAAMjQ,MAAM,GAAGvB,MAAM,CAACyR,IAAI,CAACb,IAAI,CAAC,CAACc,GAAG,CAAC,UAAStJ,GAAG,EAAE;QACjD,OAAO,CAACsC,MAAM,CAACtC,GAAG,CAAC,EAAEwI,IAAI,CAACxI,GAAG,CAAC,CAAC;MACjC,CAAC,CAAC;;MAEF;MACA7G,MAAM,CAACoQ,IAAI,CAAC,UAAAC,IAAA,EAAAC,KAAA,EAAyB;QAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAH,IAAA;UAAfb,CAAC,GAAAe,KAAA;UAAEE,CAAC,GAAAF,KAAA;QAAA,IAAAG,KAAA,GAAAF,cAAA,CAAAF,KAAA;UAAIb,CAAC,GAAAiB,KAAA;UAAEC,CAAC,GAAAD,KAAA;QAChC,IAAInO,IAAI;QACR,IAAI,CAACA,IAAI,GAAGgN,WAAW,CAACC,CAAC,EAAEC,CAAC,EAAEO,WAAW,CAAC,MAAM,IAAI,EAAE;UACpD,OAAOzN,IAAI;QACb;QACA,IAAI,CAACA,IAAI,GAAGgN,WAAW,CAACC,CAAC,EAAEC,CAAC,EAAEQ,WAAW,CAAC,MAAM,IAAI,EAAE;UACpD,OAAO1N,IAAI;QACb;QAEA,IAAIiN,CAAC,GAAGC,CAAC,EAAE;UACT,OAAO,CAAC,CAAC;QACX;QACA,IAAID,CAAC,GAAGC,CAAC,EAAE;UACT,OAAO,CAAC;QACV;QACA,OAAO,CAAC;MACV,CAAC,CAAC;MAEF,IAAItB,GAAG;MACPnO,MAAM,CAAC4Q,OAAO,CAAC,UAACC,OAAO,EAAK;QAC1B1C,GAAG,GAAG,CAAC,CAAC;QACRA,GAAG,CAAC0C,OAAO,CAAC,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC;QAC5BvB,MAAI,CAACwB,YAAY,CAAC/N,qDAAS,CAACoL,GAAG,CAAC,EAAEzF,UAAU,CAAC;MAC/C,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA7B,GAAA;IAAA/E,KAAA,EAMA,SAAAgP,aAAazB,IAAI,EAAE3G,UAAU,EAAE;MAC7B,IAAI,CAAC,IAAI,CAACyB,gBAAgB,EAAE,EAAE;QAC5BxE,OAAO,CAACC,KAAK,CACT,mEAAmE,CAAC;QACxE;MACF;MAEA8C,UAAU,GAAGA,UAAU,KAAK5H,SAAS,GAAG4H,UAAU,GAAG,KAAK;MAE1D,IAAI,CAACqI,YAAY,GAAG1B,IAAI;;MAExB;MACA,KAAK,IAAMxI,GAAG,IAAIwI,IAAI,EAAE;QACtB,IAAI,CAAC,CAAC,CAACpK,cAAc,CAAC/C,IAAI,CAACmN,IAAI,EAAExI,GAAG,CAAC,IAAIwI,IAAI,CAACxI,GAAG,CAAC,EAAE;UAClD,IAAMmK,iBAAiB,GAAG,CAACtI,UAAU,GAAGA,UAAU,GAAG,GAAG,GAAG,EAAE,IAAI7B,GAAG;UACpE,IAAM/E,KAAK,GAAGuN,IAAI,CAACxI,GAAG,CAAC;UAEvB,IAAI/E,KAAK,CAAC,YAAY,CAAC,EAAE;YACvB,KAAK,IAAI4I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG5I,KAAK,CAAC,YAAY,CAAC,CAAC2I,MAAM,EAAEC,CAAC,EAAE,EAAE;cACnD,IAAI,CAACoG,YAAY,CAAChP,KAAK,CAAC,YAAY,CAAC,CAAC4I,CAAC,CAAC,EACpCsG,iBAAiB,GAAG,GAAG,GAAGtG,CAAC,CAAC;YAClC;UACF,CAAC,MAAM,IAAI5I,KAAK,CAACuE,WAAW,KAAK5H,MAAM,EAAE;YACvC,IAAI,CAACqS,YAAY,CAAChP,KAAK,EAAEkP,iBAAiB,CAAC;UAC7C,CAAC,MAAM;YACL,IAAI,CAAC1H,WAAW,CAAC0H,iBAAiB,EAAElP,KAAK,CAAC;UAC5C;QACF;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA+E,GAAA;IAAA/E,KAAA,EAKA,SAAAmP,sBAAA,EAAwB;MACtB,IAAMxJ,GAAG,GAAG,IAAI,CAACA,GAAG;MACpB;MACA;MACA,OAAO3C,IAAI,CAACoM,SAAS,CAAC;QAACzJ,GAAG,EAAHA;MAAG,CAAC,CAAC;IAC9B;;IAEA;AACF;AACA;AACA;EAHE;IAAAZ,GAAA;IAAA/E,KAAA,EAIA,SAAAqP,sBAAA,EAAwB;MACtB;MACA;MACA,OAAOrM,IAAI,CAACC,KAAK,CAAC,IAAI,CAACkM,qBAAqB,EAAE,CAAC;IACjD;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAApK,GAAA;IAAA/E,KAAA,EAQA,SAAAsP,gBAAgBC,gBAAgB,EAAE;MAChC,MAAM,IAAI7F,KAAK,CACX,+CAA+C,CAAC;IACtD;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA3E,GAAA;IAAA/E,KAAA,EAOA,SAAAwP,mBAAmBC,GAAW,EAAEC,MAAM,EAAqB;MAAA,IAAnBC,SAAS,GAAA5P,SAAA,CAAA4I,MAAA,QAAA5I,SAAA,QAAAf,SAAA,GAAAe,SAAA,MAAG,KAAK;MACvD,IAAM6P,GAAG,GAAG,IAAI;MAChB,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAYJ,GAAG,EAAEC,MAAM,EAAE/N,QAAQ,EAAED,WAAW,EAAE;QAC3D,IAAMoO,YAAY,GAAG;UACnB,QAAQ,EAAE5O,gBAAgB,CAACqC,WAAW;UACtC,WAAW,EAAE7B,WAAW,CAACwF;QAC3B,CAAC;QAED,IAAIhJ,MAAM;QACV,IAAI,CAACyD,QAAQ,CAACO,gBAAgB,EAAE;UAC9B,IAAM6N,OAAO,GAAG,IAAIC,cAAc,EAAE;UACpCD,OAAO,CAACE,IAAI,CAAC,MAAM,EAAER,GAAG,EAAE9N,QAAQ,CAACM,WAAW,CAAC;UAE/C,IAAItF,MAAM,CAACyR,IAAI,CAACzM,QAAQ,CAACiB,UAAU,CAAC,CAAC+F,MAAM,EAAE;YAC3ChM,MAAM,CAACyR,IAAI,CAACzM,QAAQ,CAACiB,UAAU,CAAC,CAACkM,OAAO,CAAC,UAACoB,MAAM,EAAK;cACnDH,OAAO,CAACI,gBAAgB,CAACD,MAAM,EAAEvO,QAAQ,CAACiB,UAAU,CAACsN,MAAM,CAAC,CAAC;YAC/D,CAAC,CAAC;UACJ;UAEAH,OAAO,CAACK,eAAe,GAAGzO,QAAQ,CAACkB,kBAAkB;UAErD,IAAIlB,QAAQ,CAACM,WAAW,EAAE;YACxB8N,OAAO,CAACM,MAAM,GAAG,UAASrJ,CAAC,EAAE;cAC3B,IAAI,OAAOrF,QAAQ,CAACmB,eAAe,KAAK,UAAU,EAAE;gBAClD5E,MAAM,GAAGyD,QAAQ,CAACmB,eAAe,CAACiN,OAAO,CAAC;cAC5C,CAAC,MAAM;gBACL7R,MAAM,GAAG8E,IAAI,CAACC,KAAK,CAAC8M,OAAO,CAAC7M,YAAY,CAAC;cAC3C;YACF,CAAC;UACH;UACA,IAAI;YACFwM,MAAM,GAAG/N,QAAQ,CAAC6B,cAAc,CAACkM,MAAM,CAAC;YACxC,IAAIA,MAAM,YAAYY,KAAK,EAAE;cAC3BP,OAAO,CAACI,gBAAgB,CAAC,cAAc,EACnC,mCAAmC,CAAC;cACxCJ,OAAO,CAACQ,IAAI,CAACb,MAAM,CAACc,IAAI,CAAC,GAAG,CAAC,CAAC;YAChC,CAAC,MAAM;cACLT,OAAO,CAACI,gBAAgB,CAAC,cAAc,EACnCxO,QAAQ,CAACU,qBAAqB,CAAC;cACnC0N,OAAO,CAACQ,IAAI,CAACvN,IAAI,CAACoM,SAAS,CAACM,MAAM,CAAC,CAAC;YACtC;YAEA,IAAI,CAAC/N,QAAQ,CAACM,WAAW,EAAE;cACzB,IAAI,OAAON,QAAQ,CAACmB,eAAe,KAAK,UAAU,EAAE;gBAClD5E,MAAM,GAAGyD,QAAQ,CAACmB,eAAe,CAACiN,OAAO,CAAC;cAC5C,CAAC,MAAM;gBACL7R,MAAM,GAAG8E,IAAI,CAACC,KAAK,CAAC8M,OAAO,CAAC7M,YAAY,CAAC;cAC3C;YACF,CAAC,MAAM;cACLhF,MAAM,GAAG,CAAC,CAAC;cACXA,MAAM,CAACA,MAAM,GAAGgD,gBAAgB,CAACmC,UAAU;cAC3CnF,MAAM,CAACoF,SAAS,GAAG,CAAC;cACpBsM,GAAG,CAAC9J,gBAAgB,CAAC,eAAe,CAAC;cACrC,OAAO5H,MAAM;YACf;UACF,CAAC,CAAC,OAAO8I,CAAC,EAAE;YACVnD,OAAO,CAACC,KAAK,CAACkD,CAAC,CAAC;YAChB4I,GAAG,CAAC9J,gBAAgB,CAAC,aAAa,CAAC;YACnC,OAAOgK,YAAY;UACrB;QACF,CAAC,MAAM;UACL,IAAI;YACFJ,MAAM,GAAG/N,QAAQ,CAAC6B,cAAc,CAACkM,MAAM,CAAC;YACxCe,KAAK,CAAChB,GAAG,EAAE;cACTiB,MAAM,EAAE,MAAM;cACdC,IAAI,EAAEjB,MAAM,YAAYY,KAAK,GAAGZ,MAAM,CAACc,IAAI,CAAC,GAAG,CAAC,GAAGxN,IAAI,CAACoM,SAAS,CAACM,MAAM,CAAC;cACzEkB,OAAO,EAAAzK,aAAA,CAAAA,aAAA,KACFxE,QAAQ,CAACiB,UAAU;gBACtB,cAAc,EAAEjB,QAAQ,CAACU;cAAqB,EAC/C;cACDwO,WAAW,EAAElP,QAAQ,CAACkB,kBAAkB,GAAG,SAAS,GAAG7D,SAAS;cAChE8R,SAAS,EAAE;YACb,CAAC,CAAC;YACF5S,MAAM,GAAG,CAAC,CAAC;YACXA,MAAM,CAACA,MAAM,GAAGgD,gBAAgB,CAACmC,UAAU;YAC3CnF,MAAM,CAACoF,SAAS,GAAG,CAAC;UACtB,CAAC,CAAC,OAAO0D,CAAC,EAAE;YACVnD,OAAO,CAACC,KAAK,CAACkD,CAAC,CAAC;YAChB4I,GAAG,CAAC9J,gBAAgB,CAAC,aAAa,CAAC;YACnC,OAAOgK,YAAY;UACrB;QACF;QAEA,IAAI,OAAO5R,MAAM,KAAK,WAAW,EAAE;UACjC0R,GAAG,CAAC9J,gBAAgB,CAAC,aAAa,CAAC;UACnC,OAAOgK,YAAY;QACrB;QAEA,IAAI5R,MAAM,CAACA,MAAM,KAAK,IAAI,IACxBA,MAAM,CAACA,MAAM,KAAKgD,gBAAgB,CAACmC,UAAU,EAAE;UAC/CuM,GAAG,CAAC9J,gBAAgB,CAAC,eAAe,CAAC;QACvC,CAAC,MAAM;UACL8J,GAAG,CAAC9J,gBAAgB,CAAC,aAAa,CAAC;QACrC;QAEA,OAAO5H,MAAM;MACf,CAAC;MAED,IAAI,OAAOP,wDAAQ,KAAK,WAAW,EAAE;QACnC,IAAMkC,SAAS,GAAGlC,sDAAQ,CAACkS,OAAO,EAAE,GAAG,CAAC;QACxChQ,SAAS,CAAC4P,GAAG,EAAEC,MAAM,EAAE,IAAI,CAAC/N,QAAQ,EAAE,IAAI,CAACD,WAAW,CAAC;;QAEvD;QACA,IAAIiO,SAAS,EAAE;UACb9P,SAAS,CAACD,KAAK,EAAE;QACnB;QAEA,OAAO;UACL1B,MAAM,EAAEgD,gBAAgB,CAACmC,UAAU;UACnCC,SAAS,EAAE;QACb,CAAC;MACH,CAAC,MAAM;QACL,OAAOuM,OAAO,CAACJ,GAAG,EAAEC,MAAM,EAAE,IAAI,CAAC/N,QAAQ,EAAE,IAAI,CAACD,WAAW,CAAC;MAC9D;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAqD,GAAA;IAAA/E,KAAA,EAMA,SAAAyH,eAAesJ,IAAY,EAAEnF,QAAgB,EAAE;MAC7ChH,qBAAA,KAAI,EAAAvD,QAAA,EAAY,IAAI2P,eAAe,CAAC,IAAI,EAAED,IAAI,EAAEnF,QAAQ,CAAC;MACzD,IAAI,CAAC7F,MAAM,CAAC,gBAAgB,EAAE,EAAE,EAAE,WAAW,EACzC7E,gBAAgB,CAACiD,eAAe,CAAC;IACvC;;IAEA;AACF;AACA;EAFE;IAAAY,GAAA;IAAA/E,KAAA,EAGA,SAAA2H,qBAAA,EAAuB;MACrB,IAAApC,qBAAA,CAAI,IAAI,EAAAlE,QAAA,GAAW;QACjBkE,qBAAA,KAAI,EAAAlE,QAAA,EAAU3B,MAAM,EAAE;QACtBkF,qBAAA,KAAI,EAAAvD,QAAA,EAAY,IAAI;QACpB,IAAI,CAAC0E,MAAM,CAAC,sBAAsB,EAAE,EAAE,EAAE,SAAS,EAC7C7E,gBAAgB,CAACiD,eAAe,CAAC;MACvC;IACF;EAAC;EAAA,OAAA1C,OAAA;AAAA;AAGH;AACA;AACA;AAlsC4B;AAAA,IAAAyP,IAAA,oBAAA5P,OAAA;AAAA,IAAA6P,UAAA,oBAAA7P,OAAA;AAAA,IAAA8P,SAAA,oBAAA9P,OAAA;AAAA,IAAA+P,SAAA,oBAAA/P,OAAA;AAAA,IAmsCtB0P,eAAe;EAMnB;AACF;AACA;AACA;AACA;AACA;EACE,SAAAA,gBAAYM,GAAQ,EAAEP,IAAY,EAAEnF,QAAgB,EAAE;IAAAhK,eAAA,OAAAoP,eAAA;IAAAnP,0BAAA,OAAAqP,IAAA;MAAApP,QAAA;MAAA9B,KAAA;IAAA;IAAA6B,0BAAA,OAAAsP,UAAA;MAAArP,QAAA;MAAA9B,KAAA,EAVzC;IAAK;IAAA6B,0BAAA,OAAAuP,SAAA;MAAAtP,QAAA;MAAA9B,KAAA;IAAA;IAAA6B,0BAAA,OAAAwP,SAAA;MAAAvP,QAAA;MAAA9B,KAAA;IAAA;IAWhB4E,qBAAA,KAAI,EAAAsM,IAAA,EAAQI,GAAG;IACf1M,qBAAA,KAAI,EAAAwM,SAAA,EAAYjS,UAAU,CAAC,IAAI,CAACoS,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC,EAAET,IAAI,CAAC;IACzDnM,qBAAA,KAAI,EAAAyM,SAAA,EAAazF,QAAQ;EAC3B;;EAEA;AACF;AACA;EAFE9G,YAAA,CAAAkM,eAAA;IAAAjM,GAAA;IAAA/E,KAAA,EAGA,SAAAN,OAAA,EAAS;MACPkF,qBAAA,KAAI,EAAAuM,UAAA,EAAc,IAAI;MACtB,IAAA5L,qBAAA,CAAI,IAAI,EAAA6L,SAAA,GAAW;QACjBzR,YAAY,CAAA4F,qBAAA,CAAC,IAAI,EAAA6L,SAAA,EAAU;MAC7B;IACF;;IAEA;AACF;AACA;EAFE;IAAArM,GAAA;IAAA/E,KAAA,EAGA,SAAAuR,QAAA,EAAU;MACR,IAAI,CAAAhM,qBAAA,CAAC,IAAI,EAAA4L,UAAA,CAAW,EAAE;QACpB5L,qBAAA,KAAI,EAAA2L,IAAA,EAAMxJ,MAAM,CAAAnC,qBAAA,CAAC,IAAI,EAAA8L,SAAA,EAAW;MAClC;IACF;EAAC;EAAA,OAAAL,eAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpvC6B;AASH;AACY;AACY;AACJ;AACM;AACK;AACtB;AAEtC,IAAMoB,mBAAmB,GAAGpR,0EAAsB;AAClD,IAAME,gBAAgB,GAAGF,uEAAmB;AAC5C,IAAMqR,qBAAqB,GAAGtR,wEAAoB;AAClD,IAAMuR,iBAAiB,GAAGL,6EAAiB;AAC3C,IAAMO,eAAe,GAAGL,kEAAe;;AAEvC;AACA;AACA;AAFA,IAAAM,QAAA,oBAAAnR,OAAA;AAAA,IAGqBoR,YAAY,0BAAAC,QAAA;EAAAC,SAAA,CAAAF,YAAA,EAAAC,QAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,YAAA;EAG/B;AACF;AACA;AACA;EACE,SAAAA,aAAY/Q,QAAY,EAAE;IAAA,IAAAqK,KAAA;IAAApK,eAAA,OAAA8Q,YAAA;IACxB,IAAMK,aAAa,GAAA5M,aAAA,CAAAA,aAAA,KACd;MACD6M,gBAAgB,EAAE;IACpB,CAAC,GAAKrR,QAAQ,CACf;IAEDqK,KAAA,GAAA6G,MAAA,CAAAzS,IAAA,OAAMiS,qBAAqB,EAAEU,aAAa;IAAElR,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAAyG,QAAA;MAAA3Q,QAAA;MAAA9B,KAAA;IAAA;IAAAsE,eAAA,CAAA2O,sBAAA,CAAAjH,KAAA,6BAkTrB,UAACkH,gBAAgB,EAAEC,aAAa,EAAEnT,KAAK,EAAK;MACnE,IAAIoT,KAAK,GAAG,KAAK;MACjB,IAAMC,KAAK,GAAGH,gBAAgB,CAACI,MAAM;MACrC,KAAK,IAAI1K,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyK,KAAK,IAAI,CAACD,KAAK,EAAExK,CAAC,EAAE,EAAE;QACxC,IAAIA,CAAC,KAAKuK,aAAa,IAAID,gBAAgB,CAACpI,UAAU,CAAClC,CAAC,CAAC,KAAK5I,KAAK,EAAE;UACnEoT,KAAK,GAAG,IAAI;QACd;MACF;MACA,OAAOA,KAAK;IACd,CAAC;IAzTCpH,KAAA,CAAKrG,GAAG,GAAG,IAAI+L,mDAAG,EAAE;IACpB1F,KAAA,CAAKuH,GAAG,GAAG,IAAI9B,mDAAG,EAAE;;IAEpB;IACAzF,KAAA,CAAKwH,UAAU,GAAGxH,KAAA,CAAKyH,aAAa;IACpCzH,KAAA,CAAK0H,SAAS,GAAG1H,KAAA,CAAK2H,YAAY;IAClC3H,KAAA,CAAK4H,QAAQ,GAAG5H,KAAA,CAAK6H,WAAW;IAChC7H,KAAA,CAAK8H,QAAQ,GAAG9H,KAAA,CAAK+H,WAAW;IAChC/H,KAAA,CAAKgI,MAAM,GAAGhI,KAAA,CAAKiI,SAAS;IAC5BjI,KAAA,CAAKkI,YAAY,GAAGlI,KAAA,CAAKmI,eAAe;IACxCnI,KAAA,CAAKoI,cAAc,GAAGpI,KAAA,CAAKqI,iBAAiB;IAC5CrI,KAAA,CAAKsI,aAAa,GAAGtI,KAAA,CAAKuI,gBAAgB;IAAC,OAAAvI,KAAA;EAC7C;;EAEA;AACF;AACA;AACA;EAHElH,YAAA,CAAA4N,YAAA;IAAA3N,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAc;MACZ,OAAAV,qBAAA,CAAO,IAAI,EAAAkN,QAAA;IACb;;IAEA;AACF;AACA;EAFE;IAAA1N,GAAA;IAAA/E,KAAA,EAGA,SAAAyT,cAAA,EAAgB;MACd,IAAI,CAAC9N,GAAG,CAACX,UAAU,EAAE;MACrB,OAAO,IAAI,CAACA,UAAU,CAAC,YAAY,CAAC;IACtC;;IAEA;AACF;AACA;EAFE;IAAAD,GAAA;IAAA/E,KAAA,EAGA,SAAA2T,aAAA,EAAe;MACb,IAAMzV,MAAM,GAAG,IAAI,CAACkI,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC;MAEhD,IAAIlI,MAAM,KAAKgD,gBAAgB,CAACmC,UAAU,EAAE;QAC1C,IAAI,IAAI,CAACkQ,GAAG,CAACiB,GAAG,CAACC,OAAO,KAAK,QAAQ,EAAE;UACrC,QAAQ,IAAI,CAAClB,GAAG,CAACiB,GAAG,CAACC,OAAO;YAC1B,KAAK,UAAU;cACb,IAAI,CAAC3O,gBAAgB,CAAC,cAAc,CAAC;cACrC;YACF,KAAK,UAAU;cACb,IAAI,CAACA,gBAAgB,CAAC,kBAAkB,CAAC;cACzC;YACF,KAAK,QAAQ;cACX,IAAI,CAACA,gBAAgB,CAAC,gBAAgB,CAAC;cACvC;YACF,KAAK,MAAM;cACT,IAAI,CAACA,gBAAgB,CAAC,cAAc,CAAC;cACrC;YACF,KAAK,SAAS;cACZ,IAAI,CAACA,gBAAgB,CAAC,iBAAiB,CAAC;cACxC;YACF,KAAK,SAAS;cACZ,IAAI,CAACA,gBAAgB,CAAC,iBAAiB,CAAC;cACxC;YACF,KAAK,YAAY;cACf,IAAI,CAACA,gBAAgB,CAAC,oBAAoB,CAAC;cAC3C;UAAM;QAEZ,CAAC,MAAM,IAAI,IAAI,CAACnE,QAAQ,CAACW,YAAY,EAAE;UACrC,IAAI,CAACwD,gBAAgB,CAAC,cAAc,CAAC;QACvC;MACF;MAEA,OAAO5H,MAAM;IACf;;IAEA;AACF;AACA;AACA;EAHE;IAAA6G,GAAA;IAAA/E,KAAA,EAIA,SAAA6T,YAAYjN,UAAU,EAAE;MACtB,OAAO,IAAI,CAACD,QAAQ,CAAC,UAAU,EAAE,IAAI,EAAEC,UAAU,CAAC;IACpD;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA7B,GAAA;IAAA/E,KAAA,EAKA,SAAA+T,YAAYnN,UAAU,EAAE5G,KAAK,EAAE;MAC7B,OAAO,IAAI,CAACmH,QAAQ,CAAC,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAEP,UAAU,EAAE5G,KAAK,CAAC;IACrE;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA+E,GAAA;IAAA/E,KAAA,EAKA,SAAAiU,UAAA,EAAY;MACV,OAAO,IAAI,CAACvM,MAAM,CAAC,QAAQ,CAAC;IAC9B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA3C,GAAA;IAAA/E,KAAA,EAKA,SAAAmU,gBAAA,EAAkB;MAChB,OAAO,IAAI,CAACrM,YAAY,CAAC,cAAc,CAAC;IAC1C;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/C,GAAA;IAAA/E,KAAA,EAMA,SAAAqU,kBAAkBrM,YAAY,EAAE;MAC9B,OAAO,IAAI,CAACD,cAAc,CAAC,gBAAgB,EAAEC,YAAY,CAAC;IAC5D;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjD,GAAA;IAAA/E,KAAA,EAMA,SAAAuU,iBAAiBvM,YAAY,EAAE;MAC7B,OAAO,IAAI,CAACE,aAAa,CAAC,eAAe,EAAEF,YAAY,CAAC;IAC1D;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAjD,GAAA;IAAA/E,KAAA,EAOA,SAAAwH,YAAYZ,UAAU,EAAE5G,KAAK,EAAE;MAC7B,OAAO,IAAI,CAAC6J,kBAAkB,CAAC,UAAU,EAAE,IAAI,EAAEjD,UAAU,EAAE5G,KAAK,CAAC;IACrE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA+E,GAAA;IAAA/E,KAAA,EAQA,SAAAgL,gBAAgBpE,UAAU,EAAE5G,KAAK,EAAEkK,eAAe,EAAE;MAClD,IAAIa,QAAQ;MAEZ,IAAI,IAAI,CAAChC,aAAa,CAACnC,UAAU,EAAE,yBAAyB,CAAC,EAAE;QAC7DmE,QAAQ,GAAG,IAAIgH,mEAAmB,EAAE;MACtC,CAAC,MAAM,IAAI7H,eAAe,IAAI,IAAI,CAACnB,aAAa,CAACnC,UAAU,EACvD,sDAAsD,CAAC,EAAE;QAC3D,IAAM8N,KAAK,GAAG9N,UAAU,CAACqD,KAAK,CAAC,GAAG,CAAC;QACnC,IAAMU,KAAK,GAAGqD,MAAM,CAAC0G,KAAK,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAMC,WAAW,GAAG,IAAI,CAAChP,GAAG,CAACiP,YAAY,CAAC9J,UAAU,CAACH,KAAK,CAAC;QAC3D,IAAI,IAAI,CAACtF,aAAa,EAAE,EAAE;UACxB,IAAI,CAACsP,WAAW,CAAC1U,IAAI,EAAE;YACrB,IAAI,CAACqF,eAAe,CAChB+M,qBAAqB,CAACwC,0BAA0B,CAAC;UACvD,CAAC,MAAM;YACL,IAAI,CAACC,4BAA4B,CAACH,WAAW,EAAE3U,KAAK,CAAC;YAErD,IAAM+U,aAAa,GAAGzC,iBAAiB,CAACqC,WAAW,CAAC1U,IAAI,CAAC;YACzD,IAAI8U,aAAa,EAAE;cACjB,IAAI,CAACC,sBAAsB,CAACD,aAAa,EAAE/U,KAAK,EAAE2U,WAAW,CAAC1U,IAAI,CAAC;YACrE,CAAC,MAAM;cACL,IAAI,CAACqF,eAAe,CAAC+M,qBAAqB,CAAC4C,mBAAmB,EAC1D,2BAA2B,GAAGN,WAAW,CAAC1U,IAAI,CAAC;YACrD;UACF;QACF;QACA,IAAI,IAAI,CAACyE,aAAa,KAAK,CAAC,EAAE;UAC5BqG,QAAQ,GAAG,IAAI6G,qFAAqC,EAAE;QACxD;MACF,CAAC,MAAM,IAAI1H,eAAe,IAAI,IAAI,CAACnB,aAAa,CAACnC,UAAU,EACvD,+CAA+C,CAAC,EAAE;QACpDmE,QAAQ,GAAG,IAAI+G,+EAA+B,EAAE;MAClD,CAAC,MAAM,IAAI,CAAC5H,eAAe,IACvB,IAAI,CAACnB,aAAa,CAACnC,UAAU,EAAE,2BAA2B,CAAC,EAAE;QAC/DmE,QAAQ,GAAG,IAAI8G,qEAAqB,EAAE;MACxC,CAAC,MAAM,IAAI,IAAI,CAAC9I,aAAa,CAACnC,UAAU,EACpC,oCAAoC,CAAC,EAAE;QACzCmE,QAAQ,GAAG,IAAI4G,iEAAiB,EAAE;MACpC,CAAC,MAAM,IAAI,IAAI,CAAC5I,aAAa,CAACnC,UAAU,EACpC,gCAAgC,CAAC,EAAE;QACrCmE,QAAQ,GAAG,IAAI4G,iEAAiB,CAAC,IAAI,CAAC;MACxC;MAEA,OAAO5G,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAhG,GAAA;IAAA/E,KAAA,EAMA,SAAAgV,uBAAuBD,aAAa,EAAE/U,KAAK,EAAEkV,gBAAgB,EAAE;MAC7D,IAAIC,KAAK,GAAG,EAAE;MACd,IAAIJ,aAAa,aAAbA,aAAa,eAAbA,aAAa,CAAEK,SAAS,EAAE;QAC5BD,KAAK,GAAG9N,MAAM,CAACrH,KAAK,CAAC,CAACiK,KAAK,CAAC8K,aAAa,CAACK,SAAS,CAAC;MACtD,CAAC,MAAM;QACLD,KAAK,CAAC,CAAC,CAAC,GAAGnV,KAAK;MAClB;MAEA,IAAImV,KAAK,CAACxM,MAAM,GAAG,CAAC,IAAIwM,KAAK,CAACxM,MAAM,IAAIoM,aAAa,CAACzX,GAAG,EAAE;QACzD,IAAI,CAAC+X,yBAAyB,CAACH,gBAAgB,EAAEC,KAAK,EAAEnV,KAAK,CAAC;MAChE,CAAC,MAAM,IAAImV,KAAK,CAACxM,MAAM,GAAGoM,aAAa,CAACzX,GAAG,EAAE;QAC3C,IAAI,CAACgI,eAAe,CAAC+M,qBAAqB,CAAC4C,mBAAmB,EAC1D,qCAAqC,CAAC;MAC5C;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAlQ,GAAA;IAAA/E,KAAA,EAKA,SAAA8U,6BAA6BH,WAAW,EAAE3U,KAAK,EAAE;MAC/C,IAAMsV,iBAAiB,GAAGX,WAAW,CAACrC,iBAAiB,CAACgB,MAAM;MAC9D,IAAIqB,WAAW,CAAC1U,IAAI,KAAK,QAAQ,EAAE;QACjC,KAAK,IAAI2I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0M,iBAAiB,IAAI,IAAI,CAAC5Q,aAAa,KAC3D,CAAC,EAAEkE,CAAC,EAAE,EAAE;UACN,IAAM2M,QAAQ,GAAGZ,WAAW,CAACrC,iBAAiB,CAACxH,UAAU,CAAClC,CAAC,CAAC;UAC5D,IAAI2M,QAAQ,CAACC,OAAO,KAAKxV,KAAK,EAAE;YAC9B,IAAI,CAACsF,eAAe,CAAC+M,qBAAqB,CAAC4C,mBAAmB,CAAC;UACjE;QACF;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAlQ,GAAA;IAAA/E,KAAA,EAKA,SAAA0K,wBAAwB9D,UAAU,EAAE5G,KAAK,EAAE;MACzC,IAAM0U,KAAK,GAAG9N,UAAU,CAACqD,KAAK,CAAC,GAAG,CAAC;MACnC,IAAMU,KAAK,GAAGqD,MAAM,CAAC0G,KAAK,CAAC,CAAC,CAAC,CAAC;MAC9B,IAAMe,aAAa,GAAGzH,MAAM,CAAC0G,KAAK,CAAC,CAAC,CAAC,CAAC;MACtC,IAAMC,WAAW,GAAG,IAAI,CAAChP,GAAG,CAACiP,YAAY,CAAC9J,UAAU,CAACH,KAAK,CAAC;MAE3D,IAAM2K,iBAAiB,GAAGX,WAAW,CAACrC,iBAAiB,CAACgB,MAAM;MAC9D,IAAI,CAACwB,4BAA4B,CAACH,WAAW,EAAE3U,KAAK,CAAC;MAErD,IAAM+U,aAAa,GAAGzC,iBAAiB,CAACqC,WAAW,CAAC1U,IAAI,CAAC;MACzD,IAAI,OAAO8U,aAAa,CAACW,KAAK,KAAK,WAAW,IAAIJ,iBAAiB,IAC/DP,aAAa,CAACW,KAAK,EAAE;QACvB,IAAI,CAACV,sBAAsB,CAACD,aAAa,EAAE/U,KAAK,EAAE2U,WAAW,CAAC1U,IAAI,CAAC;QAEnE,IAAI,IAAI,CAACyE,aAAa,KAAK,CAAC,KACvB,CAACqQ,aAAa,CAACY,SAAS,IACrB,CAAC,IAAI,CAACC,sBAAsB,CAACjB,WAAW,CAACrC,iBAAiB,EACtDmD,aAAa,EAAEzV,KAAK,CAAC,CAAC,IAC7B,IAAI,CAAC0E,aAAa,KAAK,CAAC,IAAI1E,KAAK,KAAK,EAAG,EAAE;UAC9C;QAAA,CACD,MAAM;UACL,IAAI,IAAI,CAAC0E,aAAa,KAAK,CAAC,EAAE;YAC5B,IAAI,CAACY,eAAe,CAAC+M,qBAAqB,CAAC4C,mBAAmB,EAC1D,2CAA2C,CAAC;UAClD;QACF;MACF,CAAC,MAAM;QACL,IAAI,CAAC3P,eAAe,CAAC+M,qBAAqB,CAAC4C,mBAAmB,EAC1D,6CAA6C,CAAC;MACpD;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlQ,GAAA;IAAA/E,KAAA,EAMA,SAAA+G,YAAYH,UAAU,EAAE;MACtB,OAAO,IAAI,CAACwE,kBAAkB,CAAC,UAAU,EAAE,IAAI,EAAExE,UAAU,CAAC;IAC9D;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA7B,GAAA;IAAA/E,KAAA,EAOA,SAAAiI,0BAA0BkF,WAAW,EAAE0I,MAAM,EAAE;MAC7C,IAAIC,YAAY,GAAG,EAAE;MACrB,IAAIC,aAAa,GAAG,EAAE;;MAEtB;MACA5I,WAAW,GAAG9F,MAAM,CAAC8F,WAAW,CAAC;MACjC,IAAIiF,mBAAmB,CAAC4D,kBAAkB,CAAC7I,WAAW,CAAC,EAAE;QACvD2I,YAAY,GAAG1D,mBAAmB,CAAC4D,kBAAkB,CAAC7I,WAAW,CAAC,CAAC2I,YAAY;QAC/EC,aAAa,GAAG3D,mBAAmB,CAAC4D,kBAAkB,CAAC7I,WAAW,CAAC,CAAC4I,aAAa;MACnF;MAEA,OAAOF,MAAM,GAAGE,aAAa,GAAGD,YAAY;IAC9C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA/Q,GAAA;IAAA/E,KAAA;IAkBA;AACF;AACA;AACA;AACA;AACA;IACE,SAAAqV,0BAA0BH,gBAAgB,EAAEC,KAAK,EAAEnV,KAAK,EAAE;MACxD,IAAMuV,QAAQ,GAAGjD,iBAAiB,CAAC4C,gBAAgB,CAAC;MACpD,IAAMe,WAAW,GAAG,IAAIC,MAAM,CAACX,QAAQ,CAACY,MAAM,CAAC;MAC/C,KAAK,IAAIvN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuM,KAAK,CAACxM,MAAM,IAAI,IAAI,CAACjE,aAAa,KAAK,CAAC,EAAEkE,CAAC,EAAE,EAAE;QACjE,IAAIsM,gBAAgB,CAAChM,KAAK,CACtB,0DAA0D,CAAC,EAAE;UAC/DiM,KAAK,CAACvM,CAAC,CAAC,GAAG,IAAI,CAACwN,6BAA6B,CAACjB,KAAK,CAACvM,CAAC,CAAC,CAAC;QACzD;QAEA,IAAI2M,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEc,UAAU,EAAE;UACxB,IAAMC,MAAM,GAAGnB,KAAK,CAACvM,CAAC,CAAC,CAACqB,KAAK,CAACsL,QAAQ,CAACc,UAAU,CAAC;UAClD,IAAIC,MAAM,CAAC3N,MAAM,KAAK,CAAC,EAAE;YACvB,IAAM4N,OAAO,GAAGD,MAAM,CAAC,CAAC,CAAC,CAACpN,KAAK,CAAC+M,WAAW,CAAC;YAC5C,IAAI,CAACM,OAAO,EAAE;cACZ,IAAI,CAACjR,eAAe,CAAC+M,qBAAqB,CAACmE,aAAa,CAAC;YAC3D,CAAC,MAAM;cACL,IAAI,CAACF,MAAM,CAAC,CAAC,CAAC,CAACpN,KAAK,CAAC,IAAIgN,MAAM,CAACX,QAAQ,CAACkB,OAAO,CAAC,CAAC,EAAE;gBAClD,IAAI,CAACnR,eAAe,CAAC+M,qBAAqB,CAACmE,aAAa,CAAC;cAC3D;YACF;UACF,CAAC,MAAM;YACL,IAAI,CAAClR,eAAe,CAAC+M,qBAAqB,CAACmE,aAAa,CAAC;UAC3D;QACF,CAAC,MAAM;UACL,IAAMD,QAAO,GAAGpB,KAAK,CAACvM,CAAC,CAAC,CAACM,KAAK,CAAC+M,WAAW,CAAC;UAC3C,IAAK,CAACM,QAAO,IAAIvW,KAAK,KAAK,EAAE,IACxB,CAACuW,QAAO,IAAIrB,gBAAgB,KAAK,YAAa,EAAE;YACnD,IAAI,CAAC5P,eAAe,CAAC+M,qBAAqB,CAACmE,aAAa,CAAC;UAC3D,CAAC,MAAM;YACL,IAAItB,gBAAgB,KAAK,SAAS,IAAIC,KAAK,CAACxM,MAAM,GAAG,CAAC,EAAE;cACtD,IAAIqF,MAAM,CAACmH,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGnH,MAAM,CAACmH,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;gBACvC,IAAI,CAAC7P,eAAe,CAAC+M,qBAAqB,CAACmE,aAAa,CAAC;cAC3D;YACF,CAAC,MAAM;cACL,IAAIrB,KAAK,CAACvM,CAAC,CAAC,KAAK,EAAE,IAAI2M,QAAQ,CAACmB,MAAM,EAAE;gBACtC,KAAK,IAAI5N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,CAAC,IAAI,IAAI,CAAClE,aAAa,KAAK,CAAC,EAAEoE,CAAC,EAAE,EAAE;kBACtD,IAAIqM,KAAK,CAACvM,CAAC,CAAC,KAAKuM,KAAK,CAACrM,CAAC,CAAC,EAAE;oBACzB,IAAI,CAACxD,eAAe,CAAC+M,qBAAqB,CAACmE,aAAa,CAAC;kBAC3D;gBACF;cACF;YACF;UACF;QACF;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAzR,GAAA;IAAA/E,KAAA,EAKA,SAAAoW,8BAA8BO,IAAI,EAAE;MAClC,IAAIC,SAAS,GAAG,KAAK;MACrB,IAAIC,QAAQ,GAAG,KAAK;MACpB,IAAIC,QAAQ,GAAG,KAAK;MAEpB,IAAMC,WAAW,GAAG,IAAIb,MAAM,CAC1B,gDAAgD,CAAC;MACrD,IAAIK,OAAO,GAAGI,IAAI,CAACzN,KAAK,CAAC6N,WAAW,CAAC;MACrC,IAAIC,WAAW,GAAG,IAAI;MACtB,OAAOT,OAAO,EAAE;QACd,QAAQA,OAAO,CAAC,CAAC,CAAC;UAChB,KAAK,MAAM;YACTS,WAAW,GAAGL,IAAI,CAACzN,KAAK,CAACsJ,eAAe,CAACyE,SAAS,CAAC;YACnD,IAAID,WAAW,EAAE;cACf,IAAME,IAAI,GAAGF,WAAW,CAAC,CAAC,CAAC;cAC3B,IAAIE,IAAI,KAAKlY,SAAS,IAAIkY,IAAI,CAACvO,MAAM,GAAG,CAAC,EAAE;gBACzC,IAAIuJ,qEAAc,CAACgF,IAAI,CAACC,WAAW,EAAE,CAAC,KAAKnY,SAAS,EAAE;kBACpD,IAAI,CAACsG,eAAe,CAAC+M,qBAAqB,CAACmE,aAAa,CAAC;gBAC3D;cACF;YACF;YACAM,QAAQ,GAAG,IAAI;YACf;UACF,KAAK,cAAc;YACjB,IAAI,CAACA,QAAQ,IAAI,CAACF,SAAS,IAAI,CAACC,QAAQ,EAAE;cACxC,IAAIN,OAAO,CAAC,CAAC,CAAC,KAAK,MAAM,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;gBACnD,IAAI,CAACjR,eAAe,CAAC+M,qBAAqB,CAACmE,aAAa,CAAC;cAC3D;YACF;YAEAK,QAAQ,GAAG,IAAI;YACf;UACF,KAAK,eAAe;YAClB,IAAI,CAACA,QAAQ,IAAI,CAACC,QAAQ,IAAI,CAACF,SAAS,EAAE;cACxC,IAAIL,OAAO,CAAC,CAAC,CAAC,KAAK,MAAM,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;gBACnD,IAAI,CAACjR,eAAe,CAAC+M,qBAAqB,CAACmE,aAAa,CAAC;cAC3D;YACF;YAEAI,SAAS,GAAG,IAAI;YAChB;UACF;YACE;QAAM;QAEVD,IAAI,GAAGA,IAAI,CAACpM,MAAM,CAACgM,OAAO,CAAC,CAAC,CAAC,CAAC5N,MAAM,CAAC;QACrC4N,OAAO,GAAGI,IAAI,CAACzN,KAAK,CAAC6N,WAAW,CAAC;MACnC;MAEA,OAAOJ,IAAI;IACb;;IAEA;AACF;AACA;AACA;EAHE;IAAA5R,GAAA;IAAA/E,KAAA,EAIA,SAAAoX,2BAA2BC,MAAM,EAAE;MACjC;MACA,IAAI,CAAC1R,GAAG,GAAG0R,MAAM,CAAC1R,GAAG;MACrB,IAAI,CAAC4N,GAAG,GAAG8D,MAAM,CAAC9D,GAAG;IACvB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxO,GAAA;IAAA/E,KAAA,EAMA,SAAAsP,gBAAgBgI,eAAwB,EAAE;MACxC,IAAMC,SAAS,GAAG,IAAI,CAAClI,qBAAqB,EAAE;MAE9C,IAAIiI,eAAe,EAAE;QACnBC,SAAS,CAAC5R,GAAG,CAAC6R,UAAU,GAAG,IAAI,CAAC7R,GAAG,CAAC8R,mBAAmB,EAAE;MAC3D;MAEA,IAAMvZ,MAAM,GAAG,EAAE;MACjB,IAAMwZ,SAAS,GAAG1F,+CAAiB,CAACuF,SAAS,CAAC;MAC9C,QAAQ,IAAI,CAAC5V,QAAQ,CAACS,gBAAgB;QACpC,KAAK,WAAW;UACd,OAAO4P,+CAAiB,CAACuF,SAAS,CAAC;QACrC,KAAK,QAAQ;UACX,KAAK,IAAM1M,IAAI,IAAI6M,SAAS,EAAE;YAC5B,IAAI,CAAC,CAAC,CAACvU,cAAc,CAAC/C,IAAI,CAACsX,SAAS,EAAE7M,IAAI,CAAC,EAAE;cAC3C3M,MAAM,CAACgN,IAAI,IAAAd,MAAA,CAAIS,IAAI,OAAAT,MAAA,CAAIsN,SAAS,CAAC7M,IAAI,CAAC,EAAG;YAC3C;UACF;UACA,OAAO3M,MAAM;QACf,KAAK,MAAM;QACX;UACE,OAAOqZ,SAAS;MAAC;IAEvB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxS,GAAA;IAAA/E,KAAA,EAMA,SAAA0G,UAAU4Q,eAAwB,EAAE;MAAA,IAAAM,kBAAA,EAAAC,qBAAA,EAAAC,sBAAA;MAClC,IAAIR,eAAe,EAAE;QACnB,IAAI,IAAI,CAAC3R,GAAG,CAACoS,IAAI,KAAK,QAAQ,EAAE;UAC9B,IAAI,IAAI,CAACpS,GAAG,CAACqS,MAAM,KAAK,QAAQ,EAAE;YAChC,IAAI,IAAI,CAACrS,GAAG,CAACsS,oBAAoB,IAAI,IAAI,CAACtS,GAAG,CAACuS,gBAAgB,EAAE;cAC9D,IAAI,IAAI,CAACvS,GAAG,CAACuS,gBAAgB,IAAI,IAAI,CAACvS,GAAG,CAACsS,oBAAoB,EAAE;gBAC9DpU,OAAO,CAACO,KAAK,CAAC,sCAAsC,CAAC;gBACrD,IAAI,CAACuB,GAAG,CAACwS,iBAAiB,GAAG,WAAW;cAC1C,CAAC,MAAM;gBACLtU,OAAO,CAACO,KAAK,CAAC,uCAAuC,CAAC;gBACtD,IAAI,CAACuB,GAAG,CAACwS,iBAAiB,GAAG,YAAY;cAC3C;YACF;YACA,IAAI,IAAI,CAACxS,GAAG,CAACyS,oBAAoB,IAAI,IAAI,CAACzS,GAAG,CAAC0S,KAAK,CAACC,MAAM,EAAE;cAC1D,IAAI,IAAI,CAAC3S,GAAG,CAAC0S,KAAK,CAACC,MAAM,IAAI,IAAI,CAAC3S,GAAG,CAACyS,oBAAoB,EAAE;gBAC1DvU,OAAO,CAACO,KAAK,CAAC,gCAAgC,CAAC;gBAC/C,IAAI,CAACuB,GAAG,CAAC4S,cAAc,GAAG,QAAQ;cACpC,CAAC,MAAM;gBACL1U,OAAO,CAACO,KAAK,CAAC,gCAAgC,CAAC;gBAC/C,IAAI,CAACuB,GAAG,CAAC4S,cAAc,GAAG,QAAQ;cACpC;YACF;UACF;QACF;MACF;MAEA,IAAIC,UAAU,GAAG,KAAK;MACtB,IAAI,IAAI,CAACjF,GAAG,CAACiB,GAAG,CAACC,OAAO,OAAAmD,kBAAA,GAAM,IAAI,CAAC3I,YAAY,cAAA2I,kBAAA,wBAAAC,qBAAA,GAAjBD,kBAAA,CAAmBrE,GAAG,cAAAsE,qBAAA,wBAAAC,sBAAA,GAAtBD,qBAAA,CAAwBrD,GAAG,cAAAsD,sBAAA,uBAA3BA,sBAAA,CAA6BrD,OAAO,CAAC,IAC/D,IAAI,CAAClB,GAAG,CAACiB,GAAG,CAACC,OAAO,KAAK,QAAQ,EAAE;QACrC,IAAI,CAAClB,GAAG,CAACiB,GAAG,CAACC,OAAO,GAAGgE,kBAAkB,CAAC,IAAI,CAAClF,GAAG,CAACiB,GAAG,CAACC,OAAO,CAAC;QAC/D+D,UAAU,GAAG,IAAI;MACnB;MAEA,IAAM/U,YAAY,GAAG,IAAI,CAAC6L,eAAe,CAACgI,eAAe,IACrD,IAAI,CAAC3V,QAAQ,CAACe,mBAAmB,CAAC;MAEtC,IAAI,IAAI,CAACmC,WAAW,KAAK3D,gBAAgB,CAACiD,eAAe,EAAE;QACzDN,OAAO,CAACO,KAAK,CAAC,sBAAsB,IAC7BkT,eAAe,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC;QAC/CzT,OAAO,CAACO,KAAK,CAACX,YAAY,CAAC;MAC7B;MACA,IAAI,IAAI,CAAC9B,QAAQ,CAACQ,YAAY,EAAE;QAC9B,IAAMjE,MAAM,GAAG,IAAI,CAACsR,kBAAkB,CAAC,IAAI,CAAC7N,QAAQ,CAACQ,YAAY,EAC7DsB,YAAY,EAAE6T,eAAe,CAAC;;QAElC;QACA;UACE,IAAIkB,UAAU,IAAIta,MAAM,CAACsa,UAAU,KAAKxZ,SAAS,IAC7Cd,MAAM,CAACsa,UAAU,KAAK,EAAE,EAAE;YAC5Bzb,QAAQ,4BAAAqN,MAAA,CAA0BlM,MAAM,CAACsa,UAAU,WAAQ,EAAE;UAC/D;QACF;QACA,OAAOta,MAAM;MACf,CAAC,MAAM;QACL,OAAOgD,gBAAgB,CAACmC,UAAU;MACpC;IACF;EAAC;EAAA,OAAAqP,YAAA;AAAA,EA/hBuCjR,gDAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BK;AACJ;AACX;AAEvC,IAAMiX,iBAAiB,GAAG1X,wEAAoB;AAC9C,IAAM2X,aAAa,GAAGxG,gEAAa;AACnC,IAAMhR,mBAAmB,GAAGJ,sEAAkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6X,gBAAgBA,CAC5B5Y,KAAa,EACb6Y,YAAoB,EACpBvV,SAAiB,EACjBwV,UAAoB,EACpBC,gBAA0B,EAAE;EAC9B,IAAM9C,WAAW,GAAG,IAAIC,MAAM,CAAC2C,YAAY,CAAC;EAC5C,IAAMtC,OAAO,GAAGvW,KAAK,CAACkJ,KAAK,CAAC+M,WAAW,CAAC;EACxC,IAAI8C,gBAAgB,IAAI/Y,KAAK,KAAK,EAAE,EAAE;IACpC,OAAO,IAAI;EACb;EACA,IAAIA,KAAK,KAAKhB,SAAS,IAAI,CAACuX,OAAO,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;IACxD,MAAM,IAAIuC,UAAU,CAAC7b,SAAS,CAACsH,WAAW,CAACjB,SAAS,CAAC;EACvD;EACA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS0V,eAAeA,CAC3BhZ,KAAU,EACViZ,YAAoB,EACpB3V,SAAiB,EACjBwV,UAAoB,EAAE;EACxB,IAAMI,MAAM,GAAGD,YAAY,CAAChP,KAAK,CAAC,GAAG,CAAC;EACtCjK,KAAK,GAAGA,KAAK,GAAG,GAAG;EACnB,IAAIA,KAAK,IAAIkZ,MAAM,CAAC,CAAC,CAAC,EAAE;IACtB,IAAKA,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAMlZ,KAAK,IAAIkZ,MAAM,CAAC,CAAC,CAAE,EAAE;MAC/C,OAAO,IAAI;IACb,CAAC,MAAM;MACL,MAAM,IAAIJ,UAAU,CAAC7b,SAAS,CAACsH,WAAW,CAACjB,SAAS,CAAC;IACvD;EACF,CAAC,MAAM;IACL,MAAM,IAAIwV,UAAU,CAAC7b,SAAS,CAACsH,WAAW,CAACjB,SAAS,CAAC;EACvD;AACF;;AAEA;AACA;AACA;AAFA,IAAA6V,YAAA,oBAAA7X,OAAA;AAAA,IAAA8X,WAAA,oBAAA9X,OAAA;AAGO,IAAM+X,OAAO;EAKlB;AACF;AACA;EACE,SAAAA,QAAA,EAAc;IAAAzX,eAAA,OAAAyX,OAAA;IAAA/U,eAAA,qBAPD,KAAK;IAAAzC,0BAAA,OAAAsX,YAAA;MAAArX,QAAA;MAAA9B,KAAA,EACH;IAAK;IAAA6B,0BAAA,OAAAuX,WAAA;MAAAtX,QAAA;MAAA9B,KAAA;IAAA;IAOlB,IAAI,iBAAAqZ,OAAA,QAAA9U,WAAA,eAAe8U,OAAO,EAAE;MAC1B,MAAM,IAAI5a,SAAS,CAAC,6CAA6C,CAAC;IACpE;EACF;;EAEA;AACF;AACA;AACA;EAHEqG,YAAA,CAAAuU,OAAA;IAAAtU,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAkB;MAChB,OAAAV,qBAAA,CAAO,IAAI,EAAA4T,YAAA;IACb;;IAEA;AACF;AACA;AACA;EAHE;IAAApU,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAiB;MACf,OAAAV,qBAAA,CAAO,IAAI,EAAA6T,WAAA;IACb;;IAEA;AACF;AACA;EAFE;IAAArU,GAAA;IAAA/E,KAAA,EAGA,SAAAgF,WAAA,EAAa;MACXJ,qBAAA,KAAI,EAAAuU,YAAA,EAAgB,IAAI;IAC1B;;IAEA;AACF;AACA;AACA;EAHE;IAAApU,GAAA;IAAA/E,KAAA,EAIA,SAAA4F,aAAA,EAAe;MACbhB,qBAAA,KAAI,EAAAwU,WAAA,EAAe,IAAI1b,IAAI,EAAE,CAAC4b,OAAO,EAAE;IACzC;EAAC;EAAA,OAAAD,OAAA;AAAA;;AAGH;AACA;AACA;AAFA,IAAAE,UAAA,oBAAAjY,OAAA;AAAA,IAAAkY,YAAA,oBAAAlY,OAAA;AAAA,IAAAmY,mBAAA,oBAAAnY,OAAA;AAAA,IAAAoY,kBAAA,oBAAApY,OAAA;AAAA,IAAAqY,mBAAA,oBAAArY,OAAA;AAAA,IAAAsY,cAAA,oBAAAtY,OAAA;AAAA,IAAAuY,YAAA,oBAAAvY,OAAA;AAAA,IAAAwY,IAAA,oBAAAxY,OAAA;AAAA,IAAAyY,IAAA,oBAAAzY,OAAA;AAAA,IAAA0Y,IAAA,oBAAA1Y,OAAA;AAGO,IAAM2Y,QAAQ,0BAAAC,QAAA;EAAAtH,SAAA,CAAAqH,QAAA,EAAAC,QAAA;EAAA,IAAArH,MAAA,GAAAC,YAAA,CAAAmH,QAAA;EACnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAAA,SAAA1L,IAAA,EAUO;IAAA,IAAAvC,KAAA;IAAA,IARDmO,cAAc,GAAA5L,IAAA,CAAd4L,cAAc;MACdC,WAAW,GAAA7L,IAAA,CAAX6L,WAAW;MACX9c,GAAG,GAAAiR,IAAA,CAAHjR,GAAG;MACH+M,gBAAgB,GAAAkE,IAAA,CAAhBlE,gBAAgB;MAChBgQ,eAAe,GAAA9L,IAAA,CAAf8L,eAAe;MACfC,gBAAgB,GAAA/L,IAAA,CAAhB+L,gBAAgB;MAChBC,YAAY,GAAAhM,IAAA,CAAZgM,YAAY;MACZzB,UAAU,GAAAvK,IAAA,CAAVuK,UAAU;IAAAlX,eAAA,OAAAqY,QAAA;IAEdjO,KAAA,GAAA6G,MAAA,CAAAzS,IAAA;IAAQyB,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAAuN,UAAA;MAAAzX,QAAA;MAAA9B,KAAA;IAAA;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAAwN,YAAA;MAAA1X,QAAA;MAAA9B,KAAA;IAAA;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAAyN,mBAAA;MAAA3X,QAAA;MAAA9B,KAAA;IAAA;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAA0N,kBAAA;MAAA5X,QAAA;MAAA9B,KAAA;IAAA;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAA2N,mBAAA;MAAA7X,QAAA;MAAA9B,KAAA;IAAA;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAA4N,cAAA;MAAA9X,QAAA;MAAA9B,KAAA;IAAA;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAA6N,YAAA;MAAA/X,QAAA;MAAA9B,KAAA;IAAA;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAA8N,IAAA;MAAAhY,QAAA;MAAA9B,KAAA,EAwBH;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAA+N,IAAA;MAAAjY,QAAA;MAAA9B,KAAA,EACF;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAAgO,IAAA;MAAAlY,QAAA;MAAA9B,KAAA;IAAA;IAvBP4E,qBAAA,CAAAqO,sBAAA,CAAAjH,KAAA,GAAAuN,UAAA,EAAkBY,cAAc,IAC5BzB,iBAAiB,CAACyB,cAAc;IACpCvV,qBAAA,CAAAqO,sBAAA,CAAAjH,KAAA,GAAAwN,YAAA,EAAqB,CAACY,WAAW,GAAG,KAAK,GAAGzB,aAAa,CAACyB,WAAW;IACrExV,qBAAA,CAAAqO,sBAAA,CAAAjH,KAAA,GAAAgO,IAAA,EAAa1c,GAAG,IAAIA,GAAG,KAAK,EAAE,GAAIA,GAAG,GAAG,KAAK;IAC7CsH,qBAAA,CAAAqO,sBAAA,CAAAjH,KAAA,GAAAyN,mBAAA,EAA4BpP,gBAAgB,IACxClJ,mBAAmB,CAACqZ,iBAAiB;IACzC5V,qBAAA,CAAAqO,sBAAA,CAAAjH,KAAA,GAAA0N,kBAAA,EAA2BW,eAAe,IACtClZ,mBAAmB,CAACqV,aAAa;IACrC5R,qBAAA,CAAAqO,sBAAA,CAAAjH,KAAA,GAAA2N,mBAAA,EAA4BW,gBAAgB,IACxCnZ,mBAAmB,CAACsZ,kBAAkB;IAC1C7V,qBAAA,CAAAqO,sBAAA,CAAAjH,KAAA,GAAA4N,cAAA,EAAuBW,YAAY,IAC/B5B,aAAa,CAAC+B,UAAU;IAC5B9V,qBAAA,CAAAqO,sBAAA,CAAAjH,KAAA,GAAA6N,YAAA,EAAqBf,UAAU;IAAC,OAAA9M,KAAA;EAClC;EAAClH,YAAA,CAAAmV,QAAA;IAAAlV,GAAA;IAAAkB,GAAA;IAaD;AACF;AACA;AACA;AACA;IACE,SAAAA,IAAA,EAAgB;MACd,OAAAV,qBAAA,CAAO,IAAI,EAAAgU,UAAA;IACb;;IAEA;AACF;AACA;AACA;AACA,OAJE;IAAArT,GAAA,EAKA,SAAAA,IAAcyU,SAAS,EAAE;MACvB,MAAM,KAAIpV,qBAAA,KAAI,EAAAsU,YAAA,EAAe5c,SAAS,CAACsH,WAAW,EAAAgB,qBAAA,CAAC,IAAI,EAAAkU,mBAAA,EAAsB;IAC/E;;IAEA;AACF;AACA;AACA;EAHE;IAAA1U,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAU;MACR,OAAAV,qBAAA,CAAO,IAAI,EAAAuU,IAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA5T,GAAA,EAIA,SAAAA,IAAQ0U,GAAG,EAAE;MACX,IAAIhC,gBAAgB,CAACgC,GAAG,EAAArV,qBAAA,CAAE,IAAI,EAAAqU,cAAA,GAAArU,qBAAA,CAAkB,IAAI,EAAAmU,kBAAA,GAAAnU,qBAAA,CAAsB,IAAI,EAAAsU,YAAA,EAAe,KACxF,CAAAtU,qBAAA,CAAC,IAAI,EAAAiU,YAAA,CAAc,IAChBR,eAAe,CAAC4B,GAAG,EAAArV,qBAAA,CAAE,IAAI,EAAAiU,YAAA,GAAAjU,qBAAA,CAAgB,IAAI,EAAAoU,mBAAA,GAAApU,qBAAA,CAAuB,IAAI,EAAAsU,YAAA,EAAe,CAAC,EAAE;QAChGjV,qBAAA,KAAI,EAAAkV,IAAA,EAAQc,GAAG;MACjB;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAA7V,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAU;MACR,OAAAV,qBAAA,CAAO,IAAI,EAAAwU,IAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA7T,GAAA,EAIA,SAAAA,IAAQ1I,GAAG,EAAE;MACX,IAAIob,gBAAgB,CAACpb,GAAG,EAAA+H,qBAAA,CAAE,IAAI,EAAAqU,cAAA,GAAArU,qBAAA,CAAkB,IAAI,EAAAmU,kBAAA,GAAAnU,qBAAA,CAAsB,IAAI,EAAAsU,YAAA,EAAe,KACxF,CAAAtU,qBAAA,CAAC,IAAI,EAAAiU,YAAA,CAAc,IAChBR,eAAe,CAACxb,GAAG,EAAA+H,qBAAA,CAAE,IAAI,EAAAiU,YAAA,GAAAjU,qBAAA,CAAgB,IAAI,EAAAoU,mBAAA,GAAApU,qBAAA,CAAuB,IAAI,EAAAsU,YAAA,EAAe,CAAC,EAAE;QAChGjV,qBAAA,KAAI,EAAAmV,IAAA,EAAQvc,GAAG;MACjB;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAuH,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAU;MACR,OAAAV,qBAAA,CAAO,IAAI,EAAAyU,IAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA9T,GAAA,EAIA,SAAAA,IAAQ5I,GAAG,EAAE;MACX,IAAIsb,gBAAgB,CAACtb,GAAG,EAAAiI,qBAAA,CAAE,IAAI,EAAAqU,cAAA,GAAArU,qBAAA,CAAkB,IAAI,EAAAmU,kBAAA,GAAAnU,qBAAA,CAAsB,IAAI,EAAAsU,YAAA,EAAe,KACxF,CAAAtU,qBAAA,CAAC,IAAI,EAAAiU,YAAA,CAAc,IAChBR,eAAe,CAAC1b,GAAG,EAAAiI,qBAAA,CAAE,IAAI,EAAAiU,YAAA,GAAAjU,qBAAA,CAAgB,IAAI,EAAAoU,mBAAA,GAAApU,qBAAA,CAAuB,IAAI,EAAAsU,YAAA,EAAe,CAAC,EAAE;QAChGjV,qBAAA,KAAI,EAAAoV,IAAA,EAAQ1c,GAAG;MACjB;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAyH,GAAA;IAAA/E,KAAA,EAIA,SAAA6a,OAAA,EAAS;MACP,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAM5c,MAAM,GAAG;QACb,KAAK,EAAE,IAAI,CAAC0c,GAAG;QACf,KAAK,EAAE,IAAI,CAACpd,GAAG;QACf,KAAK,EAAE,IAAI,CAACF;MACd,CAAC;MACD,OAAO,IAAI,CAACwd,UAAU;MACtB,OAAO5c,MAAM;IACf;EAAC;EAAA,OAAA+b,QAAA;AAAA,EA9I2BZ,OAAO;;AAiJrC;AACA;AACA;AAFA,IAAA0B,UAAA,oBAAAzZ,OAAA;AAAA,IAAA0Z,WAAA,oBAAA1Z,OAAA;AAAA,IAAA2Z,UAAA,oBAAA3Z,OAAA;AAGO,IAAMT,QAAQ,0BAAAqa,SAAA;EAAAtI,SAAA,CAAA/R,QAAA,EAAAqa,SAAA;EAAA,IAAAC,OAAA,GAAArI,YAAA,CAAAjS,QAAA;EACnB;AACF;AACA;AACA;AACA;AACA;EACE,SAAAA,SAAA2N,KAAA,EAA+C;IAAA,IAAA/B,MAAA;IAAA,IAAlC2O,QAAQ,GAAA5M,KAAA,CAAR4M,QAAQ;MAAE9X,SAAS,GAAAkL,KAAA,CAATlL,SAAS;MAAEwV,UAAU,GAAAtK,KAAA,CAAVsK,UAAU;IAAAlX,eAAA,OAAAf,QAAA;IAC1C4L,MAAA,GAAA0O,OAAA,CAAA/a,IAAA;IAAQyB,0BAAA,CAAAoR,sBAAA,CAAAxG,MAAA,GAAAsO,UAAA;MAAAjZ,QAAA;MAAA9B,KAAA;IAAA;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAxG,MAAA,GAAAuO,WAAA;MAAAlZ,QAAA;MAAA9B,KAAA;IAAA;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAxG,MAAA,GAAAwO,UAAA;MAAAnZ,QAAA;MAAA9B,KAAA;IAAA;IACR4E,qBAAA,CAAAqO,sBAAA,CAAAxG,MAAA,GAAAwO,UAAA,EAAkBG,QAAQ;IAC1BxW,qBAAA,CAAAqO,sBAAA,CAAAxG,MAAA,GAAAsO,UAAA,EAAkBzX,SAAS;IAC3BsB,qBAAA,CAAAqO,sBAAA,CAAAxG,MAAA,GAAAuO,WAAA,EAAmBlC,UAAU;IAC7BrM,MAAA,CAAK3B,UAAU,GAAG,EAAE;IAAC,OAAA2B,MAAA;EACvB;EAAC3H,YAAA,CAAAjE,QAAA;IAAAkE,GAAA;IAAAkB,GAAA;IAMD;AACF;AACA;AACA;IACE,SAAAA,IAAA,EAAgB;MACd,OAAAV,qBAAA,CAAO,IAAI,EAAA0V,UAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA/U,GAAA,EAIA,SAAAA,IAAcyU,SAAS,EAAE;MACvB,MAAM,KAAIpV,qBAAA,KAAI,EAAAyV,WAAA,EAAa/d,SAAS,CAACsH,WAAW,EAAAgB,qBAAA,CAAC,IAAI,EAAAwV,UAAA,EAAY;IACnE;;IAEA;AACF;AACA;AACA;EAHE;IAAAhW,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAa;MACX,OAAO,IAAI,CAAC6E,UAAU,CAACnC,MAAM;IAC/B;;IAEA;AACF;AACA;AACA,OAHE;IAAAzC,GAAA,EAIA,SAAAA,IAAWoN,MAAM,EAAE;MACjB,MAAM,KAAI/N,qBAAA,KAAI,EAAAyV,WAAA,EAAa/d,SAAS,CAACsH,WAAW,EAAAgB,qBAAA,CAAC,IAAI,EAAAwV,UAAA,EAAY;IACnE;;IAEA;AACF;AACA;AACA;EAHE;IAAAhW,GAAA;IAAA/E,KAAA,EAIA,SAAA6a,OAAA,EAAS;MACP,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAM5c,MAAM,GAAG,CAAC,CAAC;MACjB,KAAK,IAAI0K,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkC,UAAU,CAACnC,MAAM,EAAEC,CAAC,EAAE,EAAE;QAC/C1K,MAAM,CAAC0K,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAACkC,UAAU,CAAClC,CAAC,CAAC;MACrC;MACA,OAAO,IAAI,CAACkS,UAAU;MACtB,OAAO5c,MAAM;IACf;EAAC;EAAA,OAAA2C,QAAA;AAAA,EA/D2BwY,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChQnB;AACoC;AACf;AACW;AACM;AACD;AAClB;AAErC,IAAMjH,mBAAmB,GAAGpR,0EAAsB;AAClD,IAAMqR,qBAAqB,GAAGtR,wEAAoB;AAClD,IAAMwa,iBAAiB,GAAGtJ,6EAAiB;AAE3C,IAAMO,eAAe,GAAGL,kEAAe;;AAEvC;AACA;AACA;AACA,SAASsJ,kBAAkBA,CAAA,EAAG;EAC5B,MAAM,IAAIJ,iEAAwB,CAAChJ,qBAAqB,CAAC5H,iBAAiB,CAAC;AAC7E;;AAEA;AACA;AACA;AACA,SAASiR,mBAAmBA,CAAA,EAAG;EAC7B,MAAM,IAAIL,iEAAwB,CAAChJ,qBAAqB,CAACsJ,kBAAkB,CAAC;AAC9E;;AAEA;AACA;AACA;AACA,SAASC,sBAAsBA,CAAA,EAAG;EAChC,MAAM,IAAIP,iEAAwB,CAAChJ,qBAAqB,CAACmE,aAAa,CAAC;AACzE;;AAEA;AACA;AACA;AACA,SAASqF,kCAAkCA,CAAA,EAAG;EAC5C,MAAM,IAAIR,iEAAwB,CAAChJ,qBAAqB,CAACwC,0BAA0B,CAAC;AACtF;;AAEA;AACA;AACA;AACA,SAASiH,oBAAoBA,CAAA,EAAG;EAC9B,MAAM,IAAIT,iEAAwB,CAAChJ,qBAAqB,CAAC4C,mBAAmB,CAAC;AAC/E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS8G,oBAAoBA,CACzB/b,KAAa,EACb6Y,YAAoB,EACpBE,gBAA0B,EAAE;EAC9B,OAAOH,yDAAgB,CACnB5Y,KAAK,EACL6Y,YAAY,EACZxG,qBAAqB,CAACmE,aAAa,EACnC6E,iEAAwB,EACxBtC,gBAAgB,CACnB;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASiD,mBAAmBA,CAAChc,KAAU,EAAEiZ,YAAoB,EAAE;EAC7D,OAAOD,wDAAe,CAClBhZ,KAAK,EACLiZ,YAAY,EACZ5G,qBAAqB,CAACoI,kBAAkB,EACxCY,iEAAwB,CAC3B;AACH;;AAEA;AACA;AACA;AAFA,IAAAY,SAAA,oBAAA3a,OAAA;AAAA,IAAAiY,UAAA,oBAAAjY,OAAA;AAAA,IAAA4a,kBAAA,oBAAA5a,OAAA;AAAA,IAAA6a,qBAAA,oBAAA7a,OAAA;AAAA,IAAA8a,OAAA,oBAAA9a,OAAA;AAAA,IAAA+a,MAAA,oBAAA/a,OAAA;AAAA,IAAAgb,KAAA,oBAAAhb,OAAA;AAAA,IAAAib,YAAA,oBAAAjb,OAAA;AAAA,IAAAkb,WAAA,oBAAAlb,OAAA;AAAA,IAAAmb,aAAA,oBAAAnb,OAAA;AAAA,IAAAob,SAAA,oBAAApb,OAAA;AAAA,IAAAqb,iBAAA,oBAAArb,OAAA;AAAA,IAAAsb,KAAA,oBAAAtb,OAAA;AAAA,IAAAub,iBAAA,oBAAAvb,OAAA;AAAA,IAAAwb,qBAAA,oBAAAxb,OAAA;AAAA,IAAAyb,aAAA,oBAAAzb,OAAA;AAAA,IAAA0b,eAAA,oBAAA1b,OAAA;AAAA,IAAA2b,aAAA,oBAAA3b,OAAA;AAAA,IAAA4b,kBAAA,oBAAA5b,OAAA;AAAA,IAAA6b,WAAA,oBAAA7b,OAAA;AAGO,IAAMoQ,GAAG,0BAAAwI,QAAA;EAAAtH,SAAA,CAAAlB,GAAA,EAAAwI,QAAA;EAAA,IAAArH,MAAA,GAAAC,YAAA,CAAApB,GAAA;EACd;AACF;AACA;AACA;EACE,SAAAA,IAAYzG,WAAoB,EAAE;IAAA,IAAAe,KAAA;IAAApK,eAAA,OAAA8P,GAAA;IAChC1F,KAAA,GAAA6G,MAAA,CAAAzS,IAAA;IAAQyB,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAAiQ,SAAA;MAAAna,QAAA;MAAA9B,KAAA,EAYE;IAAK;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAAuN,UAAA;MAAAzX,QAAA;MAAA9B,KAAA,EACJoS,mBAAmB,CAACgL;IAAY;IAAAvb,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAAkQ,kBAAA;MAAApa,QAAA;MAAA9B,KAAA,EACxB;IAAS;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAAmQ,qBAAA;MAAAra,QAAA;MAAA9B,KAAA,EACN;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAAoQ,OAAA;MAAAta,QAAA;MAAA9B,KAAA,EAChB;IAAQ;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAAqQ,MAAA;MAAAva,QAAA;MAAA9B,KAAA,EACT;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAAsQ,KAAA;MAAAxa,QAAA;MAAA9B,KAAA,EACH;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAAuQ,YAAA;MAAAza,QAAA;MAAA9B,KAAA,EACK;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAAwQ,WAAA;MAAA1a,QAAA;MAAA9B,KAAA,EACH;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAAyQ,aAAA;MAAA3a,QAAA;MAAA9B,KAAA,EACA;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAA0Q,SAAA;MAAA5a,QAAA;MAAA9B,KAAA,EACN;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAA2Q,iBAAA;MAAA7a,QAAA;MAAA9B,KAAA,EACM;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAA4Q,KAAA;MAAA9a,QAAA;MAAA9B,KAAA,EACd;IAAQ;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAA6Q,iBAAA;MAAA/a,QAAA;MAAA9B,KAAA,EACI;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAA8Q,qBAAA;MAAAhb,QAAA;MAAA9B,KAAA,EACE;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAA+Q,aAAA;MAAAjb,QAAA;MAAA9B,KAAA,EACV;IAAU;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAAgR,eAAA;MAAAlb,QAAA;MAAA9B,KAAA,EACR;IAAS;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAAiR,aAAA;MAAAnb,QAAA;MAAA9B,KAAA,EACX;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAAkR,kBAAA;MAAApb,QAAA;MAAA9B,KAAA,EACG;IAAqB;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAAmR,WAAA;MAAArb,QAAA;MAAA9B,KAAA,EAC5B;IAAE;IA7BdgM,KAAA,CAAKqR,kBAAkB,GAAG,IAAIC,oBAAoB,EAAE;IACpDtR,KAAA,CAAKqM,KAAK,GAAG,IAAIkF,iBAAiB,EAAE;IACpCvR,KAAA,CAAKwR,qBAAqB,GAAG,IAAIC,sBAAsB,EAAE;IACzDzR,KAAA,CAAK0R,iBAAiB,GAAG,IAAIC,kBAAkB,EAAE;IACjD3R,KAAA,CAAK4I,YAAY,GAAG,IAAIgJ,eAAe,EAAE;IACzC5R,KAAA,CAAK6R,UAAU,GAAG,IAAIC,aAAa,EAAE;IAErC,IAAI7S,WAAW,EAAEe,KAAA,CAAKhH,UAAU,EAAE;IAAC,OAAAgH,KAAA;EACrC;EAAClH,YAAA,CAAA4M,GAAA;IAAA3M,GAAA;IAAA/E,KAAA;IAuBD;AACF;AACA;IACE,SAAAgF,WAAA,EAAa;MAAA,IAAA+Y,qBAAA,EAAAC,WAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,kBAAA,EAAAC,gBAAA;MACXC,IAAA,CAAAC,eAAA,CAAA5M,GAAA,CAAAzU,SAAA,uBAAAmD,IAAA;MACA,CAAA2d,qBAAA,OAAI,CAACV,kBAAkB,cAAAU,qBAAA,uBAAvBA,qBAAA,CAAyB/Y,UAAU,EAAE;MACrC,CAAAgZ,WAAA,OAAI,CAAC3F,KAAK,cAAA2F,WAAA,uBAAVA,WAAA,CAAYhZ,UAAU,EAAE;MACxB,CAAAiZ,qBAAA,OAAI,CAACT,qBAAqB,cAAAS,qBAAA,uBAA1BA,qBAAA,CAA4BjZ,UAAU,EAAE;MACxC,CAAAkZ,sBAAA,OAAI,CAACR,iBAAiB,cAAAQ,sBAAA,uBAAtBA,sBAAA,CAAwBlZ,UAAU,EAAE;MACpC,CAAAmZ,kBAAA,OAAI,CAACvJ,YAAY,cAAAuJ,kBAAA,uBAAjBA,kBAAA,CAAmBnZ,UAAU,EAAE;MAC/B,CAAAoZ,gBAAA,OAAI,CAACP,UAAU,cAAAO,gBAAA,uBAAfA,gBAAA,CAAiBpZ,UAAU,EAAE;IAC/B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAD,GAAA;IAAAkB,GAAA,EAKA,SAAAA,IAAA,EAAe;MACb,OAAAV,qBAAA,CAAO,IAAI,EAAA0W,SAAA;IACb;;IAEA;AACF;AACA;AACA;AACA,OAJE;IAAA/V,GAAA,EAKA,SAAAA,IAAauM,QAAQ,EAAE;MACrBgJ,kBAAkB,EAAE;IACtB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA1W,GAAA;IAAAkB,GAAA,EAKA,SAAAA,IAAA,EAAgB;MACd,OAAAV,qBAAA,CAAO,IAAI,EAAAgU,UAAA;IACb;;IAEA;AACF;AACA;AACA;AACA,OAJE;IAAArT,GAAA,EAKA,SAAAA,IAAcyU,SAAS,EAAE;MACvBc,kBAAkB,EAAE;IACtB;;IAEA;AACF;AACA;AACA;EAHE;IAAA1W,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAwB;MACtB,OAAAV,qBAAA,CAAO,IAAI,EAAA2W,kBAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAAhW,GAAA,EAIA,SAAAA,IAAsBiS,iBAAiB,EAAE;MACvC,IAAI4D,oBAAoB,CAAC5D,iBAAiB,EAAE3F,eAAe,CAAC+L,UAAU,CAAC,EAAE;QACvE3Z,qBAAA,KAAI,EAAAsX,kBAAA,EAAsB/D,iBAAiB;MAC7C;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAApT,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAA2B;MACzB,OAAAV,qBAAA,CAAO,IAAI,EAAA4W,qBAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAAjW,GAAA,EAIA,SAAAA,IAAyB+R,oBAAoB,EAAE;MAC7C,CAAC,IAAI,CAAChN,WAAW,GAAArG,qBAAA,CACf,IAAI,EAAAuX,qBAAA,EAAyBlE,oBAAoB,IACjDwD,kBAAkB,EAAE;IACxB;;IAEA;AACF;AACA;AACA;EAHE;IAAA1W,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAa;MACX,OAAAV,qBAAA,CAAO,IAAI,EAAA6W,OAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAAlW,GAAA,EAIA,SAAAA,IAAW8R,MAAM,EAAE;MACjB,CAAC,IAAI,CAAC/M,WAAW,GAAArG,qBAAA,CAAG,IAAI,EAAAwX,OAAA,EAAWpE,MAAM,IAAGyD,kBAAkB,EAAE;IAClE;;IAEA;AACF;AACA;AACA;EAHE;IAAA1W,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAY;MACV,OAAAV,qBAAA,CAAO,IAAI,EAAA8W,MAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAAnW,GAAA,EAIA,SAAAA,IAAUsY,KAAK,EAAE;MACf,CAAC,IAAI,CAACvT,WAAW,GAAArG,qBAAA,CAAG,IAAI,EAAAyX,MAAA,EAAUmC,KAAK,IAAG/C,kBAAkB,EAAE;IAChE;;IAEA;AACF;AACA;AACA;EAHE;IAAA1W,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAW;MACT,OAAQ,CAAC,IAAI,CAAC6U,UAAU,GAAIY,mBAAmB,EAAE,GAAAnW,qBAAA,CAAG,IAAI,EAAA+W,KAAA,CAAM;IAChE;;IAEA;AACF;AACA;AACA,OAHE;IAAApW,GAAA,EAIA,SAAAA,IAASuY,IAAI,EAAE;MACb,IAAI1C,oBAAoB,CAAC0C,IAAI,EAAEjM,eAAe,CAACkM,OAAO,EAAE,IAAI,CAAC,EAAE;QAC7D9Z,qBAAA,KAAI,EAAA0X,KAAA,EAASmC,IAAI;MACnB;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAA1Z,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAkB;MAChB,OAAAV,qBAAA,CAAO,IAAI,EAAAgX,YAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAArW,GAAA,EAIA,SAAAA,IAAgByY,WAAW,EAAE;MAC3B,CAAC,IAAI,CAAC1T,WAAW,GAAArG,qBAAA,CAAG,IAAI,EAAA2X,YAAA,EAAgBoC,WAAW,IAAGlD,kBAAkB,EAAE;IAC5E;;IAEA;AACF;AACA;AACA;EAHE;IAAA1W,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAiB;MACf,OAAAV,qBAAA,CAAO,IAAI,EAAAiX,WAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAAtW,GAAA,EAIA,SAAAA,IAAe0Y,UAAU,EAAE;MACzB,CAAC,IAAI,CAAC3T,WAAW,GAAArG,qBAAA,CAAG,IAAI,EAAA4X,WAAA,EAAeoC,UAAU,IAAGnD,kBAAkB,EAAE;IAC1E;;IAEA;AACF;AACA;AACA;EAHE;IAAA1W,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAmB;MACjB,OAAAV,qBAAA,CAAO,IAAI,EAAAkX,aAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAAvW,GAAA,EAIA,SAAAA,IAAiB2Y,YAAY,EAAE;MAC7B,CAAC,IAAI,CAAC5T,WAAW,GAAArG,qBAAA,CACf,IAAI,EAAA6X,aAAA,EAAiBoC,YAAY,IACjCpD,kBAAkB,EAAE;IACxB;;IAEA;AACF;AACA;AACA;EAHE;IAAA1W,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAe;MACb,OAAAV,qBAAA,CAAO,IAAI,EAAAmX,SAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAAxW,GAAA,EAIA,SAAAA,IAAa4Y,QAAQ,EAAE;MACrB,IAAI/C,oBAAoB,CAAC+C,QAAQ,EAAEtM,eAAe,CAACuM,aAAa,CAAC,EAAE;QACjEna,qBAAA,KAAI,EAAA8X,SAAA,EAAaoC,QAAQ;MAC3B;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAA/Z,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAuB;MACrB,OAAAV,qBAAA,CAAO,IAAI,EAAAoX,iBAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAAzW,GAAA,EAIA,SAAAA,IAAqB8Y,gBAAgB,EAAE;MACrC,CAAC,IAAI,CAAC/T,WAAW,GAAArG,qBAAA,CACf,IAAI,EAAA+X,iBAAA,EAAqBqC,gBAAgB,IACzCvD,kBAAkB,EAAE;IACxB;;IAEA;AACF;AACA;AACA;EAHE;IAAA1W,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAW;MACT,OAAAV,qBAAA,CAAO,IAAI,EAAAqX,KAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA1W,GAAA,EAIA,SAAAA,IAAS6R,IAAI,EAAE;MACb,CAAC,IAAI,CAAC9M,WAAW,GAAArG,qBAAA,CAAG,IAAI,EAAAgY,KAAA,EAAS7E,IAAI,IAAG0D,kBAAkB,EAAE;IAC9D;;IAEA;AACF;AACA;AACA;EAHE;IAAA1W,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAuB;MACrB,OAAAV,qBAAA,CAAO,IAAI,EAAAsX,iBAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA3W,GAAA,EAIA,SAAAA,IAAqBgS,gBAAgB,EAAE;MACrC,IAAI6D,oBAAoB,CAAC7D,gBAAgB,EAAE1F,eAAe,CAACkI,UAAU,CAAC,IACpEsB,mBAAmB,CAAC9D,gBAAgB,EAAE1F,eAAe,CAACyM,cAAc,CAAC,EAAE;QACvEra,qBAAA,KAAI,EAAAiY,iBAAA,EAAqB3E,gBAAgB;MAC3C;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAnT,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAA2B;MACzB,OAAAV,qBAAA,CAAO,IAAI,EAAAuX,qBAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA5W,GAAA,EAIA,SAAAA,IAAyBkS,oBAAoB,EAAE;MAC7C,CAAC,IAAI,CAACnN,WAAW,GAAArG,qBAAA,CACf,IAAI,EAAAkY,qBAAA,EAAyB1E,oBAAoB,IACjDqD,kBAAkB,EAAE;IACxB;;IAEA;AACF;AACA;AACA;EAHE;IAAA1W,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAmB;MACjB,OAAQ,CAAC,IAAI,CAAC6U,UAAU,GAAIY,mBAAmB,EAAE,GAAAnW,qBAAA,CAAG,IAAI,EAAAwX,aAAA,CAAc;IACxE;;IAEA;AACF;AACA;AACA,OAHE;IAAA7W,GAAA,EAIA,SAAAA,IAAiBgZ,YAAY,EAAE;MAC7B,IAAInD,oBAAoB,CAACmD,YAAY,EAAE1M,eAAe,CAAC2M,WAAW,CAAC,EAAE;QACnEva,qBAAA,KAAI,EAAAmY,aAAA,EAAiBmC,YAAY;MACnC;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAna,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAqB;MACnB,OAAAV,qBAAA,CAAO,IAAI,EAAAyX,eAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA9W,GAAA,EAIA,SAAAA,IAAmBqS,cAAc,EAAE;MACjC,IAAIwD,oBAAoB,CAACxD,cAAc,EAAE/F,eAAe,CAAC4M,UAAU,CAAC,EAAE;QACpExa,qBAAA,KAAI,EAAAoY,eAAA,EAAmBzE,cAAc;MACvC;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAxT,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAmB;MACjB,OAAAV,qBAAA,CAAO,IAAI,EAAA0X,aAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA/W,GAAA,EAIA,SAAAA,IAAiBmZ,YAAY,EAAE;MAC7B,IAAItD,oBAAoB,CAACsD,YAAY,EAAE7M,eAAe,CAAC8M,cAAc,EACjE,IAAI,CAAC,EAAE;QACT1a,qBAAA,KAAI,EAAAqY,aAAA,EAAiBoC,YAAY;MACnC;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAta,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAwB;MACtB,OAAAV,qBAAA,CAAO,IAAI,EAAA2X,kBAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAAhX,GAAA,EAIA,SAAAA,IAAsBqZ,iBAAiB,EAAE;MACvC,CAAC,IAAI,CAACtU,WAAW,GAAArG,qBAAA,CACf,IAAI,EAAAsY,kBAAA,EAAsBqC,iBAAiB,IAC3C9D,kBAAkB,EAAE;IACxB;;IAEA;AACF;AACA;AACA;EAHE;IAAA1W,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAiB;MACf,OAAAV,qBAAA,CAAO,IAAI,EAAA4X,WAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAAjX,GAAA,EAIA,SAAAA,IAAesR,UAAU,EAAE;MACzB,CAAC,IAAI,CAACvM,WAAW,GAAArG,qBAAA,CAAG,IAAI,EAAAuY,WAAA,EAAe3F,UAAU,IAAGiE,kBAAkB,EAAE;IAC1E;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA1W,GAAA;IAAA/E,KAAA,EAKA,SAAAyX,oBAAA,EAAsB;MACpB,IAAI+H,WAAW,GAAAja,qBAAA,CAAG,IAAI,EAAAwX,aAAA,CAAc;MACpC,IAAM0C,SAAS,GAAG,IAAI,CAACC,UAAU;MAEjC,IAAI,OAAOD,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAK,IAAI,EAAE;QAC1D,IAAME,OAAO,GAAG,IAAIjiB,IAAI,EAAE,CAAC4b,OAAO,EAAE,GAAGmG,SAAS;QAChDD,WAAW,GAAGlE,+DAA4B,CAACqE,OAAO,GAAG,IAAI,CAAC;MAC5D;MAEA,OAAOrE,uDAAoB,CAAA/V,qBAAA,CACvB,IAAI,EAAA4X,WAAA,GACJqC,WAAW,EACXhN,eAAe,CAAC2M,WAAW,CAC9B;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EA9BE;IAAApa,GAAA;IAAA/E,KAAA,EA+BA,SAAA6a,OAAA,EAAS;MACP,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAM5c,MAAM,GAAG;QACb,uBAAuB,EAAE,IAAI,CAACsf,qBAAqB;QACnD,mBAAmB,EAAE,IAAI,CAACE,iBAAiB;QAC3C,mBAAmB,EAAE,IAAI,CAACvF,iBAAiB;QAC3C,sBAAsB,EAAE,IAAI,CAACF,oBAAoB;QACjD,QAAQ,EAAE,IAAI,CAACD,MAAM;QACrB,OAAO,EAAE,IAAI,CAACwG,KAAK;QACnB,MAAM,EAAE,IAAI,CAACC,IAAI;QACjB,cAAc,EAAE,IAAI,CAAC7J,YAAY;QACjC,aAAa,EAAE,IAAI,CAAC+J,WAAW;QAC/B,YAAY,EAAE,IAAI,CAACC,UAAU;QAC7B,cAAc,EAAE,IAAI,CAACC,YAAY;QACjC,oBAAoB,EAAE,IAAI,CAACxB,kBAAkB;QAC7C,UAAU,EAAE,IAAI,CAACyB,QAAQ;QACzB,kBAAkB,EAAE,IAAI,CAACE,gBAAgB;QACzC,MAAM,EAAE,IAAI,CAACjH,IAAI;QACjB,YAAY,EAAE,IAAI,CAAC8F,UAAU;QAC7B,kBAAkB,EAAE,IAAI,CAAC3F,gBAAgB;QACzC,sBAAsB,EAAE,IAAI,CAACE,oBAAoB;QACjD,OAAO,EAAE,IAAI,CAACC,KAAK;QACnB,cAAc,EAAE,IAAI,CAAC6G,YAAY;QACjC,gBAAgB,EAAE,IAAI,CAAC3G,cAAc;QACrC,cAAc,EAAE,IAAI,CAAC8G,YAAY;QACjC,mBAAmB,EAAE,IAAI,CAACE;MAC5B,CAAC;MACD,OAAO,IAAI,CAACzE,UAAU;MACtB,OAAO5c,MAAM;IACf;EAAC;EAAA,OAAAwT,GAAA;AAAA,EAnesB2H,4CAAO;;AAsehC;AACA;AACA;AAFA,IAAA4B,UAAA,oBAAA3Z,OAAA;AAAA,IAAAwe,YAAA,oBAAAxe,OAAA;AAAA,IAAAye,SAAA,oBAAAze,OAAA;AAAA,IAAA0e,eAAA,oBAAA1e,OAAA;AAAA,IAAA2e,iBAAA,oBAAA3e,OAAA;AAAA,IAGMgc,oBAAoB,0BAAApC,SAAA;EAAAtI,SAAA,CAAA0K,oBAAA,EAAApC,SAAA;EAAA,IAAAC,OAAA,GAAArI,YAAA,CAAAwK,oBAAA;EAOxB;AACF;AACA;EACE,SAAAA,qBAAA,EAAc;IAAA,IAAA7Q,MAAA;IAAA7K,eAAA,OAAA0b,oBAAA;IACZ7Q,MAAA,GAAA0O,OAAA,CAAA/a,IAAA;IAAQyB,0BAAA,CAAAoR,sBAAA,CAAAxG,MAAA,GAAAwO,UAAA;MAAAnZ,QAAA;MAAA9B,KAAA,EAVGoS,mBAAmB,CAAC8N;IAA2B;IAAAre,0BAAA,CAAAoR,sBAAA,CAAAxG,MAAA,GAAAqT,YAAA;MAAAhe,QAAA;MAAA9B,KAAA,EAC7C;IAAG;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAxG,MAAA,GAAAsT,SAAA;MAAAje,QAAA;MAAA9B,KAAA,EACN;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAxG,MAAA,GAAAuT,eAAA;MAAAle,QAAA;MAAA9B,KAAA,EACI;IAAG;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAxG,MAAA,GAAAwT,iBAAA;MAAAne,QAAA;MAAA9B,KAAA,EACD;IAAG;IAAA,OAAAyM,MAAA;EAOvB;;EAEA;AACF;AACA;AACA;AACA;EAJE3H,YAAA,CAAAwY,oBAAA;IAAAvY,GAAA;IAAAkB,GAAA,EAKA,SAAAA,IAAA,EAAgB;MACd,OAAAV,qBAAA,CAAO,IAAI,EAAA0V,UAAA;IACb;;IAEA;AACF;AACA;AACA;AACA,OAJE;IAAA/U,GAAA,EAKA,SAAAA,IAAcyU,SAAS,EAAE;MACvBc,kBAAkB,EAAE;IACtB;;IAEA;AACF;AACA;AACA;EAHE;IAAA1W,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAkB;MAChB,OAAAV,qBAAA,CAAO,IAAI,EAAAua,YAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA5Z,GAAA,EAIA,SAAAA,IAAgBia,WAAW,EAAE;MAC3B,IAAIpE,oBAAoB,CAACoE,WAAW,EAAE3N,eAAe,CAACkI,UAAU,CAAC,IAC/DsB,mBAAmB,CAACmE,WAAW,EAAE3N,eAAe,CAAC4N,WAAW,CAAC,EAAE;QAC/Dxb,qBAAA,KAAI,EAAAkb,YAAA,EAAgBK,WAAW;MACjC;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAApb,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAe;MACb,OAAAV,qBAAA,CAAO,IAAI,EAAAwa,SAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA7Z,GAAA,EAIA,SAAAA,IAAama,QAAQ,EAAE;MACrB,IAAItE,oBAAoB,CAACsE,QAAQ,EAAE7N,eAAe,CAAC8N,OAAO,CAAC,EAAE;QAC3D1b,qBAAA,KAAI,EAAAmb,SAAA,EAAaM,QAAQ;MAC3B;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAtb,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAqB;MACnB,OAAAV,qBAAA,CAAO,IAAI,EAAAya,eAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA9Z,GAAA,EAIA,SAAAA,IAAmBqa,cAAc,EAAE;MACjC,IAAIxE,oBAAoB,CAACwE,cAAc,EAAE/N,eAAe,CAACkI,UAAU,CAAC,IAClEsB,mBAAmB,CAACuE,cAAc,EAAE/N,eAAe,CAACgO,WAAW,CAAC,EAAE;QAClE5b,qBAAA,KAAI,EAAAob,eAAA,EAAmBO,cAAc;MACvC;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAxb,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAuB;MACrB,OAAAV,qBAAA,CAAO,IAAI,EAAA0a,iBAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA/Z,GAAA,EAIA,SAAAA,IAAqBua,gBAAgB,EAAE;MACrC,IAAI1E,oBAAoB,CAAC0E,gBAAgB,EAAEjO,eAAe,CAACkO,WAAW,CAAC,IACrE1E,mBAAmB,CAACyE,gBAAgB,EAAEjO,eAAe,CAACmO,UAAU,CAAC,EAAE;QACnE/b,qBAAA,KAAI,EAAAqb,iBAAA,EAAqBQ,gBAAgB;MAC3C;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAXE;IAAA1b,GAAA;IAAA/E,KAAA,EAYA,SAAA6a,OAAA,EAAS;MACP,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAM5c,MAAM,GAAG;QACb,aAAa,EAAE,IAAI,CAACiiB,WAAW;QAC/B,UAAU,EAAE,IAAI,CAACE,QAAQ;QACzB,gBAAgB,EAAE,IAAI,CAACE,cAAc;QACrC,kBAAkB,EAAE,IAAI,CAACE;MAC3B,CAAC;MACD,OAAO,IAAI,CAAC3F,UAAU;MACtB,OAAO5c,MAAM;IACf;EAAC;EAAA,OAAAof,oBAAA;AAAA,EAjIgCjE,4CAAO;AAoI1C;AACA;AACA;AAFA,IAGMuE,eAAe,0BAAAgD,SAAA;EAAAhO,SAAA,CAAAgL,eAAA,EAAAgD,SAAA;EAAA,IAAAC,OAAA,GAAA/N,YAAA,CAAA8K,eAAA;EACnB;AACF;AACA;EACE,SAAAA,gBAAA,EAAc;IAAAhc,eAAA,OAAAgc,eAAA;IAAA,OAAAiD,OAAA,CAAAzgB,IAAA,OACN;MACJgb,QAAQ,EAAEhJ,mBAAmB,CAAC0O,qBAAqB;MACnDxd,SAAS,EAAE+O,qBAAqB,CAAC5H,iBAAiB;MAClDqO,UAAU,EAAEuC,iEAAwBA;IACtC,CAAC;EACH;EAAC,OAAAvW,YAAA,CAAA8Y,eAAA;AAAA,EAV2B/c,6CAAQ;AAatC;AACA;AACA;AAFA,IAGMid,aAAa,0BAAAiD,UAAA;EAAAnO,SAAA,CAAAkL,aAAA,EAAAiD,UAAA;EAAA,IAAAC,OAAA,GAAAlO,YAAA,CAAAgL,aAAA;EACjB;AACF;AACA;EACE,SAAAA,cAAA,EAAc;IAAAlc,eAAA,OAAAkc,aAAA;IAAA,OAAAkD,OAAA,CAAA5gB,IAAA,OACN;MACJgb,QAAQ,EAAEhJ,mBAAmB,CAAC6O,mBAAmB;MACjD3d,SAAS,EAAE+O,qBAAqB,CAAC5H,iBAAiB;MAClDqO,UAAU,EAAEuC,iEAAwBA;IACtC,CAAC;EACH;EAAC,OAAAvW,YAAA,CAAAgZ,aAAA;AAAA,EAVyBjd,6CAAQ;AAapC;AACA;AACA;AAFA,IAGM8c,kBAAkB,0BAAAuD,UAAA;EAAAtO,SAAA,CAAA+K,kBAAA,EAAAuD,UAAA;EAAA,IAAAC,OAAA,GAAArO,YAAA,CAAA6K,kBAAA;EACtB;AACF;AACA;EACE,SAAAA,mBAAA,EAAc;IAAA/b,eAAA,OAAA+b,kBAAA;IAAA,OAAAwD,OAAA,CAAA/gB,IAAA,OACN;MACJgb,QAAQ,EAAEhJ,mBAAmB,CAACgP,iBAAiB;MAC/C9d,SAAS,EAAE+O,qBAAqB,CAAC5H,iBAAiB;MAClDqO,UAAU,EAAEuC,iEAAwBA;IACtC,CAAC;EACH;EAAC,OAAAvW,YAAA,CAAA6Y,kBAAA;AAAA,EAV8B9c,6CAAQ;AAazC;AACA;AACA;AAFA,IAGM4c,sBAAsB,0BAAA4D,UAAA;EAAAzO,SAAA,CAAA6K,sBAAA,EAAA4D,UAAA;EAAA,IAAAC,OAAA,GAAAxO,YAAA,CAAA2K,sBAAA;EAC1B;AACF;AACA;EACE,SAAAA,uBAAA,EAAc;IAAA7b,eAAA,OAAA6b,sBAAA;IAAA,OAAA6D,OAAA,CAAAlhB,IAAA,OACN;MACJgb,QAAQ,EAAEhJ,mBAAmB,CAACgP,iBAAiB;MAC/C9d,SAAS,EAAE+O,qBAAqB,CAAC5H,iBAAiB;MAClDqO,UAAU,EAAEuC,iEAAwBA;IACtC,CAAC;EACH;EAAC,OAAAvW,YAAA,CAAA2Y,sBAAA;AAAA,EAVkC5c,6CAAQ;AAa7C;AACA;AACA;AAFA,IAAA0gB,GAAA,oBAAAjgB,OAAA;AAAA,IAAAkgB,KAAA,oBAAAlgB,OAAA;AAAA,IAAAmgB,UAAA,oBAAAngB,OAAA;AAAA,IAAAogB,UAAA,oBAAApgB,OAAA;AAAA,IAAAqgB,iBAAA,oBAAArgB,OAAA;AAAA,IAAAsgB,OAAA,oBAAAtgB,OAAA;AAAA,IAAAugB,QAAA,oBAAAvgB,OAAA;AAAA,IAAAwgB,YAAA,oBAAAxgB,OAAA;AAGO,IAAMuQ,qBAAqB,0BAAAkQ,SAAA;EAAAnP,SAAA,CAAAf,qBAAA,EAAAkQ,SAAA;EAAA,IAAAC,OAAA,GAAAlP,YAAA,CAAAjB,qBAAA;EAUhC;AACF;AACA;EACE,SAAAA,sBAAA,EAAc;IAAA,IAAArE,MAAA;IAAA5L,eAAA,OAAAiQ,qBAAA;IACZrE,MAAA,GAAAwU,OAAA,CAAA5hB,IAAA;IAAQyB,0BAAA,CAAAoR,sBAAA,CAAAzF,MAAA,GAAA+T,GAAA;MAAAzf,QAAA;MAAA9B,KAAA,EAbJ;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAzF,MAAA,GAAAgU,KAAA;MAAA1f,QAAA;MAAA9B,KAAA,EACA;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAzF,MAAA,GAAAiU,UAAA;MAAA3f,QAAA;MAAA9B,KAAA,EACG;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAzF,MAAA,GAAAkU,UAAA;MAAA5f,QAAA;MAAA9B,KAAA,EACF;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAzF,MAAA,GAAAmU,iBAAA;MAAA7f,QAAA;MAAA9B,KAAA,EACK;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAzF,MAAA,GAAAoU,OAAA;MAAA9f,QAAA;MAAA9B,KAAA,EACZ;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAzF,MAAA,GAAAqU,QAAA;MAAA/f,QAAA;MAAA9B,KAAA,EACD;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAzF,MAAA,GAAAsU,YAAA;MAAAhgB,QAAA;MAAA9B,KAAA,EACE;IAAE;IAQfwN,MAAA,CAAKqQ,UAAU,GAAG,IAAIhd,6CAAQ,CAAC;MAC7ByC,SAAS,EAAE+O,qBAAqB,CAAC5H,iBAAiB;MAClDqO,UAAU,EAAEuC,iEAAwB;MACpCD,QAAQ,EAAEhJ,mBAAmB,CAAC6O;IAChC,CAAC,CAAC;IACFzT,MAAA,CAAK8E,iBAAiB,GAAG,IAAIzR,6CAAQ,CAAC;MACpCyC,SAAS,EAAE+O,qBAAqB,CAAC5H,iBAAiB;MAClDqO,UAAU,EAAEuC,iEAAwB;MACpCD,QAAQ,EAAEhJ,mBAAmB,CAAC6P;IAChC,CAAC,CAAC;IAAC,OAAAzU,MAAA;EACL;;EAEA;AACF;AACA;EAFE1I,YAAA,CAAA+M,qBAAA;IAAA9M,GAAA;IAAA/E,KAAA,EAGA,SAAAgF,WAAA,EAAa;MAAA,IAAAkd,iBAAA,EAAAC,qBAAA;MACX9D,IAAA,CAAAC,eAAA,CAAAzM,qBAAA,CAAA5U,SAAA,uBAAAmD,IAAA;MACA,CAAA8hB,iBAAA,OAAI,CAACrE,UAAU,cAAAqE,iBAAA,uBAAfA,iBAAA,CAAiBld,UAAU,EAAE;MAC7B,CAAAmd,qBAAA,OAAI,CAAC7P,iBAAiB,cAAA6P,qBAAA,uBAAtBA,qBAAA,CAAwBnd,UAAU,EAAE;IACtC;;IAEA;AACF;AACA;AACA;EAHE;IAAAD,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAS;MACP,OAAAV,qBAAA,CAAO,IAAI,EAAAgc,GAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAArb,GAAA,EAIA,SAAAA,IAAOkc,EAAE,EAAE;MACT,IAAIrG,oBAAoB,CAACqG,EAAE,EAAE5P,eAAe,CAAC6P,iBAAiB,CAAC,EAAE;QAC/Dzd,qBAAA,KAAI,EAAA2c,GAAA,EAAOa,EAAE;MACf;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAArd,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAW;MACT,OAAAV,qBAAA,CAAO,IAAI,EAAAic,KAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAAtb,GAAA,EAIA,SAAAA,IAASjG,IAAI,EAAE;MACb,IAAI,IAAI,CAACgL,WAAW,IAAI1F,qBAAA,KAAI,EAAAgc,GAAA,MAAS,EAAE,EAAE;QACvC1F,kCAAkC,EAAE;MACtC,CAAC,MAAM;QACL,IAAIE,oBAAoB,CAAC9b,IAAI,EAAEuS,eAAe,CAAC8P,OAAO,CAAC,EAAE;UACvD1d,qBAAA,KAAI,EAAA4c,KAAA,EAASvhB,IAAI;QACnB;MACF;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAA8E,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAgB;MACd,OAAAV,qBAAA,CAAO,IAAI,EAAAkc,UAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAAvb,GAAA,EAIA,SAAAA,IAAcqc,SAAS,EAAE;MACvB,IAAI,IAAI,CAACtX,WAAW,IAAI1F,qBAAA,KAAI,EAAAgc,GAAA,MAAS,EAAE,EAAE;QACvC1F,kCAAkC,EAAE;MACtC,CAAC,MAAM;QACL,IAAIE,oBAAoB,CAACwG,SAAS,EAAE/P,eAAe,CAACgQ,OAAO,CAAC,EAAE;UAC5D5d,qBAAA,KAAI,EAAA6c,UAAA,EAAcc,SAAS;QAC7B;MACF;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAxd,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAgB;MACd,OAAAV,qBAAA,CAAO,IAAI,EAAAmc,UAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAAxb,GAAA,EAIA,SAAAA,IAAcuc,SAAS,EAAE;MACvB,IAAI,IAAI,CAACxX,WAAW,IAAI1F,qBAAA,KAAI,EAAAgc,GAAA,MAAS,EAAE,EAAE;QACvC1F,kCAAkC,EAAE;MACtC,CAAC,MAAM;QACL,IAAIE,oBAAoB,CAAC0G,SAAS,EAAEjQ,eAAe,CAACkI,UAAU,CAAC,EAAE;UAC/D9V,qBAAA,KAAI,EAAA8c,UAAA,EAAce,SAAS;QAC7B;MACF;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAA1d,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAuB;MACrB,OAAAV,qBAAA,CAAO,IAAI,EAAAoc,iBAAA;IACb;;IAEA;AACF;AACA;AACA;AACA,OAJE;IAAAzb,GAAA,EAKA,SAAAA,IAAqBwc,gBAAgB,EAAE;MACrC,IAAI,IAAI,CAACzX,WAAW,KAAK1F,qBAAA,KAAI,EAAAic,KAAA,MAAW,EAAE,IAAIjc,qBAAA,KAAI,EAAAgc,GAAA,MAAS,EAAE,CAAC,EAAE;QAC9D1F,kCAAkC,EAAE;MACtC,CAAC,MAAM;QACL,IAAI1G,KAAK,GAAG,EAAE;QACd,IAAMJ,aAAa,GAAGwG,iBAAiB,CAAC,IAAI,CAACtb,IAAI,CAAC;QAClD,IAAI8U,aAAa,EAAE;UACjB,IAAIA,aAAa,aAAbA,aAAa,eAAbA,aAAa,CAAEK,SAAS,EAAE;YAC5BD,KAAK,GAAGuN,gBAAgB,CAACzY,KAAK,CAAC8K,aAAa,CAACK,SAAS,CAAC;UACzD,CAAC,MAAM;YACLD,KAAK,CAAC,CAAC,CAAC,GAAGuN,gBAAgB;UAC7B;UAEA,IAAKvN,KAAK,CAACxM,MAAM,GAAG,CAAC,IAAMwM,KAAK,CAACxM,MAAM,IAAIoM,aAAa,CAACzX,GAAI,EAAE;YAC7D,IAAM2Y,WAAW,GAAG,IAAIC,MAAM,CAACnB,aAAa,CAACoB,MAAM,CAAC;YACpD,KAAK,IAAIvN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuM,KAAK,CAACxM,MAAM,EAAEC,CAAC,EAAE,EAAE;cACrC,IAAImM,aAAa,aAAbA,aAAa,eAAbA,aAAa,CAAEsB,UAAU,EAAE;gBAC7B,IAAMC,MAAM,GAAGnB,KAAK,CAACvM,CAAC,CAAC,CAACqB,KAAK,CAAC8K,aAAa,CAACsB,UAAU,CAAC;gBACvD,IAAIC,MAAM,CAAC3N,MAAM,KAAK,CAAC,EAAE;kBACvB,IAAI,CAAC2N,MAAM,CAAC,CAAC,CAAC,CAACpN,KAAK,CAAC+M,WAAW,CAAC,EAAE;oBACjC2F,sBAAsB,EAAE;kBAC1B,CAAC,MAAM;oBACL,IAAI,CAACtF,MAAM,CAAC,CAAC,CAAC,CAACpN,KAAK,CAAC,IAAIgN,MAAM,CAACnB,aAAa,CAAC0B,OAAO,CAAC,CAAC,EAAE;sBACvDmF,sBAAsB,EAAE;oBAC1B;kBACF;gBACF,CAAC,MAAM;kBACLA,sBAAsB,EAAE;gBAC1B;cACF,CAAC,MAAM;gBACL,IAAI,CAACzG,KAAK,CAACvM,CAAC,CAAC,CAACM,KAAK,CAAC+M,WAAW,CAAC,EAAE;kBAChC2F,sBAAsB,EAAE;gBAC1B,CAAC,MAAM;kBACL,IAAIzG,KAAK,CAACvM,CAAC,CAAC,KAAK,EAAE,IAAImM,aAAa,CAAC2B,MAAM,EAAE;oBAC3C,KAAK,IAAI5N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,CAAC,EAAEE,CAAC,EAAE,EAAE;sBAC1B,IAAIqM,KAAK,CAACvM,CAAC,CAAC,KAAKuM,KAAK,CAACrM,CAAC,CAAC,EAAE;wBACzB8S,sBAAsB,EAAE;sBAC1B;oBACF;kBACF;gBACF;cACF;YACF;UACF,CAAC,MAAM;YACLE,oBAAoB,EAAE;UACxB;UAEAlX,qBAAA,KAAI,EAAA+c,iBAAA,EAAqBe,gBAAgB;QAC3C,CAAC,MAAM;UACL9G,sBAAsB,EAAE;QAC1B;MACF;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAA7W,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAa;MACX,OAAAV,qBAAA,CAAO,IAAI,EAAAqc,OAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA1b,GAAA,EAIA,SAAAA,IAAWhI,MAAM,EAAE;MACjB,IAAI6d,oBAAoB,CAAC7d,MAAM,EAAEsU,eAAe,CAACmQ,SAAS,CAAC,EAAE;QAC3D/d,qBAAA,KAAI,EAAAgd,OAAA,EAAW1jB,MAAM;MACvB;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAA6G,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAc;MACZ,OAAAV,qBAAA,CAAO,IAAI,EAAAsc,QAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA3b,GAAA,EAIA,SAAAA,IAAY0c,OAAO,EAAE;MACnB,IAAI,IAAI,CAAC3X,WAAW,IAAI1F,qBAAA,KAAI,EAAAgc,GAAA,MAAS,EAAE,EAAE;QACvC1F,kCAAkC,EAAE;MACtC,CAAC,MAAM;QACL,IAAIE,oBAAoB,CAAC6G,OAAO,EAAEpQ,eAAe,CAAC2M,WAAW,CAAC,EAAE;UAC9Dva,qBAAA,KAAI,EAAAid,QAAA,EAAYe,OAAO;QACzB;MACF;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAA7d,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAkB;MAChB,OAAAV,qBAAA,CAAO,IAAI,EAAAuc,YAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA5b,GAAA,EAIA,SAAAA,IAAgB2c,WAAW,EAAE;MAC3B,IAAI,IAAI,CAAC5X,WAAW,IAAI1F,qBAAA,KAAI,EAAAgc,GAAA,MAAS,EAAE,EAAE;QACvC1F,kCAAkC,EAAE;MACtC,CAAC,MAAM;QACL,IAAIE,oBAAoB,CAAC8G,WAAW,EAAErQ,eAAe,CAACsQ,gBAAgB,EAClE,IAAI,CAAC,EAAE;UACTle,qBAAA,KAAI,EAAAkd,YAAA,EAAgBe,WAAW;QACjC;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAjBE;IAAA9d,GAAA;IAAA/E,KAAA,EAkBA,SAAA6a,OAAA,EAAS;MACP,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAM5c,MAAM,GAAG;QACb,IAAI,EAAE,IAAI,CAACkkB,EAAE;QACb,MAAM,EAAE,IAAI,CAACniB,IAAI;QACjB,YAAY,EAAE,IAAI,CAAC4d,UAAU;QAC7B,WAAW,EAAE,IAAI,CAAC0E,SAAS;QAC3B,WAAW,EAAE,IAAI,CAACE,SAAS;QAC3B,kBAAkB,EAAE,IAAI,CAACC,gBAAgB;QACzC,QAAQ,EAAE,IAAI,CAACxkB,MAAM;QACrB,SAAS,EAAE,IAAI,CAAC0kB,OAAO;QACvB,aAAa,EAAE,IAAI,CAACC,WAAW;QAC/B,mBAAmB,EAAE,IAAI,CAACvQ;MAC5B,CAAC;MACD,OAAO,IAAI,CAACwI,UAAU;MACtB,OAAO5c,MAAM;IACf;EAAC;EAAA,OAAA2T,qBAAA;AAAA,EA7RwCwH,4CAAO;;AAgSlD;AACA;AACA;AAFA,IAAA0J,IAAA,oBAAAzhB,OAAA;AAAA,IAAA0hB,gBAAA,oBAAA1hB,OAAA;AAAA,IAAA2hB,mBAAA,oBAAA3hB,OAAA;AAAA,IAAA4hB,kBAAA,oBAAA5hB,OAAA;AAAA,IAAA6hB,aAAA,oBAAA7hB,OAAA;AAGO,IAAMyQ,mBAAmB,0BAAAqR,SAAA;EAAAxQ,SAAA,CAAAb,mBAAA,EAAAqR,SAAA;EAAA,IAAAC,OAAA,GAAAvQ,YAAA,CAAAf,mBAAA;EAO9B;AACF;AACA;EACE,SAAAA,oBAAA,EAAc;IAAA,IAAAuR,MAAA;IAAA1hB,eAAA,OAAAmQ,mBAAA;IACZuR,MAAA,GAAAD,OAAA,CAAAjjB,IAAA;IAAQyB,0BAAA,CAAAoR,sBAAA,CAAAqQ,MAAA,GAAAP,IAAA;MAAAjhB,QAAA;MAAA9B,KAAA,EAVJ;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAqQ,MAAA,GAAAN,gBAAA;MAAAlhB,QAAA;MAAA9B,KAAA,EACU;IAAS;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAqQ,MAAA,GAAAL,mBAAA;MAAAnhB,QAAA;MAAA9B,KAAA,EACN;IAAS;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAqQ,MAAA,GAAAJ,kBAAA;MAAAphB,QAAA;MAAA9B,KAAA,EACV;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAqQ,MAAA,GAAAH,aAAA;MAAArhB,QAAA;MAAA9B,KAAA,EACP;IAAE;IAQfsjB,MAAA,CAAKjL,KAAK,GAAG,IAAIkF,iBAAiB,EAAE;IAAC,OAAA+F,MAAA;EACvC;;EAEA;AACF;AACA;EAFExe,YAAA,CAAAiN,mBAAA;IAAAhN,GAAA;IAAA/E,KAAA,EAGA,SAAAgF,WAAA,EAAa;MAAA,IAAAue,YAAA;MACXlF,IAAA,CAAAC,eAAA,CAAAvM,mBAAA,CAAA9U,SAAA,uBAAAmD,IAAA;MACA,CAAAmjB,YAAA,OAAI,CAAClL,KAAK,cAAAkL,YAAA,uBAAVA,YAAA,CAAYve,UAAU,EAAE;IAC1B;;IAEA;AACF;AACA;AACA;EAHE;IAAAD,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAS;MACP,OAAAV,qBAAA,CAAO,IAAI,EAAAwd,IAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA7c,GAAA,EAIA,SAAAA,IAAOkc,EAAE,EAAE;MACT,IAAIrG,oBAAoB,CAACqG,EAAE,EAAE5P,eAAe,CAAC6P,iBAAiB,CAAC,EAAE;QAC/Dzd,qBAAA,KAAI,EAAAme,IAAA,EAAOX,EAAE;MACf;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAArd,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAqB;MACnB,OAAAV,qBAAA,CAAO,IAAI,EAAAyd,gBAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA9c,GAAA,EAIA,SAAAA,IAAmBqS,cAAc,EAAE;MACjC,IAAI,IAAI,CAACtN,WAAW,IAAI1F,qBAAA,KAAI,EAAAwd,IAAA,MAAS,EAAE,EAAE;QACvClH,kCAAkC,EAAE;MACtC,CAAC,MAAM;QACL,IAAIE,oBAAoB,CAACxD,cAAc,EAAE/F,eAAe,CAAC4M,UAAU,CAAC,EAAE;UACpExa,qBAAA,KAAI,EAAAoe,gBAAA,EAAmBzK,cAAc;QACvC;MACF;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAxT,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAwB;MACtB,OAAAV,qBAAA,CAAO,IAAI,EAAA0d,mBAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA/c,GAAA,EAIA,SAAAA,IAAsBiS,iBAAiB,EAAE;MACvC,IAAI,IAAI,CAAClN,WAAW,IAAI1F,qBAAA,KAAI,EAAAwd,IAAA,MAAS,EAAE,EAAE;QACvClH,kCAAkC,EAAE;MACtC,CAAC,MAAM;QACL,IAAIE,oBAAoB,CAAC5D,iBAAiB,EAAE3F,eAAe,CAAC+L,UAAU,CAAC,EAAE;UACvE3Z,qBAAA,KAAI,EAAAqe,mBAAA,EAAsB9K,iBAAiB;QAC7C;MACF;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAApT,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAuB;MACrB,OAAAV,qBAAA,CAAO,IAAI,EAAA2d,kBAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAAhd,GAAA,EAIA,SAAAA,IAAqBgS,gBAAgB,EAAE;MACrC,IAAI,IAAI,CAACjN,WAAW,IAAI1F,qBAAA,KAAI,EAAAwd,IAAA,MAAS,EAAE,EAAE;QACvClH,kCAAkC,EAAE;MACtC,CAAC,MAAM;QACL,IAAIE,oBAAoB,CAAC7D,gBAAgB,EAAE1F,eAAe,CAACkI,UAAU,CAAC,IACpEsB,mBAAmB,CAAC9D,gBAAgB,EAChC1F,eAAe,CAACyM,cAAc,CAAC,EAAE;UACrCra,qBAAA,KAAI,EAAAse,kBAAA,EAAqBhL,gBAAgB;QAC3C;MACF;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAnT,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAkB;MAChB,OAAAV,qBAAA,CAAO,IAAI,EAAA4d,aAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAAjd,GAAA,EAIA,SAAAA,IAAgB2c,WAAW,EAAE;MAC3B,IAAI,IAAI,CAAC5X,WAAW,IAAI1F,qBAAA,KAAI,EAAAwd,IAAA,MAAS,EAAE,EAAE;QACvClH,kCAAkC,EAAE;MACtC,CAAC,MAAM;QACL,IAAIE,oBAAoB,CAAC8G,WAAW,EAAErQ,eAAe,CAACsQ,gBAAgB,EAClE,IAAI,CAAC,EAAE;UACTle,qBAAA,KAAI,EAAAue,aAAA,EAAgBN,WAAW;QACjC;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAbE;IAAA9d,GAAA;IAAA/E,KAAA,EAcA,SAAA6a,OAAA,EAAS;MACP,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAM5c,MAAM,GAAG;QACb,IAAI,EAAE,IAAI,CAACkkB,EAAE;QACb,gBAAgB,EAAE,IAAI,CAAC7J,cAAc;QACrC,mBAAmB,EAAE,IAAI,CAACJ,iBAAiB;QAC3C,kBAAkB,EAAE,IAAI,CAACD,gBAAgB;QACzC,aAAa,EAAE,IAAI,CAAC2K,WAAW;QAC/B,OAAO,EAAE,IAAI,CAACxK;MAChB,CAAC;MACD,OAAO,IAAI,CAACyC,UAAU;MACtB,OAAO5c,MAAM;IACf;EAAC;EAAA,OAAA6T,mBAAA;AAAA,EA/JsCsH,4CAAO;;AAkKhD;AACA;AACA;AAFA,IAAAmK,OAAA,oBAAAliB,OAAA;AAAA,IAGMic,iBAAiB,0BAAAkG,SAAA;EAAA7Q,SAAA,CAAA2K,iBAAA,EAAAkG,SAAA;EAAA,IAAAC,OAAA,GAAA5Q,YAAA,CAAAyK,iBAAA;EAGrB;AACF;AACA;EACE,SAAAA,kBAAA,EAAc;IAAA,IAAAoG,MAAA;IAAA/hB,eAAA,OAAA2b,iBAAA;IACZoG,MAAA,GAAAD,OAAA,CAAAtjB,IAAA,OACI;MACE+Z,cAAc,EAAE/H,mBAAmB,CAAC+H,cAAc;MAClD7c,GAAG,EAAE,EAAE;MACP+M,gBAAgB,EAAEgI,qBAAqB,CAAC5H,iBAAiB;MACzD4P,eAAe,EAAEhI,qBAAqB,CAACmE,aAAa;MACpD8D,gBAAgB,EAAEjI,qBAAqB,CAACoI,kBAAkB;MAC1DF,YAAY,EAAE/H,eAAe,CAACkI,UAAU;MACxC5B,UAAU,EAAEuC,iEAAwBA;IACtC,CAAC;IAAExZ,0BAAA,CAAAoR,sBAAA,CAAA0Q,MAAA,GAAAH,OAAA;MAAA1hB,QAAA;MAAA9B,KAAA,EAfC;IAAE;IAAA,OAAA2jB,MAAA;EAgBZ;;EAEA;AACF;AACA;AACA;EAHE7e,YAAA,CAAAyY,iBAAA;IAAAxY,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAa;MACX,OAAAV,qBAAA,CAAO,IAAI,EAAAie,OAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAAtd,GAAA,EAIA,SAAAA,IAAWoS,MAAM,EAAE;MACjB,IAAIyD,oBAAoB,CAACzD,MAAM,EAAE9F,eAAe,CAACkI,UAAU,CAAC,IAC1DsB,mBAAmB,CAAC1D,MAAM,EAAE9F,eAAe,CAACoR,YAAY,CAAC,EAAE;QAC3Dhf,qBAAA,KAAI,EAAA4e,OAAA,EAAWlL,MAAM;MACvB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAXE;IAAAvT,GAAA;IAAA/E,KAAA,EAYA,SAAA6a,OAAA,EAAS;MACP,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAM5c,MAAM,GAAG;QACb,QAAQ,EAAE,IAAI,CAACoa,MAAM;QACrB,KAAK,EAAA+F,IAAA,CAAAC,eAAA,CAAAf,iBAAA,CAAAtgB,SAAA,eAAW;QAChB,KAAK,EAAAohB,IAAA,CAAAC,eAAA,CAAAf,iBAAA,CAAAtgB,SAAA,eAAW;QAChB,KAAK,EAAAohB,IAAA,CAAAC,eAAA,CAAAf,iBAAA,CAAAtgB,SAAA;MACP,CAAC;MACD,OAAO,IAAI,CAAC6d,UAAU;MACtB,OAAO5c,MAAM;IACf;EAAC;EAAA,OAAAqf,iBAAA;AAAA,EA5D6BtD,6CAAQ;AA+DxC;AACA;AACA;AAFA,IAAA4J,QAAA,oBAAAviB,OAAA;AAAA,IAAAwiB,UAAA,oBAAAxiB,OAAA;AAAA,IAAAyiB,WAAA,oBAAAziB,OAAA;AAAA,IAAA0iB,kBAAA,oBAAA1iB,OAAA;AAGO,IAAMqQ,iBAAiB,0BAAAsS,SAAA;EAAArR,SAAA,CAAAjB,iBAAA,EAAAsS,SAAA;EAAA,IAAAC,QAAA,GAAApR,YAAA,CAAAnB,iBAAA;EAM5B;AACF;AACA;AACA;EACE,SAAAA,kBAAA,EAAuC;IAAA,IAAAwS,MAAA;IAAA,IAA3BC,iBAAiB,GAAArkB,SAAA,CAAA4I,MAAA,QAAA5I,SAAA,QAAAf,SAAA,GAAAe,SAAA,MAAG,KAAK;IAAA6B,eAAA,OAAA+P,iBAAA;IACnCwS,MAAA,GAAAD,QAAA,CAAA9jB,IAAA;IAAQyB,0BAAA,CAAAoR,sBAAA,CAAAkR,MAAA,GAAAN,QAAA;MAAA/hB,QAAA;MAAA9B,KAAA,EAVC;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAkR,MAAA,GAAAL,UAAA;MAAAhiB,QAAA;MAAA9B,KAAA,EACD;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAkR,MAAA,GAAAJ,WAAA;MAAAjiB,QAAA;MAAA9B,KAAA,EACD;IAAE;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAkR,MAAA,GAAAH,kBAAA;MAAAliB,QAAA;MAAA9B,KAAA;IAAA;IASb4E,qBAAA,CAAAqO,sBAAA,CAAAkR,MAAA,GAAAN,QAAA,EAAgB,EAAE;IAClBjf,qBAAA,CAAAqO,sBAAA,CAAAkR,MAAA,GAAAL,UAAA,EAAiB,EAAE;IACnBlf,qBAAA,CAAAqO,sBAAA,CAAAkR,MAAA,GAAAJ,WAAA,EAAkB,EAAE;IACpBnf,qBAAA,CAAAqO,sBAAA,CAAAkR,MAAA,GAAAH,kBAAA,EAA0BI,iBAAiB;IAAC,OAAAD,MAAA;EAC9C;;EAEA;AACF;AACA;AACA;EAHErf,YAAA,CAAA6M,iBAAA;IAAA5M,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAc;MACZ,OAAAV,qBAAA,CAAO,IAAI,EAAAse,QAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA3d,GAAA,EAIA,SAAAA,IAAYme,OAAO,EAAE;MACnB,IAAI,IAAI,CAACpZ,WAAW,IAAA1F,qBAAA,CAAI,IAAI,EAAAye,kBAAA,CAAmB,EAAE;QAC/CvI,kBAAkB,EAAE;MACtB,CAAC,MAAM;QACL,IAAIM,oBAAoB,CAACsI,OAAO,EAAE7R,eAAe,CAAC8R,iBAAiB,EAC/D,IAAI,CAAC,EAAE;UACT1f,qBAAA,KAAI,EAAAif,QAAA,EAAYQ,OAAO;QACzB;MACF;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAtf,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAe;MACb,OAAAV,qBAAA,CAAO,IAAI,EAAAue,UAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA5d,GAAA,EAIA,SAAAA,IAAa4Y,QAAQ,EAAE;MACrB,IAAI,IAAI,CAAC7T,WAAW,IAAA1F,qBAAA,CAAI,IAAI,EAAAye,kBAAA,CAAmB,EAAE;QAC/CvI,kBAAkB,EAAE;MACtB,CAAC,MAAM;QACL,IAAIM,oBAAoB,CAAC+C,QAAQ,EAAEtM,eAAe,CAAC+R,YAAY,CAAC,EAAE;UAChE3f,qBAAA,KAAI,EAAAkf,UAAA,EAAahF,QAAQ;QAC3B;MACF;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAA/Z,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAgB;MACd,OAAAV,qBAAA,CAAO,IAAI,EAAAwe,WAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA7d,GAAA,EAIA,SAAAA,IAAcqc,SAAS,EAAE;MACvB,IAAI,IAAI,CAACtX,WAAW,IAAA1F,qBAAA,CAAI,IAAI,EAAAye,kBAAA,CAAmB,EAAE;QAC/CvI,kBAAkB,EAAE;MACtB,CAAC,MAAM;QACL,IAAIM,oBAAoB,CAACwG,SAAS,EAAE/P,eAAe,CAACgQ,OAAO,CAAC,EAAE;UAC5D5d,qBAAA,KAAI,EAAAmf,WAAA,EAAcxB,SAAS;QAC7B;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAxd,GAAA;IAAA/E,KAAA,EAUA,SAAA6a,OAAA,EAAS;MACP,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAM5c,MAAM,GAAG;QACb,SAAS,EAAE,IAAI,CAACmmB,OAAO;QACvB,UAAU,EAAE,IAAI,CAACvF,QAAQ;QACzB,WAAW,EAAE,IAAI,CAACyD;MACpB,CAAC;MACD,OAAO,IAAI,CAACzH,UAAU;MACtB,OAAO5c,MAAM;IACf;EAAC;EAAA,OAAAyT,iBAAA;AAAA,EAxGoC0H,4CAAO;;AA2G9C;AACA;AACA;AAFA,IAAAmL,IAAA,oBAAAljB,OAAA;AAGO,IAAMwQ,+BAA+B,0BAAA2S,SAAA;EAAA7R,SAAA,CAAAd,+BAAA,EAAA2S,SAAA;EAAA,IAAAC,QAAA,GAAA5R,YAAA,CAAAhB,+BAAA;EAG1C;AACF;AACA;EACE,SAAAA,gCAAA,EAAc;IAAA,IAAA6S,MAAA;IAAA/iB,eAAA,OAAAkQ,+BAAA;IACZ6S,MAAA,GAAAD,QAAA,CAAAtkB,IAAA;IAAQyB,0BAAA,CAAAoR,sBAAA,CAAA0R,MAAA,GAAAH,IAAA;MAAA1iB,QAAA;MAAA9B,KAAA,EANJ;IAAE;IAAA,OAAA2kB,MAAA;EAOR;;EAEA;AACF;AACA;AACA;EAHE7f,YAAA,CAAAgN,+BAAA;IAAA/M,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAS;MACP,OAAAV,qBAAA,CAAO,IAAI,EAAAif,IAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAAte,GAAA,EAIA,SAAAA,IAAOkc,EAAE,EAAE;MACT,IAAIrG,oBAAoB,CAACqG,EAAE,EAAE5P,eAAe,CAAC6P,iBAAiB,CAAC,EAAE;QAC/Dzd,qBAAA,KAAI,EAAA4f,IAAA,EAAOpC,EAAE;MACf;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAArd,GAAA;IAAA/E,KAAA,EAQA,SAAA6a,OAAA,EAAS;MACP,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAM5c,MAAM,GAAG;QACb,IAAI,EAAE,IAAI,CAACkkB;MACb,CAAC;MACD,OAAO,IAAI,CAACtH,UAAU;MACtB,OAAO5c,MAAM;IACf;EAAC;EAAA,OAAA4T,+BAAA;AAAA,EA3CkDuH,4CAAO;;AA8C5D;AACA;AACA;AAFA,IAAAuL,QAAA,oBAAAtjB,OAAA;AAGO,IAAMsQ,qCAAqC,0BAAAiT,SAAA;EAAAjS,SAAA,CAAAhB,qCAAA,EAAAiT,SAAA;EAAA,IAAAC,QAAA,GAAAhS,YAAA,CAAAlB,qCAAA;EAGhD;AACF;AACA;EACE,SAAAA,sCAAA,EAAc;IAAA,IAAAmT,MAAA;IAAAnjB,eAAA,OAAAgQ,qCAAA;IACZmT,MAAA,GAAAD,QAAA,CAAA1kB,IAAA;IAAQyB,0BAAA,CAAAoR,sBAAA,CAAA8R,MAAA,GAAAH,QAAA;MAAA9iB,QAAA;MAAA9B,KAAA,EANC;IAAE;IAAA,OAAA+kB,MAAA;EAOb;;EAEA;AACF;AACA;AACA;EAHEjgB,YAAA,CAAA8M,qCAAA;IAAA7M,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAc;MACZ,OAAAV,qBAAA,CAAO,IAAI,EAAAqf,QAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA1e,GAAA,EAIA,SAAAA,IAAYsP,OAAO,EAAE;MACnB,IAAIuG,oBAAoB,CAACvG,OAAO,EAAEhD,eAAe,CAACwS,WAAW,CAAC,EAAE;QAC9DpgB,qBAAA,KAAI,EAAAggB,QAAA,EAAYpP,OAAO;MACzB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAzQ,GAAA;IAAA/E,KAAA,EAQA,SAAA6a,OAAA,EAAS;MACP,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAM5c,MAAM,GAAG;QACb,SAAS,EAAE,IAAI,CAACsX;MAClB,CAAC;MACD,OAAO,IAAI,CAACsF,UAAU;MACtB,OAAO5c,MAAM;IACf;EAAC;EAAA,OAAA0T,qCAAA;AAAA,EA3CwDyH,4CAAO;;AA8ClE;AACA;AACA;AACO,IAAM5H,GAAG,0BAAAwT,SAAA;EAAArS,SAAA,CAAAnB,GAAA,EAAAwT,SAAA;EAAA,IAAAC,QAAA,GAAApS,YAAA,CAAArB,GAAA;EACd;AACF;AACA;EACE,SAAAA,IAAA,EAAc;IAAA,IAAA0T,MAAA;IAAAvjB,eAAA,OAAA6P,GAAA;IACZ0T,MAAA,GAAAD,QAAA,CAAA9kB,IAAA;IAEA+kB,MAAA,CAAK3Q,GAAG,GAAG,IAAI4Q,MAAM,EAAE;IAAC,OAAAD,MAAA;EAC1B;;EAEA;AACF;AACA;EAFErgB,YAAA,CAAA2M,GAAA;IAAA1M,GAAA;IAAA/E,KAAA,EAGA,SAAAgF,WAAA,EAAa;MAAA,IAAAqgB,SAAA;MACXhH,IAAA,CAAAC,eAAA,CAAA7M,GAAA,CAAAxU,SAAA,uBAAAmD,IAAA;MACA,CAAAilB,SAAA,OAAI,CAAC7Q,GAAG,cAAA6Q,SAAA,uBAARA,SAAA,CAAUrgB,UAAU,EAAE;IACxB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAD,GAAA;IAAA/E,KAAA,EAUA,SAAA6a,OAAA,EAAS;MACP,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAM5c,MAAM,GAAG;QACb,KAAK,EAAE,IAAI,CAACsW;MACd,CAAC;MACD,OAAO,IAAI,CAACsG,UAAU;MACtB,OAAO5c,MAAM;IACf;EAAC;EAAA,OAAAuT,GAAA;AAAA,EAnCsB4H,4CAAO;;AAsChC;AACA;AACA;AAFA,IAAAiM,QAAA,oBAAAhkB,OAAA;AAAA,IAGM8jB,MAAM,0BAAAG,SAAA;EAAA3S,SAAA,CAAAwS,MAAA,EAAAG,SAAA;EAAA,IAAAC,QAAA,GAAA1S,YAAA,CAAAsS,MAAA;EAGV;AACF;AACA;EACE,SAAAA,OAAA,EAAc;IAAA,IAAAK,OAAA;IAAA7jB,eAAA,OAAAwjB,MAAA;IACZK,OAAA,GAAAD,QAAA,CAAAplB,IAAA;IAAQyB,0BAAA,CAAAoR,sBAAA,CAAAwS,OAAA,GAAAH,QAAA;MAAAxjB,QAAA;MAAA9B,KAAA,EANC;IAAQ;IAQjBylB,OAAA,CAAKC,aAAa,GAAG,IAAIC,kBAAkB,EAAE;IAAC,OAAAF,OAAA;EAChD;;EAEA;AACF;AACA;EAFE3gB,YAAA,CAAAsgB,MAAA;IAAArgB,GAAA;IAAA/E,KAAA,EAGA,SAAAgF,WAAA,EAAa;MAAA,IAAA4gB,mBAAA;MACXvH,IAAA,CAAAC,eAAA,CAAA8G,MAAA,CAAAnoB,SAAA,uBAAAmD,IAAA;MACA,CAAAwlB,mBAAA,OAAI,CAACF,aAAa,cAAAE,mBAAA,uBAAlBA,mBAAA,CAAoB5gB,UAAU,EAAE;IAClC;;IAEA;AACF;AACA;AACA;EAHE;IAAAD,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAc;MACZ,OAAAV,qBAAA,CAAO,IAAI,EAAA+f,QAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAApf,GAAA,EAIA,SAAAA,IAAYuO,OAAO,EAAE;MACnB,IAAIsH,oBAAoB,CAACtH,OAAO,EAAEjC,eAAe,CAACqT,QAAQ,CAAC,EAAE;QAC3DjhB,qBAAA,KAAI,EAAA0gB,QAAA,EAAY7Q,OAAO;MACzB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAA1P,GAAA;IAAA/E,KAAA,EASA,SAAA6a,OAAA,EAAS;MACP,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAM5c,MAAM,GAAG;QACb,SAAS,EAAE,IAAI,CAACuW;MAClB,CAAC;MACD,OAAO,IAAI,CAACqG,UAAU;MACtB,OAAO5c,MAAM;IACf;EAAC;EAAA,OAAAknB,MAAA;AAAA,EAtDkB/L,4CAAO;AAyD5B;AACA;AACA;AAFA,IAAAyM,SAAA,oBAAAxkB,OAAA;AAAA,IAAAykB,SAAA,oBAAAzkB,OAAA;AAAA,IAGMqkB,kBAAkB,0BAAAK,UAAA;EAAApT,SAAA,CAAA+S,kBAAA,EAAAK,UAAA;EAAA,IAAAC,QAAA,GAAAnT,YAAA,CAAA6S,kBAAA;EAoBtB;AACF;AACA;EACE,SAAAA,mBAAA,EAAc;IAAA,IAAAO,OAAA;IAAAtkB,eAAA,OAAA+jB,kBAAA;IACZO,OAAA,GAAAD,QAAA,CAAA7lB,IAAA;IAAQyB,0BAAA,CAAAoR,sBAAA,CAAAiT,OAAA,GAAAJ,SAAA;MAAAhkB,QAAA;MAAA9B,KAAA,EAvBE;IAAS;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAiT,OAAA,GAAAH,SAAA;MAAAjkB,QAAA;MAAA9B,KAAA,EACT;IAAS;IAAAsE,eAAA,CAAA2O,sBAAA,CAAAiT,OAAA;MAAA,SAAAC,QAAA;QAAAvkB,eAAA,OAAAukB,OAAA;QAAA7hB,eAAA,yBAOF,UAAC8hB,OAAO;UAAA,OAAK,SAAS;QAAA;MAAA;MALvC;AACJ;AACA;AACA;AACA;MAJI,OAAAthB,YAAA,CAAAqhB,OAAA;IAAA;IAAA7hB,eAAA,CAAA2O,sBAAA,CAAAiT,OAAA;MAAA,SAAAG,QAAA;QAAAzkB,eAAA,OAAAykB,OAAA;QAAA/hB,eAAA,yBAaiB,UAAC8hB,OAAO;UAAA,OAAK,SAAS;QAAA;MAAA;MALvC;AACJ;AACA;AACA;AACA;MAJI,OAAAthB,YAAA,CAAAuhB,OAAA;IAAA;IAAA,OAAAH,OAAA;EAaF;;EAEA;AACF;AACA;AACA;EAHEphB,YAAA,CAAA6gB,kBAAA;IAAA5gB,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAe;MACb,OAAAV,qBAAA,CAAO,IAAI,EAAAugB,SAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA5f,GAAA,EAIA,SAAAA,IAAaogB,CAAC,EAAE;MACd7K,kBAAkB,EAAE;IACtB;;IAEA;AACF;AACA;AACA;EAHE;IAAA1W,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAe;MACb,OAAAV,qBAAA,CAAO,IAAI,EAAAwgB,SAAA;IACb;;IAEA;AACF;AACA;AACA,OAHE;IAAA7f,GAAA,EAIA,SAAAA,IAAaogB,CAAC,EAAE;MACd7K,kBAAkB,EAAE;IACtB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAA1W,GAAA;IAAA/E,KAAA,EAUA,SAAA6a,OAAA,EAAS;MACP,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAM5c,MAAM,GAAG;QACb,UAAU,EAAE,IAAI,CAACqoB,QAAQ;QACzB,UAAU,EAAE,IAAI,CAACC;MACnB,CAAC;MACD,OAAO,IAAI,CAAC1L,UAAU;MACtB,OAAO5c,MAAM;IACf;EAAC;EAAA,OAAAynB,kBAAA;AAAA,EA7E8BtM,4CAAO;;;;;;;;;;;;;;;;;;AC3kDxC,IAAM5c,MAAM,GAAG;EACb4G,UAAU,EAAE,MAAM;EAClBE,WAAW,EAAE,OAAO;EACpBkB,qBAAqB,EAAE,CAAC;EACxBoB,iBAAiB,EAAE,CAAC;EACpBY,gBAAgB,EAAE,CAAC;EACnBtC,eAAe,EAAE,CAAC;EAClBF,cAAc,EAAE,CAAC;EACjBF,iBAAiB,EAAE,CAAC;EACpBvB,eAAe,EAAE,CAAC;EAClBikB,cAAc,EAAE;AAClB,CAAC;AAED,IAAMrlB,OAAO,GAAG;EACd;EACAgc,YAAY,EAAE,gGAAgG;EAC9GsJ,aAAa,EAAE,mHAAmH;EAClIvM,cAAc,EAAE,aAAa;EAC7BiH,iBAAiB,EAAE,uBAAuB;EAC1CH,mBAAmB,EAAE,iBAAiB;EACtCgB,0BAA0B,EAAE,SAAS;EACrC0E,qBAAqB,EAAE,kDAAkD;EACzEzG,2BAA2B,EAAE,2BAA2B;EACxDY,qBAAqB,EAAE,qFAAqF;EAE5G9K,kBAAkB,EAAE;IAClB,KAAK,EAAE;MACLF,YAAY,EAAE,mBAAmB;MACjCC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,wBAAwB;MACtCC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,8BAA8B;MAC5CC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,0CAA0C;MACxDC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,iBAAiB;MAC/BC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,uBAAuB;MACrCC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,yCAAyC;MACvDC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,sBAAsB;MACpCC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,uBAAuB;MACrCC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,qBAAqB;MACnCC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,4BAA4B;MAC1CC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,uCAAuC;MACrDC,aAAa,EAAE;IACjB;EACF;AACF,CAAC;AAED,IAAM6Q,IAAI,GAAAzgB,aAAA,CAAAA,aAAA,KACL/E,OAAO,GAAK;EACbgc,YAAY,EAAE,2GAA2G;EACzH8C,2BAA2B,EAAE,wFAAwF;EACrHyG,qBAAqB,EAAE,uEAAuE;EAC9FE,6BAA6B,EAAE,2IAA2I;EAC1KC,cAAc,EAAE,mBAAmB;EACnCC,wBAAwB,EAAE,qBAAqB;EAC/CC,cAAc,EAAE;AAClB,CAAC,CACF;AAED,IAAMjd,SAAS,GAAG;EAChB;EACAqT,YAAY,EAAE,sTAAsT;EACpUgE,iBAAiB,EAAE,4BAA4B;EAC/CjH,cAAc,EAAE,oBAAoB;EACpC8G,mBAAmB,EAAE,wEAAwE;EAC7FgB,0BAA0B,EAAE,SAAS;EACrC0E,qBAAqB,EAAE,kDAAkD;EACzEzG,2BAA2B,EAAE,sDAAsD;EACnFY,qBAAqB,EAAE,sGAAsG;EAE7H9K,kBAAkB,EAAE;IAClB,GAAG,EAAE;MACHF,YAAY,EAAE,UAAU;MACxBC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,mBAAmB;MACjCC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,gCAAgC;MAC9CC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,qBAAqB;MACnCC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,6BAA6B;MAC3CC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,6BAA6B;MAC3CC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,mCAAmC;MACjDC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,+BAA+B;MAC7CC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,qCAAqC;MACnDC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,iCAAiC;MAC/CC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,kCAAkC;MAChDC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,8BAA8B;MAC5CC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,8BAA8B;MAC5CC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,0BAA0B;MACxCC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,wBAAwB;MACtCC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,qBAAqB;MACnCC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,qBAAqB;MACnCC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,wBAAwB;MACtCC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,8BAA8B;MAC5CC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,kCAAkC;MAChDC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,0CAA0C;MACxDC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,iCAAiC;MAC/CC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,kCAAkC;MAChDC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,kCAAkC;MAChDC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,uCAAuC;MACrDC,aAAa,EAAE;IACjB,CAAC;IACD,KAAK,EAAE;MACLD,YAAY,EAAE,uCAAuC;MACrDC,aAAa,EAAE;IACjB;EACF;AACF,CAAC;AAED,IAAM/U,YAAY,GAAG;EACnBvE,MAAM,EAAEA,MAAM;EACd2E,OAAO,EAAEA,OAAO;EAChBwlB,IAAI,EAAEA,IAAI;EACV7c,SAAS,EAAEA;AACb,CAAC;AAED,+DAAe/I,YAAY;;;;;;;;;;;;;;;;;;ACxN3B,IAAMvE,MAAM,GAAG;EACbyK,OAAO,EAAE,GAAG;EACZ+f,qBAAqB,EAAE,GAAG;EAC1BzhB,WAAW,EAAE,GAAG;EAChBE,UAAU,EAAE,GAAG;EACfwhB,mBAAmB,EAAE,GAAG;EACxB3gB,uBAAuB,EAAE,GAAG;EAC5BC,oBAAoB,EAAE,GAAG;EACzBK,oBAAoB,EAAE,GAAG;EACzBC,mBAAmB,EAAE,GAAG;EACxBQ,iBAAiB,EAAE,GAAG;EACtBC,gBAAgB,EAAE,GAAG;EACrBK,kBAAkB,EAAE,GAAG;EACvBC,iBAAiB,EAAE,GAAG;EACtBsf,cAAc,EAAE,GAAG;EACnB3b,cAAc,EAAE,GAAG;EACnBC,WAAW,EAAE,GAAG;EAChB2b,mBAAmB,EAAE,GAAG;EACxBnS,mBAAmB,EAAE,GAAG;EACxBoS,sBAAsB,EAAE,GAAG;EAC3B/c,oBAAoB,EAAE,GAAG;EACzBgd,qBAAqB,EAAE,GAAG;EAC1B/b,qBAAqB,EAAE,GAAG;EAC1BiP,iBAAiB,EAAE,GAAG;EACtB/P,iBAAiB,EAAE,GAAG;EACtBkR,kBAAkB,EAAE,GAAG;EACvBnF,aAAa,EAAE,GAAG;EAClBiE,kBAAkB,EAAE,GAAG;EACvB5F,0BAA0B,EAAE;AAC9B,CAAC;AAED,IAAMzT,OAAO,GAAA+E,aAAA,CAAAA,aAAA,KACR1J,MAAM,GAAK;EACZoK,oBAAoB,EAAE,GAAG;EACzBS,iBAAiB,EAAE,GAAG;EACtBM,kBAAkB,EAAE,GAAG;EACvBuf,cAAc,EAAE,GAAG;EACnB3b,cAAc,EAAE,GAAG;EACnBC,WAAW,EAAE,GAAG;EAChBnB,oBAAoB,EAAE,GAAG;EACzBgd,qBAAqB,EAAE,GAAG;EAC1B/b,qBAAqB,EAAE,GAAG;EAC1BiP,iBAAiB,EAAE,GAAG;EACtB/P,iBAAiB,EAAE,GAAG;EACtBkR,kBAAkB,EAAE,GAAG;EACvBnF,aAAa,EAAE,GAAG;EAClBiE,kBAAkB,EAAE,GAAG;EACvB5F,0BAA0B,EAAE;AAC9B,CAAC,CACF;AAED,IAAM9K,SAAS,GAAA5D,aAAA,CAAAA,aAAA,KACV1J,MAAM,GAAK;EACZwqB,qBAAqB,EAAE,GAAG;EAC1BzhB,WAAW,EAAE,GAAG;EAChBE,UAAU,EAAE,GAAG;EACfwhB,mBAAmB,EAAE,GAAG;EACxB3gB,uBAAuB,EAAE,GAAG;EAC5BghB,qBAAqB,EAAE,GAAG;EAC1B1gB,oBAAoB,EAAE,GAAG;EACzBC,mBAAmB,EAAE,GAAG;EACxBQ,iBAAiB,EAAE,GAAG;EACtBC,gBAAgB,EAAE,GAAG;EACrBK,kBAAkB,EAAE,GAAG;EACvBC,iBAAiB,EAAE,GAAG;EACtBsf,cAAc,EAAE,GAAG;EACnBC,mBAAmB,EAAE,GAAG;EACxBnS,mBAAmB,EAAE,GAAG;EACxBoS,sBAAsB,EAAE,GAAG;EAC3B/c,oBAAoB,EAAE,GAAG;EACzBgd,qBAAqB,EAAE,GAAG;EAC1B/b,qBAAqB,EAAE,GAAG;EAC1Bd,iBAAiB,EAAE,GAAG;EACtBkR,kBAAkB,EAAE,GAAG;EACvBnF,aAAa,EAAE,GAAG;EAClBiE,kBAAkB,EAAE,GAAG;EACvB5F,0BAA0B,EAAE;AAC9B,CAAC,CACF;AAED,IAAM9T,UAAU,GAAG;EACjBK,OAAO,EAAEA,OAAO;EAChB2I,SAAS,EAAEA;AACb,CAAC;AAED,+DAAehJ,UAAU;;;;;;;;;;;;ACtFzB,IAAMmR,cAAc,GAAG;EACrB,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EAAE,IAAI,EAAE,IAAI;EACtE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EACpE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE,KAAK;EAAE,KAAK,EAAE;AACjE,CAAC;AAED,+DAAeA,cAAc;;;;;;;;;;;;;;;;;;ACzE7B,IAAM9Q,OAAO,GAAG;EACdomB,YAAY,EAAE,YAAY;EAC1BC,aAAa,EAAE,aAAa;EAC5BjF,OAAO,EAAE,uDAAuD;EAAE;EAClErD,WAAW,EAAE,oDAAoD;EAAE;EACnEuI,UAAU,EAAE,QAAQ;EACpBhH,WAAW,EAAE,cAAc;EAC3BhG,UAAU,EAAE,6BAA6B;EAAE;EAC3CiN,aAAa,EAAE,+BAA+B;EAC9C3C,WAAW,EAAE,YAAY;EAAE;EAC3B4C,QAAQ,EAAE,aAAa;EAEvB;EACAC,SAAS,EAAE,gDAAgD;EAC3DC,UAAU,EAAE,8DAA8D;EAC1EpJ,OAAO,EAAE,8BAA8B;EACvC4D,OAAO,EAAE,8EAA8E;EACvFK,SAAS,EAAE,mEAAmE;EAAE;EAChFkD,QAAQ,EAAE,uBAAuB;EAEjC;EACAzL,WAAW,EAAE,OAAO;EACpBgG,WAAW,EAAE,QAAQ;EACrBI,WAAW,EAAE,UAAU;EACvBuH,eAAe,EAAE,UAAU;EAC3BpH,UAAU,EAAE;AACd,CAAC;AAED,IAAMiG,IAAI,GAAAzgB,aAAA,CAAAA,aAAA,KACL/E,OAAO,GAAK;EACbumB,aAAa,EAAE;AACjB,CAAC,CACF;AAED,IAAM5d,SAAS,GAAG;EAChBie,YAAY,EAAE,4BAA4B;EAC1CzD,YAAY,EAAE,4BAA4B;EAC1CxF,aAAa,EAAE,6BAA6B;EAC5CkJ,aAAa,EAAE,6BAA6B;EAC5C3I,cAAc,EAAE,8BAA8B;EAC9CgB,OAAO,EAAE,iDAAiD;EAAE;EAC5DwC,gBAAgB,EAAE,+EAA+E;EAAE;EACnG7L,SAAS,EAAE,iEAAiE;EAAE;EAC9EiR,kBAAkB,EAAE,yEAAyE;EAAE;EAC/F5D,iBAAiB,EAAE,gFAAgF;EAAE;EACrG9B,OAAO,EAAE,0RAA0R;EACnSrD,WAAW,EAAE,4HAA4H;EACzIuI,UAAU,EAAE,QAAQ;EACpBhH,WAAW,EAAE,cAAc;EAC3BhG,UAAU,EAAE,mCAAmC;EAC/CiN,aAAa,EAAE,yBAAyB;EACxCQ,kBAAkB,EAAE,yBAAyB;EAAE;EAC/C9F,iBAAiB,EAAE,wEAAwE;EAAE;EAC7F2C,WAAW,EAAE,MAAM;EAAE;EACrB4C,QAAQ,EAAE,aAAa;EACvBQ,aAAa,EAAE,WAAW;EAE1B;EACA7J,UAAU,EAAE,gDAAgD;EAC5Da,UAAU,EAAE,2BAA2B;EACvCV,OAAO,EAAE,oCAAoC;EAC7C4D,OAAO,EAAE,iGAAiG;EAC1GK,SAAS,EAAE,6EAA6E;EACxFkD,QAAQ,EAAE,8GAA8G;EAAE;EAC1HwC,UAAU,EAAE,wBAAwB;EACpCC,SAAS,EAAE,6DAA6D;EAExE;EACA1E,YAAY,EAAE,MAAM;EACpBxD,WAAW,EAAE,KAAK;EAClBI,WAAW,EAAE,KAAK;EAClBG,UAAU,EAAE,MAAM;EAClB1B,cAAc,EAAE;AAClB,CAAC;AAED,IAAM9M,KAAK,GAAG;EACZyU,IAAI,EAAEA,IAAI;EACVxlB,OAAO,EAAEA,OAAO;EAChB2I,SAAS,EAAEA;AACb,CAAC;AAED,+DAAeoI,KAAK;;;;;;;;;;;;;AClFQ;AAE5B,IAAMK,eAAe,GAAGL,wDAAe;AAEvC,IAAMqJ,OAAO,GAAG;EACd,YAAY,EAAE;IACZrF,MAAM,EAAE,gBAAgB;IACxB7Y,GAAG,EAAE,CAAC;IACN8X,SAAS,EAAE,EAAE;IACbsB,MAAM,EAAE;EACV,CAAC;EACD,QAAQ,EAAE;IACRP,MAAM,EAAE3D,eAAe,CAAC6P,iBAAiB;IACzC/kB,GAAG,EAAE,EAAE;IACP8X,SAAS,EAAE,KAAK;IAChBsB,MAAM,EAAE;EACV,CAAC;EACD,SAAS,EAAE;IACTP,MAAM,EAAE3D,eAAe,CAACsQ,gBAAgB;IACxCxlB,GAAG,EAAE,EAAE;IACP8X,SAAS,EAAE,KAAK;IAChBsB,MAAM,EAAE;EACV,CAAC;EACD,cAAc,EAAE;IACdP,MAAM,EAAE3D,eAAe,CAAC8R,iBAAiB;IACzChnB,GAAG,EAAE,CAAC;IACN8X,SAAS,EAAE,EAAE;IACbsB,MAAM,EAAE;EACV,CAAC;EACD,UAAU,EAAE;IACVP,MAAM,EAAE3D,eAAe,CAAC2V,kBAAkB;IAC1C1R,OAAO,EAAEjE,eAAe,CAAC2V,kBAAkB;IAC3C7qB,GAAG,EAAE,EAAE;IACP8X,SAAS,EAAE,KAAK;IAChBiB,UAAU,EAAE,KAAK;IACjBK,MAAM,EAAE;EACV,CAAC;EACD,aAAa,EAAE;IACbP,MAAM,EAAE,KAAK,GAAG3D,eAAe,CAAC2V,kBAAkB;IAClD1R,OAAO,EAAEjE,eAAe,CAACkI,UAAU,GAAG,MAAM,GACxClI,eAAe,CAAC2V,kBAAkB;IACtC7qB,GAAG,EAAE,GAAG;IACR8X,SAAS,EAAE,KAAK;IAChBiB,UAAU,EAAE,KAAK;IACjBK,MAAM,EAAE;EACV,CAAC;EACD,YAAY,EAAE;IACZP,MAAM,EAAE3D,eAAe,CAAC2V,kBAAkB;IAC1C7qB,GAAG,EAAE,EAAE;IACP8X,SAAS,EAAE,KAAK;IAChBsB,MAAM,EAAE;EACV,CAAC;EACD,QAAQ,EAAE;IACRP,MAAM,EAAE3D,eAAe,CAAC2V,kBAAkB;IAC1C7qB,GAAG,EAAE,CAAC;IACN8X,SAAS,EAAE,EAAE;IACbsB,MAAM,EAAE;EACV,CAAC;EACD,SAAS,EAAE;IACTP,MAAM,EAAE3D,eAAe,CAACkI,UAAU;IAClCpd,GAAG,EAAE,CAAC;IACN8X,SAAS,EAAE,EAAE;IACbsB,MAAM,EAAE;EACV,CAAC;EACD,OAAO,EAAE;IACPP,MAAM,EAAE3D,eAAe,CAACyV,aAAa;IACrC3qB,GAAG,EAAE,CAAC;IACN8X,SAAS,EAAE,EAAE;IACbsB,MAAM,EAAE;EACV;AACF,CAAC;AAED,IAAMnE,OAAO,GAAG;EACd,YAAY,EAAE;IACZjV,GAAG,EAAE,CAAC;IACN8X,SAAS,EAAE,EAAE;IACbsB,MAAM,EAAE,KAAK;IACbf,SAAS,EAAE,KAAK;IAChBQ,MAAM,EAAE,gBAAgB;IACxBT,KAAK,EAAE;EACT,CAAC;EACD,QAAQ,EAAE;IACRpY,GAAG,EAAE,EAAE;IACP8X,SAAS,EAAE,KAAK;IAChBsB,MAAM,EAAE,IAAI;IACZf,SAAS,EAAE,KAAK;IAChBQ,MAAM,EAAE3D,eAAe,CAAC6P;EAC1B,CAAC;EACD,SAAS,EAAE;IACT/kB,GAAG,EAAE,EAAE;IACP8X,SAAS,EAAE,KAAK;IAChBsB,MAAM,EAAE,KAAK;IACbf,SAAS,EAAE,KAAK;IAChBQ,MAAM,EAAE3D,eAAe,CAAC0V;EAC1B,CAAC;EACD,cAAc,EAAE;IACd5qB,GAAG,EAAE,CAAC;IACN8X,SAAS,EAAE,EAAE;IACbsB,MAAM,EAAE,KAAK;IACbf,SAAS,EAAE,IAAI;IACfQ,MAAM,EAAE3D,eAAe,CAAC8R;EAC1B,CAAC;EACD,UAAU,EAAE;IACVhnB,GAAG,EAAE,EAAE;IACP8X,SAAS,EAAE,KAAK;IAChBiB,UAAU,EAAE,KAAK;IACjBK,MAAM,EAAE,KAAK;IACbf,SAAS,EAAE,KAAK;IAChBQ,MAAM,EAAE3D,eAAe,CAAC2V,kBAAkB;IAC1C1R,OAAO,EAAEjE,eAAe,CAAC2V;EAC3B,CAAC;EACD,aAAa,EAAE;IACb7qB,GAAG,EAAE,GAAG;IACR8X,SAAS,EAAE,KAAK;IAChBiB,UAAU,EAAE,KAAK;IACjBK,MAAM,EAAE,KAAK;IACbf,SAAS,EAAE,KAAK;IAChBQ,MAAM,EAAE,KAAK,GAAG3D,eAAe,CAAC2V,kBAAkB;IAClD1R,OAAO,EAAEjE,eAAe,CAACkI,UAAU,GAAG,MAAM,GACxClI,eAAe,CAAC2V;EACtB,CAAC;EACD,YAAY,EAAE;IACZ7qB,GAAG,EAAE,EAAE;IACP8X,SAAS,EAAE,KAAK;IAChBsB,MAAM,EAAE,KAAK;IACbf,SAAS,EAAE,KAAK;IAChBQ,MAAM,EAAE3D,eAAe,CAAC2V;EAC1B,CAAC;EACD,QAAQ,EAAE;IACR7qB,GAAG,EAAE,CAAC;IACN8X,SAAS,EAAE,EAAE;IACbsB,MAAM,EAAE,KAAK;IACbf,SAAS,EAAE,KAAK;IAChBQ,MAAM,EAAE3D,eAAe,CAAC2V,kBAAkB;IAC1CzS,KAAK,EAAE;EACT,CAAC;EACD,SAAS,EAAE;IACTpY,GAAG,EAAE,CAAC;IACN8X,SAAS,EAAE,KAAK;IAChBsB,MAAM,EAAE,KAAK;IACbf,SAAS,EAAE,KAAK;IAChBQ,MAAM,EAAE3D,eAAe,CAACkI,UAAU;IAClChF,KAAK,EAAE;EACT,CAAC;EACD,OAAO,EAAE;IACPpY,GAAG,EAAE,CAAC;IACN8X,SAAS,EAAE,EAAE;IACbsB,MAAM,EAAE,KAAK;IACbf,SAAS,EAAE,KAAK;IAChBQ,MAAM,EAAE3D,eAAe,CAACyV,aAAa;IACrCvS,KAAK,EAAE;EACT;AACF,CAAC;AAED,IAAMzD,SAAS,GAAG;EAChBuJ,OAAO,EAAEA,OAAO;EAChBjJ,OAAO,EAAEA;AACX,CAAC;AAED,+DAAeN,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9J6B;AAErD,IAAMsW,cAAc,GAAGvnB,2FAAuC;AAC9D,IAAMwnB,WAAW,GAAGxnB,wFAAoC;AACxD,IAAMynB,gBAAgB,GAAGznB,6FAAyC;;AAElE;AACA;AACA;AAFA,IAAA+Z,UAAA,oBAAAzZ,OAAA;AAAA,IAAAonB,aAAA,oBAAApnB,OAAA;AAAA,IAAAqnB,gBAAA,oBAAArnB,OAAA;AAGO,IAAMR,eAAe,0BAAA8nB,MAAA;EAAAhW,SAAA,CAAA9R,eAAA,EAAA8nB,MAAA;EAAA,IAAA/V,MAAA,GAAAC,YAAA,CAAAhS,eAAA;EAC1B;AACF;AACA;AACA;AACA;AACA;EACE,SAAAA,gBAAYwC,SAAiB,EAAEulB,YAAoB,EAAEC,eAAuB,EAAE;IAAA,IAAA9c,KAAA;IAAApK,eAAA,OAAAd,eAAA;IAC5EkL,KAAA,GAAA6G,MAAA,CAAAzS,IAAA,OAAMyoB,YAAY;IAAEhnB,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAA+O,UAAA;MAAAjZ,QAAA;MAAA9B,KAAA;IAAA;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAA0c,aAAA;MAAA5mB,QAAA;MAAA9B,KAAA;IAAA;IAAA6B,0BAAA,CAAAoR,sBAAA,CAAAjH,KAAA,GAAA2c,gBAAA;MAAA7mB,QAAA;MAAA9B,KAAA;IAAA;IACpB4E,qBAAA,CAAAqO,sBAAA,CAAAjH,KAAA,GAAA+O,UAAA,EAAkBzX,SAAS;IAC3BsB,qBAAA,CAAAqO,sBAAA,CAAAjH,KAAA,GAAA0c,aAAA,EAAqBG,YAAY;IACjCjkB,qBAAA,CAAAqO,sBAAA,CAAAjH,KAAA,GAAA2c,gBAAA,EAAwBG,eAAe;IAAC,OAAA9c,KAAA;EAC1C;EAAClH,YAAA,CAAAhE,eAAA;IAAAiE,GAAA;IAAAkB,GAAA;IAMD;AACF;AACA;AACA;IACE,SAAAA,IAAA,EAAgB;MACd,OAAAV,qBAAA,CAAO,IAAI,EAAAwV,UAAA;IACb;;IAEA;AACF;AACA;AACA;EAHE;IAAAhW,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAmB;MACjB,OAAAV,qBAAA,CAAO,IAAI,EAAAmjB,aAAA;IACb;;IAEA;AACF;AACA;AACA;EAHE;IAAA3jB,GAAA;IAAAkB,GAAA,EAIA,SAAAA,IAAA,EAAsB;MACpB,OAAAV,qBAAA,CAAO,IAAI,EAAAojB,gBAAA;IACb;EAAC;EAAA,OAAA7nB,eAAA;AAAA,gBAAAioB,gBAAA,CAxCkCrf,KAAK;;AA2C1C;AACA;AACA;AACO,IAAMsf,sBAAsB,0BAAAC,gBAAA;EAAArW,SAAA,CAAAoW,sBAAA,EAAAC,gBAAA;EAAA,IAAA9N,OAAA,GAAArI,YAAA,CAAAkW,sBAAA;EACjC;AACF;AACA;AACA;EACE,SAAAA,uBAAY1lB,SAAiB,EAAE;IAAA,IAAAmJ,MAAA;IAAA7K,eAAA,OAAAonB,sBAAA;IAC7B,IAAI,CAAC,CAAC,CAAC7lB,cAAc,CAAC/C,IAAI,CAACmoB,cAAc,EAAElhB,MAAM,CAAC/D,SAAS,CAAC,CAAC,EAAE;MAC7DmJ,MAAA,GAAA0O,OAAA,CAAA/a,IAAA,OAAMkD,SAAS,EAAEilB,cAAc,CAAClhB,MAAM,CAAC/D,SAAS,CAAC,CAAC,CAACwS,YAAY,EAAEyS,cAAc,CAAClhB,MAAM,CAAC/D,SAAS,CAAC,CAAC,CAACyS,aAAa;IAClH,CAAC,MAAM;MACLtJ,MAAA,GAAA0O,OAAA,CAAA/a,IAAA,OAAM,GAAG,EAAEmoB,cAAc,CAAC,KAAK,CAAC,CAACzS,YAAY,EAAEyS,cAAc,CAAC,KAAK,CAAC,CAACxS,aAAa;IACpF;IAAC,OAAAmT,0BAAA,CAAAzc,MAAA;EACH;EAAC,OAAA3H,YAAA,CAAAkkB,sBAAA;AAAA,EAXyCloB,eAAe;;AAc3D;AACA;AACA;AACO,IAAMqoB,mBAAmB,0BAAAC,iBAAA;EAAAxW,SAAA,CAAAuW,mBAAA,EAAAC,iBAAA;EAAA,IAAAvI,OAAA,GAAA/N,YAAA,CAAAqW,mBAAA;EAC9B;AACF;AACA;AACA;EACE,SAAAA,oBAAY7lB,SAAiB,EAAE;IAAA,IAAAkK,MAAA;IAAA5L,eAAA,OAAAunB,mBAAA;IAC7B,IAAI,CAAC,CAAC,CAAChmB,cAAc,CAAC/C,IAAI,CAACooB,WAAW,EAAEnhB,MAAM,CAAC/D,SAAS,CAAC,CAAC,EAAE;MAC1DkK,MAAA,GAAAqT,OAAA,CAAAzgB,IAAA,OAAMkD,SAAS,EAAEklB,WAAW,CAACnhB,MAAM,CAAC/D,SAAS,CAAC,CAAC,CAACwS,YAAY,EAAE0S,WAAW,CAACnhB,MAAM,CAAC/D,SAAS,CAAC,CAAC,CAACyS,aAAa;IAC5G,CAAC,MAAM;MACLvI,MAAA,GAAAqT,OAAA,CAAAzgB,IAAA,OAAM,GAAG,EAAEooB,WAAW,CAAC,KAAK,CAAC,CAAC1S,YAAY,EAAE0S,WAAW,CAAC,KAAK,CAAC,CAACzS,aAAa;IAC9E;IAAC,OAAAmT,0BAAA,CAAA1b,MAAA;EACH;EAAC,OAAA1I,YAAA,CAAAqkB,mBAAA;AAAA,EAXsCroB,eAAe;;AAcxD;AACA;AACA;AACO,IAAMua,wBAAwB,0BAAAgO,iBAAA;EAAAzW,SAAA,CAAAyI,wBAAA,EAAAgO,iBAAA;EAAA,IAAArI,OAAA,GAAAlO,YAAA,CAAAuI,wBAAA;EACnC;AACF;AACA;AACA;EACE,SAAAA,yBAAY/X,SAAiB,EAAE;IAAA,IAAAggB,MAAA;IAAA1hB,eAAA,OAAAyZ,wBAAA;IAC7B,IAAI,CAAC,CAAC,CAAClY,cAAc,CAAC/C,IAAI,CAACqoB,gBAAgB,EAAEphB,MAAM,CAAC/D,SAAS,CAAC,CAAC,EAAE;MAC/DggB,MAAA,GAAAtC,OAAA,CAAA5gB,IAAA,OAAMkD,SAAS,EAAEmlB,gBAAgB,CAACphB,MAAM,CAAC/D,SAAS,CAAC,CAAC,CAACwS,YAAY,EAAE2S,gBAAgB,CAACphB,MAAM,CAAC/D,SAAS,CAAC,CAAC,CAACyS,aAAa;IACtH,CAAC,MAAM;MACLuN,MAAA,GAAAtC,OAAA,CAAA5gB,IAAA,OAAM,GAAG,EAAEqoB,gBAAgB,CAAC,KAAK,CAAC,CAAC3S,YAAY,EAAE2S,gBAAgB,CAAC,KAAK,CAAC,CAAC1S,aAAa;IACxF;IAAC,OAAAmT,0BAAA,CAAA5F,MAAA;EACH;EAAC,OAAAxe,YAAA,CAAAuW,wBAAA;AAAA,EAX2Cva,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FtD,IAAMwoB,kBAAkB,GAAG,GAAG;AAC9B,IAAMC,kBAAkB,GAAG,EAAE;AAC7B,IAAMC,gBAAgB,GAAG,EAAE,GAAGD,kBAAkB;AAChD,IAAME,eAAe,GAAG,EAAE,GAAGD,gBAAgB;AAEpD,IAAME,YAAY,GAAG,CACnB,CAAC,GAAG,EAAED,eAAe,CAAC,EACtB,CAAC,GAAG,EAAED,gBAAgB,CAAC,EACvB,CAAC,GAAG,EAAED,kBAAkB,CAAC,EACzB,CAAC,GAAG,EAAED,kBAAkB,CAAC,CAC1B;;AAED;AACA;AACA;AACA;AACA;AACA;AACO,SAASK,kBAAkBA,CAACC,YAAoB,EAAE;EACvD;EACA,IAAI,CAACA,YAAY,IAAIA,YAAY,IAAI,CAAC,EAAE;IACtC,OAAO,UAAU;EACnB;EAEA,IAAMC,KAAK,GAAGxsB,IAAI,CAACysB,KAAK,CAACF,YAAY,GAAGJ,gBAAgB,CAAC;EAEzD,IAAMO,OAAO,GAAG,IAAIrsB,IAAI,CAACksB,YAAY,GAAG,IAAI,CAAC;EAC7C,IAAMI,OAAO,GAAGD,OAAO,CAACE,aAAa,EAAE;EACvC;EACA,IAAMtK,OAAO,GAAGoK,OAAO,CAACG,UAAU,EAAE;EACpC,IAAMC,EAAE,GAAGP,YAAY,GAAG,GAAG;EAC7B,IAAIQ,KAAK,GAAG,EAAE;EACd,IAAIC,aAAa,CAACF,EAAE,CAAC,GAAG,CAAC,EAAE;IACzB,IAAIE,aAAa,CAACF,EAAE,CAAC,GAAG,CAAC,EAAE;MACzBC,KAAK,GAAGD,EAAE,CAACG,OAAO,CAAC,CAAC,CAAC;IACvB,CAAC,MAAM;MACLF,KAAK,GAAG/iB,MAAM,CAAC8iB,EAAE,CAAC;IACpB;IACAC,KAAK,GAAG,GAAG,GAAGA,KAAK,CAACngB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACnC;EAEA,OAAO,CAAC4f,KAAK,GAAG,GAAG,GAAGG,OAAO,GAAG,GAAG,GAAGrK,OAAO,EAAEpf,OAAO,CAAC,SAAS,EAC5D,KAAK,CAAC,GAAG6pB,KAAK;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASxK,uBAAuBA,CAACD,OAAe,EAAE;EACvD;EACA,IAAI,CAACA,OAAO,IAAIA,OAAO,IAAI,CAAC,EAAE;IAC5B,OAAO,MAAM;EACf;EAEA,IAAI4K,QAAQ,GAAG,GAAG;EAClB,IAAIC,SAAS,GAAG7K,OAAO;EAEvB+J,YAAY,CAAC5a,OAAO,CAAC,UAAAP,IAAA,EAA6B;IAAA,IAAAC,KAAA,GAAAE,cAAA,CAAAH,IAAA;MAA3Bkc,IAAI,GAAAjc,KAAA;MAAEkc,eAAe,GAAAlc,KAAA;IAC1C,IAAIxO,KAAK,GAAG3C,IAAI,CAACysB,KAAK,CAACU,SAAS,GAAGE,eAAe,CAAC;IAEnDF,SAAS,GAAGA,SAAS,GAAGE,eAAe;IACvC,IAAIL,aAAa,CAACG,SAAS,CAAC,GAAG,CAAC,EAAE;MAChCA,SAAS,GAAGxc,MAAM,CAACA,MAAM,CAACwc,SAAS,CAAC,CAACF,OAAO,CAAC,CAAC,CAAC,CAAC;IAClD;IACA;IACA;IACA,IAAIG,IAAI,KAAK,GAAG,IAAID,SAAS,GAAG,CAAC,EAAE;MACjCxqB,KAAK,IAAIwqB,SAAS;IACpB;IAEA,IAAIxqB,KAAK,EAAE;MACT,IAAI,CAACuqB,QAAQ,CAACrd,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAC1Bud,IAAI,KAAK,GAAG,IAAIA,IAAI,KAAK,GAAG,IAAIA,IAAI,KAAK,GAAG,KAC5CF,QAAQ,CAACrd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QAChCqd,QAAQ,IAAI,GAAG;MACjB;MACAA,QAAQ,OAAAngB,MAAA,CAAOpK,KAAK,EAAAoK,MAAA,CAAGqgB,IAAI,CAAE;IAC/B;EACF,CAAC,CAAC;EAEF,OAAOF,QAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,gBAAgBA,CAACC,UAAkB,EAAEC,SAAiB,EAAE;EACtE,IAAI,CAACD,UAAU,IAAI,OAAOA,UAAU,KAAK,QAAQ,IAC7C,CAACA,UAAU,CAAC1hB,KAAK,CAAC2hB,SAAS,CAAC,EAAE;IAChC,OAAO,CAAC;EACV;EACA,IAAMnW,KAAK,GAAGkW,UAAU,CAAC3gB,KAAK,CAAC,GAAG,CAAC;EACnC,IAAM4f,KAAK,GAAG7b,MAAM,CAAC0G,KAAK,CAAC,CAAC,CAAC,CAAC;EAC9B,IAAMsV,OAAO,GAAGhc,MAAM,CAAC0G,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,IAAMiL,OAAO,GAAG3R,MAAM,CAAC0G,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,OAAQmV,KAAK,GAAG,IAAI,GAAKG,OAAO,GAAG,EAAG,GAAGrK,OAAO;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASmL,oBAAoBA,CAACP,QAAgB,EAAEQ,aAAqB,EAAE;EAC5E,IAAI,CAACR,QAAQ,IAAI,CAACA,QAAQ,CAACrhB,KAAK,CAAC6hB,aAAa,CAAC,EAAE;IAC/C,OAAO,CAAC;EACV;EAEA,IAAAtc,KAAA,GAA2D,IAAIyH,MAAM,CACjE6U,aAAa,CAAC,CAACC,IAAI,CAACT,QAAQ,CAAC,IAAI,EAAE;IAAA3b,KAAA,GAAAF,cAAA,CAAAD,KAAA;IAD9Bwc,KAAK,GAAArc,KAAA;IAAEsc,MAAM,GAAAtc,KAAA;IAAIuc,IAAI,GAAAvc,KAAA;IAAEib,KAAK,GAAAjb,KAAA;IAAEob,OAAO,GAAApb,KAAA;IAAE+Q,OAAO,GAAA/Q,KAAA;EAGvD,IAAI1Q,MAAM,GAAG,GAAG;EAEhBA,MAAM,IAAK8P,MAAM,CAAC2R,OAAO,CAAC,IAAI,GAAI;EAClCzhB,MAAM,IAAK8P,MAAM,CAACgc,OAAO,CAAC,GAAG,IAAI,IAAI,GAAI;EACzC9rB,MAAM,IAAK8P,MAAM,CAAC6b,KAAK,CAAC,GAAG,MAAM,IAAI,GAAI;EACzC3rB,MAAM,IAAK8P,MAAM,CAACmd,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,GAAI;EAClDjtB,MAAM,IAAK8P,MAAM,CAACid,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,IAAI,GAAI;EAEzD,OAAO/sB,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2hB,eAAeA,CAC3BuL,KAAa,EACbC,MAAc,EACdN,aAAqB,EAAE;EACzB,OAAOnL,uBAAuB,CAC1BkL,oBAAoB,CAACM,KAAK,EAAEL,aAAa,CAAC,GAC1CD,oBAAoB,CAACO,MAAM,EAAEN,aAAa,CAAC,CAC9C;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASO,oBAAoBA,CAChCF,KAAa,EACbC,MAAc,EACdR,SAAiB,EAAE;EACrB,OAAOlB,kBAAkB,CACrBgB,gBAAgB,CAACS,KAAK,EAAEP,SAAS,CAAC,GAClCF,gBAAgB,CACZU,MAAM,EAAER,SAAS,CAAC,CACzB;AACH;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASlT,OAAOA,CAAC4T,IAAI,EAAE;EAC5B,IAAMrtB,MAAM,GAAG,CAAC,CAAC;;EAEjB;AACF;AACA;AACA;AACA;EACE,SAASstB,OAAOA,CAACC,GAAG,EAAEC,IAAI,EAAE;IAC1B,IAAI/uB,MAAM,CAAC8uB,GAAG,CAAC,KAAKA,GAAG,EAAE;MACvBvtB,MAAM,CAACwtB,IAAI,CAAC,GAAGD,GAAG;IACpB,CAAC,MAAM,IAAInb,KAAK,CAACqb,OAAO,CAACF,GAAG,CAAC,EAAE;MAC7B,KAAK,IAAI7iB,CAAC,GAAG,CAAC,EAAEgjB,CAAC,GAAGH,GAAG,CAAC9iB,MAAM,EAAEC,CAAC,GAAGgjB,CAAC,EAAEhjB,CAAC,EAAE,EAAE;QAC1C4iB,OAAO,CAACC,GAAG,CAAC7iB,CAAC,CAAC,EAAE8iB,IAAI,GAAG,GAAG,GAAG9iB,CAAC,GAAG,GAAG,CAAC;QACrC,IAAIgjB,CAAC,KAAK,CAAC,EAAE1tB,MAAM,CAACwtB,IAAI,CAAC,GAAG,EAAE;MAChC;IACF,CAAC,MAAM;MACL,IAAIG,OAAO,GAAG,IAAI;MAClB,KAAK,IAAMC,CAAC,IAAIL,GAAG,EAAE;QACnB,IAAI,CAAC,CAAC,CAACtoB,cAAc,CAAC/C,IAAI,CAACqrB,GAAG,EAAEK,CAAC,CAAC,EAAE;UAClCD,OAAO,GAAG,KAAK;UACfL,OAAO,CAACC,GAAG,CAACK,CAAC,CAAC,EAAEJ,IAAI,GAAGA,IAAI,GAAG,GAAG,GAAGI,CAAC,GAAGA,CAAC,CAAC;QAC5C;MACF;MACA,IAAID,OAAO,IAAIH,IAAI,EAAExtB,MAAM,CAACwtB,IAAI,CAAC,GAAG,CAAC,CAAC;IACxC;EACF;EAEAF,OAAO,CAACD,IAAI,EAAE,EAAE,CAAC;EACjB,OAAOrtB,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS+C,SAASA,CAACsqB,IAAI,EAAE;EAC9B,YAAY;;EACZ,IAAI5uB,MAAM,CAAC4uB,IAAI,CAAC,KAAKA,IAAI,IAAIjb,KAAK,CAACqb,OAAO,CAACJ,IAAI,CAAC,EAAE,OAAOA,IAAI;EAC7D,IAAMQ,KAAK,GAAG,yBAAyB;EACvC,IAAM7tB,MAAM,GAAG,CAAC,CAAC;EACjB,KAAK,IAAM4tB,CAAC,IAAIP,IAAI,EAAE;IACpB,IAAI,CAAC,CAAC,CAACpoB,cAAc,CAAC/C,IAAI,CAACmrB,IAAI,EAAEO,CAAC,CAAC,EAAE;MACnC,IAAIL,GAAG,GAAGvtB,MAAM;MAChB,IAAIwtB,IAAI,GAAG,EAAE;MACb,IAAIM,CAAC,GAAGD,KAAK,CAACf,IAAI,CAACc,CAAC,CAAC;MACrB,OAAOE,CAAC,EAAE;QACRP,GAAG,GAAGA,GAAG,CAACC,IAAI,CAAC,KAAKD,GAAG,CAACC,IAAI,CAAC,GAAIM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAE,CAAC;QACjDN,IAAI,GAAGM,CAAC,CAAC,CAAC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC;QACnBA,CAAC,GAAGD,KAAK,CAACf,IAAI,CAACc,CAAC,CAAC;MACnB;MACAL,GAAG,CAACC,IAAI,CAAC,GAAGH,IAAI,CAACO,CAAC,CAAC;IACrB;EACF;EACA,OAAO5tB,MAAM,CAAC,EAAE,CAAC,IAAIA,MAAM;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASmsB,aAAaA,CAAC4B,GAAW,EAAE;EACzC,IAAI5uB,IAAI,CAACysB,KAAK,CAACmC,GAAG,CAAC,KAAKA,GAAG,IAAI5kB,MAAM,CAAC4kB,GAAG,CAAC,CAAC/e,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC;EACrE,IAAMwH,KAAK,GAAGuX,GAAG,CAAC9uB,QAAQ,EAAE,CAAC8M,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC1C,OAAOyK,KAAK,CAAC/L,MAAM,IAAI,CAAC;AAC1B;;;;;;UCjPA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN2C;AAE3CujB,MAAM,CAACxZ,YAAY,GAAGA,qDAAY,C","sources":["webpack://scorm-again/./node_modules/lodash.debounce/index.js","webpack://scorm-again/./src/BaseAPI.js","webpack://scorm-again/./src/Scorm2004API.js","webpack://scorm-again/./src/cmi/common.js","webpack://scorm-again/./src/cmi/scorm2004_cmi.js","webpack://scorm-again/./src/constants/api_constants.js","webpack://scorm-again/./src/constants/error_codes.js","webpack://scorm-again/./src/constants/language_constants.js","webpack://scorm-again/./src/constants/regex.js","webpack://scorm-again/./src/constants/response_constants.js","webpack://scorm-again/./src/exceptions.js","webpack://scorm-again/./src/utilities.js","webpack://scorm-again/webpack/bootstrap","webpack://scorm-again/webpack/runtime/compat get default export","webpack://scorm-again/webpack/runtime/define property getters","webpack://scorm-again/webpack/runtime/global","webpack://scorm-again/webpack/runtime/hasOwnProperty shorthand","webpack://scorm-again/webpack/runtime/make namespace object","webpack://scorm-again/./src/exports/scorm2004.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","// @flow\nimport {CMIArray} from './cmi/common';\nimport {ValidationError} from './exceptions';\nimport ErrorCodes from './constants/error_codes';\nimport APIConstants from './constants/api_constants';\nimport {unflatten} from './utilities';\nimport debounce from 'lodash.debounce';\n\nconst global_constants = APIConstants.global;\nconst scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Base API class for AICC, SCORM 1.2, and SCORM 2004. Should be considered\n * abstract, and never initialized on it's own.\n */\nexport default class BaseAPI {\n  #timeout;\n  #error_codes;\n  #settings = {\n    autocommit: false,\n    autocommitSeconds: 10,\n    asyncCommit: false,\n    sendBeaconCommit: false,\n    lmsCommitUrl: false,\n    dataCommitFormat: 'json', // valid formats are 'json' or 'flattened', 'params'\n    commitRequestDataType: 'application/json;charset=UTF-8',\n    autoProgress: false,\n    logLevel: global_constants.LOG_LEVEL_ERROR,\n    selfReportSessionTime: false,\n    alwaysSendTotalTime: false,\n    strict_errors: true,\n    xhrHeaders: {},\n    xhrWithCredentials: false,\n    responseHandler: function(xhr) {\n      let result;\n      if (typeof xhr !== 'undefined') {\n        result = JSON.parse(xhr.responseText);\n        if (result === null || !{}.hasOwnProperty.call(result, 'result')) {\n          result = {};\n          if (xhr.status === 200) {\n            result.result = global_constants.SCORM_TRUE;\n            result.errorCode = 0;\n          } else {\n            result.result = global_constants.SCORM_FALSE;\n            result.errorCode = 101;\n          }\n        }\n      }\n      return result;\n    },\n    requestHandler: function(commitObject) {\n      return commitObject;\n    },\n    onLogMessage: function(messageLevel, logMessage) {\n      switch (messageLevel) {\n        case global_constants.LOG_LEVEL_ERROR:\n          console.error(logMessage);\n          break;\n        case global_constants.LOG_LEVEL_WARNING:\n          console.warn(logMessage);\n          break;\n        case global_constants.LOG_LEVEL_INFO:\n          console.info(logMessage);\n          break;\n        case global_constants.LOG_LEVEL_DEBUG:\n          if (console.debug) {\n            console.debug(logMessage);\n          } else {\n            console.log(logMessage);\n          }\n          break;\n      }\n    },\n  };\n  cmi;\n  startingData: {};\n\n  /**\n   * Constructor for Base API class. Sets some shared API fields, as well as\n   * sets up options for the API.\n   * @param {object} error_codes\n   * @param {object} settings\n   */\n  constructor(error_codes, settings) {\n    if (new.target === BaseAPI) {\n      throw new TypeError('Cannot construct BaseAPI instances directly');\n    }\n    this.currentState = global_constants.STATE_NOT_INITIALIZED;\n    this.lastErrorCode = 0;\n    this.listenerArray = [];\n\n    this.#timeout = null;\n    this.#error_codes = error_codes;\n\n    this.settings = settings;\n    this.apiLogLevel = this.settings.logLevel;\n    this.selfReportSessionTime = this.settings.selfReportSessionTime;\n  }\n\n  /**\n   * Initialize the API\n   * @param {string} callbackName\n   * @param {string} initializeMessage\n   * @param {string} terminationMessage\n   * @return {string}\n   */\n  initialize(\n      callbackName: String,\n      initializeMessage?: String,\n      terminationMessage?: String) {\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.isInitialized()) {\n      this.throwSCORMError(this.#error_codes.INITIALIZED, initializeMessage);\n    } else if (this.isTerminated()) {\n      this.throwSCORMError(this.#error_codes.TERMINATED, terminationMessage);\n    } else {\n      if (this.selfReportSessionTime) {\n        this.cmi.setStartTime();\n      }\n\n      this.currentState = global_constants.STATE_INITIALIZED;\n      this.lastErrorCode = 0;\n      returnValue = global_constants.SCORM_TRUE;\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Getter for #error_codes\n   * @return {object}\n   */\n  get error_codes() {\n    return this.#error_codes;\n  }\n\n  /**\n   * Getter for #settings\n   * @return {object}\n   */\n  get settings() {\n    return this.#settings;\n  }\n\n  /**\n   * Setter for #settings\n   * @param {object} settings\n   */\n  set settings(settings: Object) {\n    this.#settings = {...this.#settings, ...settings};\n  }\n\n  /**\n   * Terminates the current run of the API\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @return {string}\n   */\n  terminate(\n      callbackName: String,\n      checkTerminated: boolean) {\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.checkState(checkTerminated,\n        this.#error_codes.TERMINATION_BEFORE_INIT,\n        this.#error_codes.MULTIPLE_TERMINATION)) {\n      this.currentState = global_constants.STATE_TERMINATED;\n\n      const result = this.storeData(true);\n      if (!this.settings.sendBeaconCommit && !this.settings.asyncCommit &&\n        typeof result.errorCode !== 'undefined' && result.errorCode > 0) {\n        this.throwSCORMError(result.errorCode);\n      }\n      returnValue = (typeof result !== 'undefined' && result.result) ?\n        result.result : global_constants.SCORM_FALSE;\n\n      if (checkTerminated) this.lastErrorCode = 0;\n\n      returnValue = global_constants.SCORM_TRUE;\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Get the value of the CMIElement.\n   *\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  getValue(\n      callbackName: String,\n      checkTerminated: boolean,\n      CMIElement: String) {\n    let returnValue;\n\n    if (this.checkState(checkTerminated,\n        this.#error_codes.RETRIEVE_BEFORE_INIT,\n        this.#error_codes.RETRIEVE_AFTER_TERM)) {\n      if (checkTerminated) this.lastErrorCode = 0;\n      try {\n        returnValue = this.getCMIValue(CMIElement);\n      } catch (e) {\n        if (e instanceof ValidationError) {\n          this.lastErrorCode = e.errorCode;\n          returnValue = global_constants.SCORM_FALSE;\n        } else {\n          if (e.message) {\n            console.error(e.message);\n          } else {\n            console.error(e);\n          }\n          this.throwSCORMError(this.#error_codes.GENERAL);\n        }\n      }\n      this.processListeners(callbackName, CMIElement);\n    }\n\n    this.apiLog(callbackName, CMIElement, ': returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Sets the value of the CMIElement.\n   *\n   * @param {string} callbackName\n   * @param {string} commitCallback\n   * @param {boolean} checkTerminated\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  setValue(\n      callbackName: String,\n      commitCallback: String,\n      checkTerminated: boolean,\n      CMIElement,\n      value) {\n    if (value !== undefined) {\n      value = String(value);\n    }\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.checkState(checkTerminated, this.#error_codes.STORE_BEFORE_INIT,\n        this.#error_codes.STORE_AFTER_TERM)) {\n      if (checkTerminated) this.lastErrorCode = 0;\n      try {\n        returnValue = this.setCMIValue(CMIElement, value);\n      } catch (e) {\n        if (e instanceof ValidationError) {\n          this.lastErrorCode = e.errorCode;\n          returnValue = global_constants.SCORM_FALSE;\n        } else {\n          if (e.message) {\n            console.error(e.message);\n          } else {\n            console.error(e);\n          }\n          this.throwSCORMError(this.#error_codes.GENERAL);\n        }\n      }\n      this.processListeners(callbackName, CMIElement, value);\n    }\n\n    if (returnValue === undefined) {\n      returnValue = global_constants.SCORM_FALSE;\n    }\n\n    // If we didn't have any errors while setting the data, go ahead and\n    // schedule a commit, if autocommit is turned on\n    if (String(this.lastErrorCode) === '0') {\n      if (this.settings.autocommit && !this.#timeout) {\n        this.scheduleCommit(this.settings.autocommitSeconds * 1000, commitCallback);\n      }\n    }\n\n    this.apiLog(callbackName, CMIElement,\n        ': ' + value + ': result: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Orders LMS to store all content parameters\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @return {string}\n   */\n  commit(\n      callbackName: String,\n      checkTerminated: boolean) {\n    this.clearScheduledCommit();\n\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.checkState(checkTerminated, this.#error_codes.COMMIT_BEFORE_INIT,\n        this.#error_codes.COMMIT_AFTER_TERM)) {\n      const result = this.storeData(false);\n      if (!this.settings.sendBeaconCommit && !this.settings.asyncCommit &&\n        result.errorCode && result.errorCode > 0) {\n        this.throwSCORMError(result.errorCode);\n      }\n      returnValue = (typeof result !== 'undefined' && result.result) ?\n        result.result : global_constants.SCORM_FALSE;\n\n      this.apiLog(callbackName, 'HttpRequest', ' Result: ' + returnValue,\n          global_constants.LOG_LEVEL_DEBUG);\n\n      if (checkTerminated) this.lastErrorCode = 0;\n\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns last error code\n   * @param {string} callbackName\n   * @return {string}\n   */\n  getLastError(callbackName: String) {\n    const returnValue = String(this.lastErrorCode);\n\n    this.processListeners(callbackName);\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns the errorNumber error description\n   *\n   * @param {string} callbackName\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  getErrorString(callbackName: String, CMIErrorCode) {\n    let returnValue = '';\n\n    if (CMIErrorCode !== null && CMIErrorCode !== '') {\n      returnValue = this.getLmsErrorMessageDetails(CMIErrorCode);\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns a comprehensive description of the errorNumber error.\n   *\n   * @param {string} callbackName\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  getDiagnostic(callbackName: String, CMIErrorCode) {\n    let returnValue = '';\n\n    if (CMIErrorCode !== null && CMIErrorCode !== '') {\n      returnValue = this.getLmsErrorMessageDetails(CMIErrorCode, true);\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Checks the LMS state and ensures it has been initialized.\n   *\n   * @param {boolean} checkTerminated\n   * @param {number} beforeInitError\n   * @param {number} afterTermError\n   * @return {boolean}\n   */\n  checkState(\n      checkTerminated: boolean,\n      beforeInitError: number,\n      afterTermError?: number) {\n    if (this.isNotInitialized()) {\n      this.throwSCORMError(beforeInitError);\n      return false;\n    } else if (checkTerminated && this.isTerminated()) {\n      this.throwSCORMError(afterTermError);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Logging for all SCORM actions\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {string} logMessage\n   * @param {number}messageLevel\n   */\n  apiLog(\n      functionName: String,\n      CMIElement: String,\n      logMessage: String,\n      messageLevel: number) {\n    logMessage = this.formatMessage(functionName, CMIElement, logMessage);\n\n    if (messageLevel >= this.apiLogLevel) {\n      this.settings.onLogMessage(messageLevel, logMessage);\n    }\n  }\n\n  /**\n   * Formats the SCORM messages for easy reading\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {string} message\n   * @return {string}\n   */\n  formatMessage(functionName: String, CMIElement: String, message: String) {\n    const baseLength = 20;\n    let messageString = '';\n\n    messageString += functionName;\n\n    let fillChars = baseLength - messageString.length;\n\n    for (let i = 0; i < fillChars; i++) {\n      messageString += ' ';\n    }\n\n    messageString += ': ';\n\n    if (CMIElement) {\n      const CMIElementBaseLength = 70;\n\n      messageString += CMIElement;\n\n      fillChars = CMIElementBaseLength - messageString.length;\n\n      for (let j = 0; j < fillChars; j++) {\n        messageString += ' ';\n      }\n    }\n\n    if (message) {\n      messageString += message;\n    }\n\n    return messageString;\n  }\n\n  /**\n   * Checks to see if {str} contains {tester}\n   *\n   * @param {string} str String to check against\n   * @param {string} tester String to check for\n   * @return {boolean}\n   */\n  stringMatches(str: String, tester: String) {\n    return str && tester && str.match(tester);\n  }\n\n  /**\n   * Check to see if the specific object has the given property\n   * @param {*} refObject\n   * @param {string} attribute\n   * @return {boolean}\n   * @private\n   */\n  _checkObjectHasProperty(refObject, attribute: String) {\n    return Object.hasOwnProperty.call(refObject, attribute) ||\n      Object.getOwnPropertyDescriptor(\n          Object.getPrototypeOf(refObject), attribute) ||\n      (attribute in refObject);\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {(string|number)} _errorNumber\n   * @param {boolean} _detail\n   * @return {string}\n   * @abstract\n   */\n  getLmsErrorMessageDetails(_errorNumber, _detail) {\n    throw new Error(\n        'The getLmsErrorMessageDetails method has not been implemented');\n  }\n\n  /**\n   * Gets the value for the specific element.\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {string} _CMIElement\n   * @return {string}\n   * @abstract\n   */\n  getCMIValue(_CMIElement) {\n    throw new Error('The getCMIValue method has not been implemented');\n  }\n\n  /**\n   * Sets the value for the specific element.\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {string} _CMIElement\n   * @param {any} _value\n   * @return {string}\n   * @abstract\n   */\n  setCMIValue(_CMIElement, _value) {\n    throw new Error('The setCMIValue method has not been implemented');\n  }\n\n  /**\n   * Shared API method to set a valid for a given element.\n   *\n   * @param {string} methodName\n   * @param {boolean} scorm2004\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  _commonSetCMIValue(\n      methodName: String, scorm2004: boolean, CMIElement, value) {\n    if (!CMIElement || CMIElement === '') {\n      return global_constants.SCORM_FALSE;\n    }\n\n    const structure = CMIElement.split('.');\n    let refObject = this;\n    let returnValue = global_constants.SCORM_FALSE;\n    let foundFirstIndex = false;\n\n    const invalidErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;\n    const invalidErrorCode = scorm2004 ?\n      this.#error_codes.UNDEFINED_DATA_MODEL :\n      this.#error_codes.GENERAL;\n\n    for (let i = 0; i < structure.length; i++) {\n      const attribute = structure[i];\n\n      if (i === structure.length - 1) {\n        if (scorm2004 && (attribute.substr(0, 8) === '{target=') &&\n          (typeof refObject._isTargetValid == 'function')) {\n          this.throwSCORMError(this.#error_codes.READ_ONLY_ELEMENT);\n        } else if (!this._checkObjectHasProperty(refObject, attribute)) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n        } else {\n          if (this.isInitialized() &&\n            this.stringMatches(CMIElement, '\\\\.correct_responses\\\\.\\\\d+')) {\n            this.validateCorrectResponse(CMIElement, value);\n          }\n\n          if (!scorm2004 || this.lastErrorCode === 0) {\n            refObject[attribute] = value;\n            returnValue = global_constants.SCORM_TRUE;\n          }\n        }\n      } else {\n        refObject = refObject[attribute];\n        if (!refObject) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n          break;\n        }\n\n        if (refObject instanceof CMIArray) {\n          const index = parseInt(structure[i + 1], 10);\n\n          // SCO is trying to set an item on an array\n          if (!isNaN(index)) {\n            const item = refObject.childArray[index];\n\n            if (item) {\n              refObject = item;\n              foundFirstIndex = true;\n            } else {\n              const newChild = this.getChildElement(CMIElement, value,\n                  foundFirstIndex);\n              foundFirstIndex = true;\n\n              if (!newChild) {\n                this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n              } else {\n                if (refObject.initialized) newChild.initialize();\n\n                refObject.childArray.push(newChild);\n                refObject = newChild;\n              }\n            }\n\n            // Have to update i value to skip the array position\n            i++;\n          }\n        }\n      }\n    }\n\n    if (returnValue === global_constants.SCORM_FALSE) {\n      this.apiLog(methodName, null,\n          `There was an error setting the value for: ${CMIElement}, value of: ${value}`,\n          global_constants.LOG_LEVEL_WARNING);\n    }\n\n    return returnValue;\n  }\n\n  /**\n   * Abstract method for validating that a response is correct.\n   *\n   * @param {string} _CMIElement\n   * @param {*} _value\n   */\n  validateCorrectResponse(_CMIElement, _value) {\n    // just a stub method\n  }\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   * APIs that inherit BaseAPI should override this method.\n   *\n   * @param {string} _CMIElement - unused\n   * @param {*} _value - unused\n   * @param {boolean} _foundFirstIndex - unused\n   * @return {*}\n   * @abstract\n   */\n  getChildElement(_CMIElement, _value, _foundFirstIndex) {\n    throw new Error('The getChildElement method has not been implemented');\n  }\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} methodName\n   * @param {boolean} scorm2004\n   * @param {string} CMIElement\n   * @return {*}\n   */\n  _commonGetCMIValue(methodName: String, scorm2004: boolean, CMIElement) {\n    if (!CMIElement || CMIElement === '') {\n      return '';\n    }\n\n    const structure = CMIElement.split('.');\n    let refObject = this;\n    let attribute = null;\n\n    const uninitializedErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) has not been initialized.`;\n    const invalidErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;\n    const invalidErrorCode = scorm2004 ?\n      this.#error_codes.UNDEFINED_DATA_MODEL :\n      this.#error_codes.GENERAL;\n\n    for (let i = 0; i < structure.length; i++) {\n      attribute = structure[i];\n\n      if (!scorm2004) {\n        if (i === structure.length - 1) {\n          if (!this._checkObjectHasProperty(refObject, attribute)) {\n            this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n            return;\n          }\n        }\n      } else {\n        if ((String(attribute).substr(0, 8) === '{target=') &&\n          (typeof refObject._isTargetValid == 'function')) {\n          const target = String(attribute).substr(8, String(attribute).length - 9);\n          return refObject._isTargetValid(target);\n        } else if (!this._checkObjectHasProperty(refObject, attribute)) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n          return;\n        }\n      }\n\n      refObject = refObject[attribute];\n      if (refObject === undefined) {\n        this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n        break;\n      }\n\n      if (refObject instanceof CMIArray) {\n        const index = parseInt(structure[i + 1], 10);\n\n        // SCO is trying to set an item on an array\n        if (!isNaN(index)) {\n          const item = refObject.childArray[index];\n\n          if (item) {\n            refObject = item;\n          } else {\n            this.throwSCORMError(this.#error_codes.VALUE_NOT_INITIALIZED,\n                uninitializedErrorMessage);\n            break;\n          }\n\n          // Have to update i value to skip the array position\n          i++;\n        }\n      }\n    }\n\n    if (refObject === null || refObject === undefined) {\n      if (!scorm2004) {\n        if (attribute === '_children') {\n          this.throwSCORMError(scorm12_error_codes.CHILDREN_ERROR);\n        } else if (attribute === '_count') {\n          this.throwSCORMError(scorm12_error_codes.COUNT_ERROR);\n        }\n      }\n    } else {\n      return refObject;\n    }\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_INITIALIZED\n   *\n   * @return {boolean}\n   */\n  isInitialized() {\n    return this.currentState === global_constants.STATE_INITIALIZED;\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_NOT_INITIALIZED\n   *\n   * @return {boolean}\n   */\n  isNotInitialized() {\n    return this.currentState === global_constants.STATE_NOT_INITIALIZED;\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_TERMINATED\n   *\n   * @return {boolean}\n   */\n  isTerminated() {\n    return this.currentState === global_constants.STATE_TERMINATED;\n  }\n\n  /**\n   * Provides a mechanism for attaching to a specific SCORM event\n   *\n   * @param {string} listenerName\n   * @param {function} callback\n   */\n  on(listenerName: String, callback: function) {\n    if (!callback) return;\n\n    const listenerFunctions = listenerName.split(' ');\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split('.');\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + '.', '');\n      }\n\n      this.listenerArray.push({\n        functionName: functionName,\n        CMIElement: CMIElement,\n        callback: callback,\n      });\n\n      this.apiLog('on', functionName, `Added event listener: ${this.listenerArray.length}`, global_constants.LOG_LEVEL_INFO);\n    }\n  }\n\n  /**\n   * Provides a mechanism for detaching a specific SCORM event listener\n   *\n   * @param {string} listenerName\n   * @param {function} callback\n   */\n  off(listenerName: String, callback: function) {\n    if (!callback) return;\n\n    const listenerFunctions = listenerName.split(' ');\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split('.');\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + '.', '');\n      }\n\n      const removeIndex = this.listenerArray.findIndex((obj) =>\n        obj.functionName === functionName &&\n        obj.CMIElement === CMIElement &&\n        obj.callback === callback,\n      );\n      if (removeIndex !== -1) {\n        this.listenerArray.splice(removeIndex, 1);\n        this.apiLog('off', functionName, `Removed event listener: ${this.listenerArray.length}`, global_constants.LOG_LEVEL_INFO);\n      }\n    }\n  }\n\n  /**\n   * Provides a mechanism for clearing all listeners from a specific SCORM event\n   *\n   * @param {string} listenerName\n   */\n  clear(listenerName: String) {\n    const listenerFunctions = listenerName.split(' ');\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split('.');\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + '.', '');\n      }\n\n      this.listenerArray = this.listenerArray.filter((obj) =>\n        obj.functionName !== functionName &&\n        obj.CMIElement !== CMIElement,\n      );\n    }\n  }\n\n  /**\n   * Processes any 'on' listeners that have been created\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {*} value\n   */\n  processListeners(functionName: String, CMIElement: String, value: any) {\n    this.apiLog(functionName, CMIElement, value);\n    for (let i = 0; i < this.listenerArray.length; i++) {\n      const listener = this.listenerArray[i];\n      const functionsMatch = listener.functionName === functionName;\n      const listenerHasCMIElement = !!listener.CMIElement;\n      let CMIElementsMatch = false;\n      if (CMIElement && listener.CMIElement &&\n        listener.CMIElement.substring(listener.CMIElement.length - 1) ===\n        '*') {\n        CMIElementsMatch = CMIElement.indexOf(listener.CMIElement.substring(0,\n            listener.CMIElement.length - 1)) === 0;\n      } else {\n        CMIElementsMatch = listener.CMIElement === CMIElement;\n      }\n\n      if (functionsMatch && (!listenerHasCMIElement || CMIElementsMatch)) {\n        listener.callback(CMIElement, value);\n      }\n    }\n  }\n\n  /**\n   * Throws a SCORM error\n   *\n   * @param {number} errorNumber\n   * @param {string} message\n   */\n  throwSCORMError(errorNumber: number, message: String) {\n    if (!message) {\n      message = this.getLmsErrorMessageDetails(errorNumber);\n    }\n\n    this.apiLog('throwSCORMError', null, errorNumber + ': ' + message,\n        global_constants.LOG_LEVEL_ERROR);\n\n    this.lastErrorCode = String(errorNumber);\n  }\n\n  /**\n   * Clears the last SCORM error code on success.\n   *\n   * @param {string} success\n   */\n  clearSCORMError(success: String) {\n    if (success !== undefined && success !== global_constants.SCORM_FALSE) {\n      this.lastErrorCode = 0;\n    }\n  }\n\n  /**\n   * Attempts to store the data to the LMS, logs data if no LMS configured\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {boolean} _calculateTotalTime\n   * @return {string}\n   * @abstract\n   */\n  storeData(_calculateTotalTime) {\n    throw new Error(\n        'The storeData method has not been implemented');\n  }\n\n  /**\n   * Load the CMI from a flattened JSON object\n   * @param {object} json\n   * @param {string} CMIElement\n   */\n  loadFromFlattenedJSON(json, CMIElement) {\n    if (!this.isNotInitialized()) {\n      console.error(\n          'loadFromFlattenedJSON can only be called before the call to lmsInitialize.');\n      return;\n    }\n\n    /**\n     * Test match pattern.\n     *\n     * @param {string} a\n     * @param {string} c\n     * @param {RegExp} a_pattern\n     * @return {number}\n     */\n    function testPattern(a, c, a_pattern) {\n      const a_match = a.match(a_pattern);\n\n      let c_match;\n      if (a_match !== null && (c_match = c.match(a_pattern)) !== null) {\n        const a_num = Number(a_match[2]);\n        const c_num = Number(c_match[2]);\n        if (a_num === c_num) {\n          if (a_match[3] === 'id') {\n            return -1;\n          } else if (a_match[3] === 'type') {\n            if (c_match[3] === 'id') {\n              return 1;\n            } else {\n              return -1;\n            }\n          } else {\n            return 1;\n          }\n        }\n        return a_num - c_num;\n      }\n\n      return null;\n    }\n\n    const int_pattern = /^(cmi\\.interactions\\.)(\\d+)\\.(.*)$/;\n    const obj_pattern = /^(cmi\\.objectives\\.)(\\d+)\\.(.*)$/;\n\n    const result = Object.keys(json).map(function(key) {\n      return [String(key), json[key]];\n    });\n\n    // CMI interactions need to have id and type loaded before any other fields\n    result.sort(function([a, b], [c, d]) {\n      let test;\n      if ((test = testPattern(a, c, int_pattern)) !== null) {\n        return test;\n      }\n      if ((test = testPattern(a, c, obj_pattern)) !== null) {\n        return test;\n      }\n\n      if (a < c) {\n        return -1;\n      }\n      if (a > c) {\n        return 1;\n      }\n      return 0;\n    });\n\n    let obj;\n    result.forEach((element) => {\n      obj = {};\n      obj[element[0]] = element[1];\n      this.loadFromJSON(unflatten(obj), CMIElement);\n    });\n  }\n\n  /**\n   * Loads CMI data from a JSON object.\n   *\n   * @param {object} json\n   * @param {string} CMIElement\n   */\n  loadFromJSON(json, CMIElement) {\n    if (!this.isNotInitialized()) {\n      console.error(\n          'loadFromJSON can only be called before the call to lmsInitialize.');\n      return;\n    }\n\n    CMIElement = CMIElement !== undefined ? CMIElement : 'cmi';\n\n    this.startingData = json;\n\n    // could this be refactored down to flatten(json) then setCMIValue on each?\n    for (const key in json) {\n      if ({}.hasOwnProperty.call(json, key) && json[key]) {\n        const currentCMIElement = (CMIElement ? CMIElement + '.' : '') + key;\n        const value = json[key];\n\n        if (value['childArray']) {\n          for (let i = 0; i < value['childArray'].length; i++) {\n            this.loadFromJSON(value['childArray'][i],\n                currentCMIElement + '.' + i);\n          }\n        } else if (value.constructor === Object) {\n          this.loadFromJSON(value, currentCMIElement);\n        } else {\n          this.setCMIValue(currentCMIElement, value);\n        }\n      }\n    }\n  }\n\n  /**\n   * Render the CMI object to JSON for sending to an LMS.\n   *\n   * @return {string}\n   */\n  renderCMIToJSONString() {\n    const cmi = this.cmi;\n    // Do we want/need to return fields that have no set value?\n    // return JSON.stringify({ cmi }, (k, v) => v === undefined ? null : v, 2);\n    return JSON.stringify({cmi});\n  }\n\n  /**\n   * Returns a JS object representing the current cmi\n   * @return {object}\n   */\n  renderCMIToJSONObject() {\n    // Do we want/need to return fields that have no set value?\n    // return JSON.stringify({ cmi }, (k, v) => v === undefined ? null : v, 2);\n    return JSON.parse(this.renderCMIToJSONString());\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {boolean} _terminateCommit\n   * @return {*}\n   * @abstract\n   */\n  renderCommitCMI(_terminateCommit) {\n    throw new Error(\n        'The storeData method has not been implemented');\n  }\n\n  /**\n   * Send the request to the LMS\n   * @param {string} url\n   * @param {object|Array} params\n   * @param {boolean} immediate\n   * @return {object}\n   */\n  processHttpRequest(url: String, params, immediate = false) {\n    const api = this;\n    const process = function(url, params, settings, error_codes) {\n      const genericError = {\n        'result': global_constants.SCORM_FALSE,\n        'errorCode': error_codes.GENERAL,\n      };\n\n      let result;\n      if (!settings.sendBeaconCommit) {\n        const httpReq = new XMLHttpRequest();\n        httpReq.open('POST', url, settings.asyncCommit);\n\n        if (Object.keys(settings.xhrHeaders).length) {\n          Object.keys(settings.xhrHeaders).forEach((header) => {\n            httpReq.setRequestHeader(header, settings.xhrHeaders[header]);\n          });\n        }\n\n        httpReq.withCredentials = settings.xhrWithCredentials;\n\n        if (settings.asyncCommit) {\n          httpReq.onload = function(e) {\n            if (typeof settings.responseHandler === 'function') {\n              result = settings.responseHandler(httpReq);\n            } else {\n              result = JSON.parse(httpReq.responseText);\n            }\n          };\n        }\n        try {\n          params = settings.requestHandler(params);\n          if (params instanceof Array) {\n            httpReq.setRequestHeader('Content-Type',\n                'application/x-www-form-urlencoded');\n            httpReq.send(params.join('&'));\n          } else {\n            httpReq.setRequestHeader('Content-Type',\n                settings.commitRequestDataType);\n            httpReq.send(JSON.stringify(params));\n          }\n\n          if (!settings.asyncCommit) {\n            if (typeof settings.responseHandler === 'function') {\n              result = settings.responseHandler(httpReq);\n            } else {\n              result = JSON.parse(httpReq.responseText);\n            }\n          } else {\n            result = {};\n            result.result = global_constants.SCORM_TRUE;\n            result.errorCode = 0;\n            api.processListeners('CommitSuccess');\n            return result;\n          }\n        } catch (e) {\n          console.error(e);\n          api.processListeners('CommitError');\n          return genericError;\n        }\n      } else {\n        try {\n          params = settings.requestHandler(params);\n          fetch(url, {\n            method: 'POST',\n            body: params instanceof Array ? params.join('&') : JSON.stringify(params),\n            headers: {\n              ...settings.xhrHeaders,\n              'Content-Type': settings.commitRequestDataType,\n            },\n            credentials: settings.xhrWithCredentials ? 'include' : undefined,\n            keepalive: true,\n          });\n          result = {};\n          result.result = global_constants.SCORM_TRUE;\n          result.errorCode = 0;\n        } catch (e) {\n          console.error(e);\n          api.processListeners('CommitError');\n          return genericError;\n        }\n      }\n\n      if (typeof result === 'undefined') {\n        api.processListeners('CommitError');\n        return genericError;\n      }\n\n      if (result.result === true ||\n        result.result === global_constants.SCORM_TRUE) {\n        api.processListeners('CommitSuccess');\n      } else {\n        api.processListeners('CommitError');\n      }\n\n      return result;\n    };\n\n    if (typeof debounce !== 'undefined') {\n      const debounced = debounce(process, 500);\n      debounced(url, params, this.settings, this.error_codes);\n\n      // if we're terminating, go ahead and commit immediately\n      if (immediate) {\n        debounced.flush();\n      }\n\n      return {\n        result: global_constants.SCORM_TRUE,\n        errorCode: 0,\n      };\n    } else {\n      return process(url, params, this.settings, this.error_codes);\n    }\n  }\n\n  /**\n   * Throws a SCORM error\n   *\n   * @param {number} when - the number of milliseconds to wait before committing\n   * @param {string} callback - the name of the commit event callback\n   */\n  scheduleCommit(when: number, callback: string) {\n    this.#timeout = new ScheduledCommit(this, when, callback);\n    this.apiLog('scheduleCommit', '', 'scheduled',\n        global_constants.LOG_LEVEL_DEBUG);\n  }\n\n  /**\n   * Clears and cancels any currently scheduled commits\n   */\n  clearScheduledCommit() {\n    if (this.#timeout) {\n      this.#timeout.cancel();\n      this.#timeout = null;\n      this.apiLog('clearScheduledCommit', '', 'cleared',\n          global_constants.LOG_LEVEL_DEBUG);\n    }\n  }\n}\n\n/**\n * Private class that wraps a timeout call to the commit() function\n */\nclass ScheduledCommit {\n  #API;\n  #cancelled = false;\n  #timeout;\n  #callback;\n\n  /**\n   * Constructor for ScheduledCommit\n   * @param {BaseAPI} API\n   * @param {number} when\n   * @param {string} callback\n   */\n  constructor(API: any, when: number, callback: string) {\n    this.#API = API;\n    this.#timeout = setTimeout(this.wrapper.bind(this), when);\n    this.#callback = callback;\n  }\n\n  /**\n   * Cancel any currently scheduled commit\n   */\n  cancel() {\n    this.#cancelled = true;\n    if (this.#timeout) {\n      clearTimeout(this.#timeout);\n    }\n  }\n\n  /**\n   * Wrap the API commit call to check if the call has already been cancelled\n   */\n  wrapper() {\n    if (!this.#cancelled) {\n      this.#API.commit(this.#callback);\n    }\n  }\n}\n","// @flow\nimport BaseAPI from './BaseAPI';\nimport {\n  ADL,\n  CMI,\n  CMICommentsObject,\n  CMIInteractionsCorrectResponsesObject,\n  CMIInteractionsObject,\n  CMIInteractionsObjectivesObject,\n  CMIObjectivesObject,\n} from './cmi/scorm2004_cmi';\nimport * as Utilities from './utilities';\nimport APIConstants from './constants/api_constants';\nimport ErrorCodes from './constants/error_codes';\nimport Responses from './constants/response_constants';\nimport ValidLanguages from './constants/language_constants';\nimport Regex from './constants/regex';\n\nconst scorm2004_constants = APIConstants.scorm2004;\nconst global_constants = APIConstants.global;\nconst scorm2004_error_codes = ErrorCodes.scorm2004;\nconst correct_responses = Responses.correct;\nconst scorm2004_regex = Regex.scorm2004;\n\n/**\n * API class for SCORM 2004\n */\nexport default class Scorm2004API extends BaseAPI {\n  #version: '1.0';\n\n  /**\n   * Constructor for SCORM 2004 API\n   * @param {object} settings\n   */\n  constructor(settings: {}) {\n    const finalSettings = {\n      ...{\n        mastery_override: false,\n      }, ...settings,\n    };\n\n    super(scorm2004_error_codes, finalSettings);\n\n    this.cmi = new CMI();\n    this.adl = new ADL();\n\n    // Rename functions to match 2004 Spec and expose to modules\n    this.Initialize = this.lmsInitialize;\n    this.Terminate = this.lmsTerminate;\n    this.GetValue = this.lmsGetValue;\n    this.SetValue = this.lmsSetValue;\n    this.Commit = this.lmsCommit;\n    this.GetLastError = this.lmsGetLastError;\n    this.GetErrorString = this.lmsGetErrorString;\n    this.GetDiagnostic = this.lmsGetDiagnostic;\n  }\n\n  /**\n   * Getter for #version\n   * @return {string}\n   */\n  get version() {\n    return this.#version;\n  }\n\n  /**\n   * @return {string} bool\n   */\n  lmsInitialize() {\n    this.cmi.initialize();\n    return this.initialize('Initialize');\n  }\n\n  /**\n   * @return {string} bool\n   */\n  lmsTerminate() {\n    const result = this.terminate('Terminate', true);\n\n    if (result === global_constants.SCORM_TRUE) {\n      if (this.adl.nav.request !== '_none_') {\n        switch (this.adl.nav.request) {\n          case 'continue':\n            this.processListeners('SequenceNext');\n            break;\n          case 'previous':\n            this.processListeners('SequencePrevious');\n            break;\n          case 'choice':\n            this.processListeners('SequenceChoice');\n            break;\n          case 'exit':\n            this.processListeners('SequenceExit');\n            break;\n          case 'exitAll':\n            this.processListeners('SequenceExitAll');\n            break;\n          case 'abandon':\n            this.processListeners('SequenceAbandon');\n            break;\n          case 'abandonAll':\n            this.processListeners('SequenceAbandonAll');\n            break;\n        }\n      } else if (this.settings.autoProgress) {\n        this.processListeners('SequenceNext');\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  lmsGetValue(CMIElement) {\n    return this.getValue('GetValue', true, CMIElement);\n  }\n\n  /**\n   * @param {string} CMIElement\n   * @param {any} value\n   * @return {string}\n   */\n  lmsSetValue(CMIElement, value) {\n    return this.setValue('SetValue', 'Commit', true, CMIElement, value);\n  }\n\n  /**\n   * Orders LMS to store all content parameters\n   *\n   * @return {string} bool\n   */\n  lmsCommit() {\n    return this.commit('Commit');\n  }\n\n  /**\n   * Returns last error code\n   *\n   * @return {string}\n   */\n  lmsGetLastError() {\n    return this.getLastError('GetLastError');\n  }\n\n  /**\n   * Returns the errorNumber error description\n   *\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetErrorString(CMIErrorCode) {\n    return this.getErrorString('GetErrorString', CMIErrorCode);\n  }\n\n  /**\n   * Returns a comprehensive description of the errorNumber error.\n   *\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetDiagnostic(CMIErrorCode) {\n    return this.getDiagnostic('GetDiagnostic', CMIErrorCode);\n  }\n\n  /**\n   * Sets a value on the CMI Object\n   *\n   * @param {string} CMIElement\n   * @param {any} value\n   * @return {string}\n   */\n  setCMIValue(CMIElement, value) {\n    return this._commonSetCMIValue('SetValue', true, CMIElement, value);\n  }\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   *\n   * @param {string} CMIElement\n   * @param {any} value\n   * @param {boolean} foundFirstIndex\n   * @return {any}\n   */\n  getChildElement(CMIElement, value, foundFirstIndex) {\n    let newChild;\n\n    if (this.stringMatches(CMIElement, 'cmi\\\\.objectives\\\\.\\\\d+')) {\n      newChild = new CMIObjectivesObject();\n    } else if (foundFirstIndex && this.stringMatches(CMIElement,\n        'cmi\\\\.interactions\\\\.\\\\d+\\\\.correct_responses\\\\.\\\\d+')) {\n      const parts = CMIElement.split('.');\n      const index = Number(parts[2]);\n      const interaction = this.cmi.interactions.childArray[index];\n      if (this.isInitialized()) {\n        if (!interaction.type) {\n          this.throwSCORMError(\n              scorm2004_error_codes.DEPENDENCY_NOT_ESTABLISHED);\n        } else {\n          this.checkDuplicateChoiceResponse(interaction, value);\n\n          const response_type = correct_responses[interaction.type];\n          if (response_type) {\n            this.checkValidResponseType(response_type, value, interaction.type);\n          } else {\n            this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE,\n                'Incorrect Response Type: ' + interaction.type);\n          }\n        }\n      }\n      if (this.lastErrorCode === 0) {\n        newChild = new CMIInteractionsCorrectResponsesObject();\n      }\n    } else if (foundFirstIndex && this.stringMatches(CMIElement,\n        'cmi\\\\.interactions\\\\.\\\\d+\\\\.objectives\\\\.\\\\d+')) {\n      newChild = new CMIInteractionsObjectivesObject();\n    } else if (!foundFirstIndex &&\n        this.stringMatches(CMIElement, 'cmi\\\\.interactions\\\\.\\\\d+')) {\n      newChild = new CMIInteractionsObject();\n    } else if (this.stringMatches(CMIElement,\n        'cmi\\\\.comments_from_learner\\\\.\\\\d+')) {\n      newChild = new CMICommentsObject();\n    } else if (this.stringMatches(CMIElement,\n        'cmi\\\\.comments_from_lms\\\\.\\\\d+')) {\n      newChild = new CMICommentsObject(true);\n    }\n\n    return newChild;\n  }\n\n  /**\n   * Checks for valid response types\n   * @param {object} response_type\n   * @param {any} value\n   * @param {string} interaction_type\n   */\n  checkValidResponseType(response_type, value, interaction_type) {\n    let nodes = [];\n    if (response_type?.delimiter) {\n      nodes = String(value).split(response_type.delimiter);\n    } else {\n      nodes[0] = value;\n    }\n\n    if (nodes.length > 0 && nodes.length <= response_type.max) {\n      this.checkCorrectResponseValue(interaction_type, nodes, value);\n    } else if (nodes.length > response_type.max) {\n      this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE,\n          'Data Model Element Pattern Too Long');\n    }\n  }\n\n  /**\n   * Checks for duplicate 'choice' responses.\n   * @param {CMIInteractionsObject} interaction\n   * @param {any} value\n   */\n  checkDuplicateChoiceResponse(interaction, value) {\n    const interaction_count = interaction.correct_responses._count;\n    if (interaction.type === 'choice') {\n      for (let i = 0; i < interaction_count && this.lastErrorCode ===\n      0; i++) {\n        const response = interaction.correct_responses.childArray[i];\n        if (response.pattern === value) {\n          this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE);\n        }\n      }\n    }\n  }\n\n  /**\n   * Validate correct response.\n   * @param {string} CMIElement\n   * @param {*} value\n   */\n  validateCorrectResponse(CMIElement, value) {\n    const parts = CMIElement.split('.');\n    const index = Number(parts[2]);\n    const pattern_index = Number(parts[4]);\n    const interaction = this.cmi.interactions.childArray[index];\n\n    const interaction_count = interaction.correct_responses._count;\n    this.checkDuplicateChoiceResponse(interaction, value);\n\n    const response_type = correct_responses[interaction.type];\n    if (typeof response_type.limit === 'undefined' || interaction_count <=\n        response_type.limit) {\n      this.checkValidResponseType(response_type, value, interaction.type);\n\n      if (this.lastErrorCode === 0 &&\n          (!response_type.duplicate ||\n              !this.checkDuplicatedPattern(interaction.correct_responses,\n                  pattern_index, value)) ||\n          (this.lastErrorCode === 0 && value === '')) {\n        // do nothing, we want the inverse\n      } else {\n        if (this.lastErrorCode === 0) {\n          this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE,\n              'Data Model Element Pattern Already Exists');\n        }\n      }\n    } else {\n      this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE,\n          'Data Model Element Collection Limit Reached');\n    }\n  }\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} CMIElement\n   * @return {*}\n   */\n  getCMIValue(CMIElement) {\n    return this._commonGetCMIValue('GetValue', true, CMIElement);\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber.\n   *\n   * @param {(string|number)} errorNumber\n   * @param {boolean} detail\n   * @return {string}\n   */\n  getLmsErrorMessageDetails(errorNumber, detail) {\n    let basicMessage = '';\n    let detailMessage = '';\n\n    // Set error number to string since inconsistent from modules if string or number\n    errorNumber = String(errorNumber);\n    if (scorm2004_constants.error_descriptions[errorNumber]) {\n      basicMessage = scorm2004_constants.error_descriptions[errorNumber].basicMessage;\n      detailMessage = scorm2004_constants.error_descriptions[errorNumber].detailMessage;\n    }\n\n    return detail ? detailMessage : basicMessage;\n  }\n\n  /**\n   * Check to see if a correct_response value has been duplicated\n   * @param {CMIArray} correct_response\n   * @param {number} current_index\n   * @param {*} value\n   * @return {boolean}\n   */\n  checkDuplicatedPattern = (correct_response, current_index, value) => {\n    let found = false;\n    const count = correct_response._count;\n    for (let i = 0; i < count && !found; i++) {\n      if (i !== current_index && correct_response.childArray[i] === value) {\n        found = true;\n      }\n    }\n    return found;\n  };\n\n  /**\n   * Checks for a valid correct_response value\n   * @param {string} interaction_type\n   * @param {Array} nodes\n   * @param {*} value\n   */\n  checkCorrectResponseValue(interaction_type, nodes, value) {\n    const response = correct_responses[interaction_type];\n    const formatRegex = new RegExp(response.format);\n    for (let i = 0; i < nodes.length && this.lastErrorCode === 0; i++) {\n      if (interaction_type.match(\n          '^(fill-in|long-fill-in|matching|performance|sequencing)$')) {\n        nodes[i] = this.removeCorrectResponsePrefixes(nodes[i]);\n      }\n\n      if (response?.delimiter2) {\n        const values = nodes[i].split(response.delimiter2);\n        if (values.length === 2) {\n          const matches = values[0].match(formatRegex);\n          if (!matches) {\n            this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n          } else {\n            if (!values[1].match(new RegExp(response.format2))) {\n              this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n            }\n          }\n        } else {\n          this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n        }\n      } else {\n        const matches = nodes[i].match(formatRegex);\n        if ((!matches && value !== '') ||\n            (!matches && interaction_type === 'true-false')) {\n          this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n        } else {\n          if (interaction_type === 'numeric' && nodes.length > 1) {\n            if (Number(nodes[0]) > Number(nodes[1])) {\n              this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n            }\n          } else {\n            if (nodes[i] !== '' && response.unique) {\n              for (let j = 0; j < i && this.lastErrorCode === 0; j++) {\n                if (nodes[i] === nodes[j]) {\n                  this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Remove prefixes from correct_response\n   * @param {string} node\n   * @return {*}\n   */\n  removeCorrectResponsePrefixes(node) {\n    let seenOrder = false;\n    let seenCase = false;\n    let seenLang = false;\n\n    const prefixRegex = new RegExp(\n        '^({(lang|case_matters|order_matters)=([^}]+)})');\n    let matches = node.match(prefixRegex);\n    let langMatches = null;\n    while (matches) {\n      switch (matches[2]) {\n        case 'lang':\n          langMatches = node.match(scorm2004_regex.CMILangcr);\n          if (langMatches) {\n            const lang = langMatches[3];\n            if (lang !== undefined && lang.length > 0) {\n              if (ValidLanguages[lang.toLowerCase()] === undefined) {\n                this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n              }\n            }\n          }\n          seenLang = true;\n          break;\n        case 'case_matters':\n          if (!seenLang && !seenOrder && !seenCase) {\n            if (matches[3] !== 'true' && matches[3] !== 'false') {\n              this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n            }\n          }\n\n          seenCase = true;\n          break;\n        case 'order_matters':\n          if (!seenCase && !seenLang && !seenOrder) {\n            if (matches[3] !== 'true' && matches[3] !== 'false') {\n              this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n            }\n          }\n\n          seenOrder = true;\n          break;\n        default:\n          break;\n      }\n      node = node.substr(matches[1].length);\n      matches = node.match(prefixRegex);\n    }\n\n    return node;\n  }\n\n  /**\n   * Replace the whole API with another\n   * @param {Scorm2004API} newAPI\n   */\n  replaceWithAnotherScormAPI(newAPI) {\n    // Data Model\n    this.cmi = newAPI.cmi;\n    this.adl = newAPI.adl;\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   *\n   * @param {boolean} terminateCommit\n   * @return {object|Array}\n   */\n  renderCommitCMI(terminateCommit: boolean) {\n    const cmiExport = this.renderCMIToJSONObject();\n\n    if (terminateCommit) {\n      cmiExport.cmi.total_time = this.cmi.getCurrentTotalTime();\n    }\n\n    const result = [];\n    const flattened = Utilities.flatten(cmiExport);\n    switch (this.settings.dataCommitFormat) {\n      case 'flattened':\n        return Utilities.flatten(cmiExport);\n      case 'params':\n        for (const item in flattened) {\n          if ({}.hasOwnProperty.call(flattened, item)) {\n            result.push(`${item}=${flattened[item]}`);\n          }\n        }\n        return result;\n      case 'json':\n      default:\n        return cmiExport;\n    }\n  }\n\n  /**\n   * Attempts to store the data to the LMS\n   *\n   * @param {boolean} terminateCommit\n   * @return {string}\n   */\n  storeData(terminateCommit: boolean) {\n    if (terminateCommit) {\n      if (this.cmi.mode === 'normal') {\n        if (this.cmi.credit === 'credit') {\n          if (this.cmi.completion_threshold && this.cmi.progress_measure) {\n            if (this.cmi.progress_measure >= this.cmi.completion_threshold) {\n              console.debug('Setting Completion Status: Completed');\n              this.cmi.completion_status = 'completed';\n            } else {\n              console.debug('Setting Completion Status: Incomplete');\n              this.cmi.completion_status = 'incomplete';\n            }\n          }\n          if (this.cmi.scaled_passing_score && this.cmi.score.scaled) {\n            if (this.cmi.score.scaled >= this.cmi.scaled_passing_score) {\n              console.debug('Setting Success Status: Passed');\n              this.cmi.success_status = 'passed';\n            } else {\n              console.debug('Setting Success Status: Failed');\n              this.cmi.success_status = 'failed';\n            }\n          }\n        }\n      }\n    }\n\n    let navRequest = false;\n    if (this.adl.nav.request !== (this.startingData?.adl?.nav?.request) &&\n        this.adl.nav.request !== '_none_') {\n      this.adl.nav.request = encodeURIComponent(this.adl.nav.request);\n      navRequest = true;\n    }\n\n    const commitObject = this.renderCommitCMI(terminateCommit ||\n        this.settings.alwaysSendTotalTime);\n\n    if (this.apiLogLevel === global_constants.LOG_LEVEL_DEBUG) {\n      console.debug('Commit (terminated: ' +\n            (terminateCommit ? 'yes' : 'no') + '): ');\n      console.debug(commitObject);\n    }\n    if (this.settings.lmsCommitUrl) {\n      const result = this.processHttpRequest(this.settings.lmsCommitUrl,\n          commitObject, terminateCommit);\n\n      // check if this is a sequencing call, and then call the necessary JS\n      {\n        if (navRequest && result.navRequest !== undefined &&\n            result.navRequest !== '') {\n          Function(`\"use strict\";(() => { ${result.navRequest} })()`)();\n        }\n      }\n      return result;\n    } else {\n      return global_constants.SCORM_TRUE;\n    }\n  }\n}\n","// @flow\nimport APIConstants from '../constants/api_constants';\nimport ErrorCodes from '../constants/error_codes';\nimport Regex from '../constants/regex';\n\nconst scorm12_constants = APIConstants.scorm12;\nconst scorm12_regex = Regex.scorm12;\nconst scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Check if the value matches the proper format. If not, throw proper error code.\n *\n * @param {string} value\n * @param {string} regexPattern\n * @param {number} errorCode\n * @param {class} errorClass\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nexport function checkValidFormat(\n    value: String,\n    regexPattern: String,\n    errorCode: number,\n    errorClass: function,\n    allowEmptyString?: boolean) {\n  const formatRegex = new RegExp(regexPattern);\n  const matches = value.match(formatRegex);\n  if (allowEmptyString && value === '') {\n    return true;\n  }\n  if (value === undefined || !matches || matches[0] === '') {\n    throw new errorClass.prototype.constructor(errorCode);\n  }\n  return true;\n}\n\n/**\n * Check if the value matches the proper range. If not, throw proper error code.\n *\n * @param {*} value\n * @param {string} rangePattern\n * @param {number} errorCode\n * @param {class} errorClass\n * @return {boolean}\n */\nexport function checkValidRange(\n    value: any,\n    rangePattern: String,\n    errorCode: number,\n    errorClass: function) {\n  const ranges = rangePattern.split('#');\n  value = value * 1.0;\n  if (value >= ranges[0]) {\n    if ((ranges[1] === '*') || (value <= ranges[1])) {\n      return true;\n    } else {\n      throw new errorClass.prototype.constructor(errorCode);\n    }\n  } else {\n    throw new errorClass.prototype.constructor(errorCode);\n  }\n}\n\n/**\n * Base class for API cmi objects\n */\nexport class BaseCMI {\n  jsonString = false;\n  #initialized = false;\n  #start_time;\n\n  /**\n   * Constructor for BaseCMI, just marks the class as abstract\n   */\n  constructor() {\n    if (new.target === BaseCMI) {\n      throw new TypeError('Cannot construct BaseCMI instances directly');\n    }\n  }\n\n  /**\n   * Getter for #initialized\n   * @return {boolean}\n   */\n  get initialized() {\n    return this.#initialized;\n  }\n\n  /**\n   * Getter for #start_time\n   * @return {Number}\n   */\n  get start_time() {\n    return this.#start_time;\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    this.#initialized = true;\n  }\n\n  /**\n   * Called when the player should override the 'session_time' provided by\n   * the module\n   */\n  setStartTime() {\n    this.#start_time = new Date().getTime();\n  }\n}\n\n/**\n * Base class for cmi *.score objects\n */\nexport class CMIScore extends BaseCMI {\n  /**\n   * Constructor for *.score\n   * @param {string} score_children\n   * @param {string} score_range\n   * @param {string} max\n   * @param {number} invalidErrorCode\n   * @param {number} invalidTypeCode\n   * @param {number} invalidRangeCode\n   * @param {string} decimalRegex\n   * @param {class} errorClass\n   */\n  constructor(\n      {\n        score_children,\n        score_range,\n        max,\n        invalidErrorCode,\n        invalidTypeCode,\n        invalidRangeCode,\n        decimalRegex,\n        errorClass,\n      }) {\n    super();\n\n    this.#_children = score_children ||\n        scorm12_constants.score_children;\n    this.#_score_range = !score_range ? false : scorm12_regex.score_range;\n    this.#max = (max || max === '') ? max : '100';\n    this.#_invalid_error_code = invalidErrorCode ||\n        scorm12_error_codes.INVALID_SET_VALUE;\n    this.#_invalid_type_code = invalidTypeCode ||\n        scorm12_error_codes.TYPE_MISMATCH;\n    this.#_invalid_range_code = invalidRangeCode ||\n        scorm12_error_codes.VALUE_OUT_OF_RANGE;\n    this.#_decimal_regex = decimalRegex ||\n        scorm12_regex.CMIDecimal;\n    this.#_error_class = errorClass;\n  }\n\n  #_children;\n  #_score_range;\n  #_invalid_error_code;\n  #_invalid_type_code;\n  #_invalid_range_code;\n  #_decimal_regex;\n  #_error_class;\n  #raw = '';\n  #min = '';\n  #max;\n\n  /**\n   * Getter for _children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for _children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children) {\n    throw new this.#_error_class.prototype.constructor(this.#_invalid_error_code);\n  }\n\n  /**\n   * Getter for #raw\n   * @return {string}\n   */\n  get raw() {\n    return this.#raw;\n  }\n\n  /**\n   * Setter for #raw\n   * @param {string} raw\n   */\n  set raw(raw) {\n    if (checkValidFormat(raw, this.#_decimal_regex, this.#_invalid_type_code, this.#_error_class) &&\n        (!this.#_score_range ||\n            checkValidRange(raw, this.#_score_range, this.#_invalid_range_code, this.#_error_class))) {\n      this.#raw = raw;\n    }\n  }\n\n  /**\n   * Getter for #min\n   * @return {string}\n   */\n  get min() {\n    return this.#min;\n  }\n\n  /**\n   * Setter for #min\n   * @param {string} min\n   */\n  set min(min) {\n    if (checkValidFormat(min, this.#_decimal_regex, this.#_invalid_type_code, this.#_error_class) &&\n        (!this.#_score_range ||\n            checkValidRange(min, this.#_score_range, this.#_invalid_range_code, this.#_error_class))) {\n      this.#min = min;\n    }\n  }\n\n  /**\n   * Getter for #max\n   * @return {string}\n   */\n  get max() {\n    return this.#max;\n  }\n\n  /**\n   * Setter for #max\n   * @param {string} max\n   */\n  set max(max) {\n    if (checkValidFormat(max, this.#_decimal_regex, this.#_invalid_type_code, this.#_error_class) &&\n        (!this.#_score_range ||\n            checkValidRange(max, this.#_score_range, this.#_invalid_range_code, this.#_error_class))) {\n      this.#max = max;\n    }\n  }\n\n  /**\n   * toJSON for *.score\n   * @return {{min: string, max: string, raw: string}}\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'raw': this.raw,\n      'min': this.min,\n      'max': this.max,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Base class for cmi *.n objects\n */\nexport class CMIArray extends BaseCMI {\n  /**\n   * Constructor cmi *.n arrays\n   * @param {string} children\n   * @param {number} errorCode\n   * @param {class} errorClass\n   */\n  constructor({children, errorCode, errorClass}) {\n    super();\n    this.#_children = children;\n    this.#errorCode = errorCode;\n    this.#errorClass = errorClass;\n    this.childArray = [];\n  }\n\n  #errorCode;\n  #errorClass;\n  #_children;\n\n  /**\n   * Getter for _children\n   * @return {*}\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for _children. Just throws an error.\n   * @param {string} _children\n   */\n  set _children(_children) {\n    throw new this.#errorClass.prototype.constructor(this.#errorCode);\n  }\n\n  /**\n   * Getter for _count\n   * @return {number}\n   */\n  get _count() {\n    return this.childArray.length;\n  }\n\n  /**\n   * Setter for _count. Just throws an error.\n   * @param {number} _count\n   */\n  set _count(_count) {\n    throw new this.#errorClass.prototype.constructor(this.#errorCode);\n  }\n\n  /**\n   * toJSON for *.n arrays\n   * @return {object}\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {};\n    for (let i = 0; i < this.childArray.length; i++) {\n      result[i + ''] = this.childArray[i];\n    }\n    delete this.jsonString;\n    return result;\n  }\n}\n","// @flow\nimport {\n  BaseCMI,\n  checkValidFormat,\n  checkValidRange,\n  CMIArray,\n  CMIScore,\n} from './common';\nimport APIConstants from '../constants/api_constants';\nimport Regex from '../constants/regex';\nimport ErrorCodes from '../constants/error_codes';\nimport Responses from '../constants/response_constants';\nimport {Scorm2004ValidationError} from '../exceptions';\nimport * as Util from '../utilities';\n\nconst scorm2004_constants = APIConstants.scorm2004;\nconst scorm2004_error_codes = ErrorCodes.scorm2004;\nconst learner_responses = Responses.learner;\n\nconst scorm2004_regex = Regex.scorm2004;\n\n/**\n * Helper method for throwing Read Only error\n */\nfunction throwReadOnlyError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.READ_ONLY_ELEMENT);\n}\n\n/**\n * Helper method for throwing Write Only error\n */\nfunction throwWriteOnlyError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.WRITE_ONLY_ELEMENT);\n}\n\n/**\n * Helper method for throwing Type Mismatch error\n */\nfunction throwTypeMismatchError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.TYPE_MISMATCH);\n}\n\n/**\n * Helper method for throwing Dependency Not Established error\n */\nfunction throwDependencyNotEstablishedError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.DEPENDENCY_NOT_ESTABLISHED);\n}\n\n/**\n * Helper method for throwing Dependency Not Established error\n */\nfunction throwGeneralSetError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.GENERAL_SET_FAILURE);\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {*} value\n * @param {string} regexPattern\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nfunction check2004ValidFormat(\n    value: String,\n    regexPattern: String,\n    allowEmptyString?: boolean) {\n  return checkValidFormat(\n      value,\n      regexPattern,\n      scorm2004_error_codes.TYPE_MISMATCH,\n      Scorm2004ValidationError,\n      allowEmptyString,\n  );\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {*} value\n * @param {string} rangePattern\n * @return {boolean}\n */\nfunction check2004ValidRange(value: any, rangePattern: String) {\n  return checkValidRange(\n      value,\n      rangePattern,\n      scorm2004_error_codes.VALUE_OUT_OF_RANGE,\n      Scorm2004ValidationError,\n  );\n}\n\n/**\n * Class representing cmi object for SCORM 2004\n */\nexport class CMI extends BaseCMI {\n  /**\n   * Constructor for the SCORM 2004 cmi object\n   * @param {boolean} initialized\n   */\n  constructor(initialized: boolean) {\n    super();\n\n    this.learner_preference = new CMILearnerPreference();\n    this.score = new Scorm2004CMIScore();\n    this.comments_from_learner = new CMICommentsFromLearner();\n    this.comments_from_lms = new CMICommentsFromLMS();\n    this.interactions = new CMIInteractions();\n    this.objectives = new CMIObjectives();\n\n    if (initialized) this.initialize();\n  }\n\n  #_version = '1.0';\n  #_children = scorm2004_constants.cmi_children;\n  #completion_status = 'unknown';\n  #completion_threshold = '';\n  #credit = 'credit';\n  #entry = '';\n  #exit = '';\n  #launch_data = '';\n  #learner_id = '';\n  #learner_name = '';\n  #location = '';\n  #max_time_allowed = '';\n  #mode = 'normal';\n  #progress_measure = '';\n  #scaled_passing_score = '';\n  #session_time = 'PT0H0M0S';\n  #success_status = 'unknown';\n  #suspend_data = '';\n  #time_limit_action = 'continue,no message';\n  #total_time = '';\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.learner_preference?.initialize();\n    this.score?.initialize();\n    this.comments_from_learner?.initialize();\n    this.comments_from_lms?.initialize();\n    this.interactions?.initialize();\n    this.objectives?.initialize();\n  }\n\n  /**\n   * Getter for #_version\n   * @return {string}\n   * @private\n   */\n  get _version() {\n    return this.#_version;\n  }\n\n  /**\n   * Setter for #_version. Just throws an error.\n   * @param {string} _version\n   * @private\n   */\n  set _version(_version) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #_children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_children. Just throws an error.\n   * @param {number} _children\n   * @private\n   */\n  set _children(_children) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #completion_status\n   * @return {string}\n   */\n  get completion_status() {\n    return this.#completion_status;\n  }\n\n  /**\n   * Setter for #completion_status\n   * @param {string} completion_status\n   */\n  set completion_status(completion_status) {\n    if (check2004ValidFormat(completion_status, scorm2004_regex.CMICStatus)) {\n      this.#completion_status = completion_status;\n    }\n  }\n\n  /**\n   * Getter for #completion_threshold\n   * @return {string}\n   */\n  get completion_threshold() {\n    return this.#completion_threshold;\n  }\n\n  /**\n   * Setter for #completion_threshold. Can only be called before  initialization.\n   * @param {string} completion_threshold\n   */\n  set completion_threshold(completion_threshold) {\n    !this.initialized ?\n      this.#completion_threshold = completion_threshold :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Setter for #credit\n   * @return {string}\n   */\n  get credit() {\n    return this.#credit;\n  }\n\n  /**\n   * Setter for #credit. Can only be called before  initialization.\n   * @param {string} credit\n   */\n  set credit(credit) {\n    !this.initialized ? this.#credit = credit : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #entry\n   * @return {string}\n   */\n  get entry() {\n    return this.#entry;\n  }\n\n  /**\n   * Setter for #entry. Can only be called before  initialization.\n   * @param {string} entry\n   */\n  set entry(entry) {\n    !this.initialized ? this.#entry = entry : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #exit. Should only be called during JSON export.\n   * @return {string}\n   */\n  get exit() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#exit;\n  }\n\n  /**\n   * Getter for #exit\n   * @param {string} exit\n   */\n  set exit(exit) {\n    if (check2004ValidFormat(exit, scorm2004_regex.CMIExit, true)) {\n      this.#exit = exit;\n    }\n  }\n\n  /**\n   * Getter for #launch_data\n   * @return {string}\n   */\n  get launch_data() {\n    return this.#launch_data;\n  }\n\n  /**\n   * Setter for #launch_data. Can only be called before  initialization.\n   * @param {string} launch_data\n   */\n  set launch_data(launch_data) {\n    !this.initialized ? this.#launch_data = launch_data : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #learner_id\n   * @return {string}\n   */\n  get learner_id() {\n    return this.#learner_id;\n  }\n\n  /**\n   * Setter for #learner_id. Can only be called before  initialization.\n   * @param {string} learner_id\n   */\n  set learner_id(learner_id) {\n    !this.initialized ? this.#learner_id = learner_id : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #learner_name\n   * @return {string}\n   */\n  get learner_name() {\n    return this.#learner_name;\n  }\n\n  /**\n   * Setter for #learner_name. Can only be called before  initialization.\n   * @param {string} learner_name\n   */\n  set learner_name(learner_name) {\n    !this.initialized ?\n      this.#learner_name = learner_name :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #location\n   * @return {string}\n   */\n  get location() {\n    return this.#location;\n  }\n\n  /**\n   * Setter for #location\n   * @param {string} location\n   */\n  set location(location) {\n    if (check2004ValidFormat(location, scorm2004_regex.CMIString1000)) {\n      this.#location = location;\n    }\n  }\n\n  /**\n   * Getter for #max_time_allowed\n   * @return {string}\n   */\n  get max_time_allowed() {\n    return this.#max_time_allowed;\n  }\n\n  /**\n   * Setter for #max_time_allowed. Can only be called before  initialization.\n   * @param {string} max_time_allowed\n   */\n  set max_time_allowed(max_time_allowed) {\n    !this.initialized ?\n      this.#max_time_allowed = max_time_allowed :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #mode\n   * @return {string}\n   */\n  get mode() {\n    return this.#mode;\n  }\n\n  /**\n   * Setter for #mode. Can only be called before  initialization.\n   * @param {string} mode\n   */\n  set mode(mode) {\n    !this.initialized ? this.#mode = mode : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #progress_measure\n   * @return {string}\n   */\n  get progress_measure() {\n    return this.#progress_measure;\n  }\n\n  /**\n   * Setter for #progress_measure\n   * @param {string} progress_measure\n   */\n  set progress_measure(progress_measure) {\n    if (check2004ValidFormat(progress_measure, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(progress_measure, scorm2004_regex.progress_range)) {\n      this.#progress_measure = progress_measure;\n    }\n  }\n\n  /**\n   * Getter for #scaled_passing_score\n   * @return {string}\n   */\n  get scaled_passing_score() {\n    return this.#scaled_passing_score;\n  }\n\n  /**\n   * Setter for #scaled_passing_score. Can only be called before  initialization.\n   * @param {string} scaled_passing_score\n   */\n  set scaled_passing_score(scaled_passing_score) {\n    !this.initialized ?\n      this.#scaled_passing_score = scaled_passing_score :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #session_time. Should only be called during JSON export.\n   * @return {string}\n   */\n  get session_time() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#session_time;\n  }\n\n  /**\n   * Setter for #session_time\n   * @param {string} session_time\n   */\n  set session_time(session_time) {\n    if (check2004ValidFormat(session_time, scorm2004_regex.CMITimespan)) {\n      this.#session_time = session_time;\n    }\n  }\n\n  /**\n   * Getter for #success_status\n   * @return {string}\n   */\n  get success_status() {\n    return this.#success_status;\n  }\n\n  /**\n   * Setter for #success_status\n   * @param {string} success_status\n   */\n  set success_status(success_status) {\n    if (check2004ValidFormat(success_status, scorm2004_regex.CMISStatus)) {\n      this.#success_status = success_status;\n    }\n  }\n\n  /**\n   * Getter for #suspend_data\n   * @return {string}\n   */\n  get suspend_data() {\n    return this.#suspend_data;\n  }\n\n  /**\n   * Setter for #suspend_data\n   * @param {string} suspend_data\n   */\n  set suspend_data(suspend_data) {\n    if (check2004ValidFormat(suspend_data, scorm2004_regex.CMIString64000,\n        true)) {\n      this.#suspend_data = suspend_data;\n    }\n  }\n\n  /**\n   * Getter for #time_limit_action\n   * @return {string}\n   */\n  get time_limit_action() {\n    return this.#time_limit_action;\n  }\n\n  /**\n   * Setter for #time_limit_action. Can only be called before  initialization.\n   * @param {string} time_limit_action\n   */\n  set time_limit_action(time_limit_action) {\n    !this.initialized ?\n      this.#time_limit_action = time_limit_action :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #total_time\n   * @return {string}\n   */\n  get total_time() {\n    return this.#total_time;\n  }\n\n  /**\n   * Setter for #total_time. Can only be called before  initialization.\n   * @param {string} total_time\n   */\n  set total_time(total_time) {\n    !this.initialized ? this.#total_time = total_time : throwReadOnlyError();\n  }\n\n  /**\n   * Adds the current session time to the existing total time.\n   *\n   * @return {string} ISO8601 Duration\n   */\n  getCurrentTotalTime() {\n    let sessionTime = this.#session_time;\n    const startTime = this.start_time;\n\n    if (typeof startTime !== 'undefined' && startTime !== null) {\n      const seconds = new Date().getTime() - startTime;\n      sessionTime = Util.getSecondsAsISODuration(seconds / 1000);\n    }\n\n    return Util.addTwoDurations(\n        this.#total_time,\n        sessionTime,\n        scorm2004_regex.CMITimespan,\n    );\n  }\n\n  /**\n   * toJSON for cmi\n   *\n   * @return {\n   *    {\n   *      comments_from_learner: CMICommentsFromLearner,\n   *      comments_from_lms: CMICommentsFromLMS,\n   *      completion_status: string,\n   *      completion_threshold: string,\n   *      credit: string,\n   *      entry: string,\n   *      exit: string,\n   *      interactions: CMIInteractions,\n   *      launch_data: string,\n   *      learner_id: string,\n   *      learner_name: string,\n   *      learner_preference: CMILearnerPreference,\n   *      location: string,\n   *      max_time_allowed: string,\n   *      mode: string,\n   *      objectives: CMIObjectives,\n   *      progress_measure: string,\n   *      scaled_passing_score: string,\n   *      score: Scorm2004CMIScore,\n   *      session_time: string,\n   *      success_status: string,\n   *      suspend_data: string,\n   *      time_limit_action: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'comments_from_learner': this.comments_from_learner,\n      'comments_from_lms': this.comments_from_lms,\n      'completion_status': this.completion_status,\n      'completion_threshold': this.completion_threshold,\n      'credit': this.credit,\n      'entry': this.entry,\n      'exit': this.exit,\n      'interactions': this.interactions,\n      'launch_data': this.launch_data,\n      'learner_id': this.learner_id,\n      'learner_name': this.learner_name,\n      'learner_preference': this.learner_preference,\n      'location': this.location,\n      'max_time_allowed': this.max_time_allowed,\n      'mode': this.mode,\n      'objectives': this.objectives,\n      'progress_measure': this.progress_measure,\n      'scaled_passing_score': this.scaled_passing_score,\n      'score': this.score,\n      'session_time': this.session_time,\n      'success_status': this.success_status,\n      'suspend_data': this.suspend_data,\n      'time_limit_action': this.time_limit_action,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi.learner_preference object\n */\nclass CMILearnerPreference extends BaseCMI {\n  #_children = scorm2004_constants.student_preference_children;\n  #audio_level = '1';\n  #language = '';\n  #delivery_speed = '1';\n  #audio_captioning = '0';\n\n  /**\n   * Constructor for cmi.learner_preference\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for #_children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #audio_level\n   * @return {string}\n   */\n  get audio_level() {\n    return this.#audio_level;\n  }\n\n  /**\n   * Setter for #audio_level\n   * @param {string} audio_level\n   */\n  set audio_level(audio_level) {\n    if (check2004ValidFormat(audio_level, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(audio_level, scorm2004_regex.audio_range)) {\n      this.#audio_level = audio_level;\n    }\n  }\n\n  /**\n   * Getter for #language\n   * @return {string}\n   */\n  get language() {\n    return this.#language;\n  }\n\n  /**\n   * Setter for #language\n   * @param {string} language\n   */\n  set language(language) {\n    if (check2004ValidFormat(language, scorm2004_regex.CMILang)) {\n      this.#language = language;\n    }\n  }\n\n  /**\n   * Getter for #delivery_speed\n   * @return {string}\n   */\n  get delivery_speed() {\n    return this.#delivery_speed;\n  }\n\n  /**\n   * Setter for #delivery_speed\n   * @param {string} delivery_speed\n   */\n  set delivery_speed(delivery_speed) {\n    if (check2004ValidFormat(delivery_speed, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(delivery_speed, scorm2004_regex.speed_range)) {\n      this.#delivery_speed = delivery_speed;\n    }\n  }\n\n  /**\n   * Getter for #audio_captioning\n   * @return {string}\n   */\n  get audio_captioning() {\n    return this.#audio_captioning;\n  }\n\n  /**\n   * Setter for #audio_captioning\n   * @param {string} audio_captioning\n   */\n  set audio_captioning(audio_captioning) {\n    if (check2004ValidFormat(audio_captioning, scorm2004_regex.CMISInteger) &&\n      check2004ValidRange(audio_captioning, scorm2004_regex.text_range)) {\n      this.#audio_captioning = audio_captioning;\n    }\n  }\n\n  /**\n   * toJSON for cmi.learner_preference\n   *\n   * @return {\n   *    {\n   *      audio_level: string,\n   *      language: string,\n   *      delivery_speed: string,\n   *      audio_captioning: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'audio_level': this.audio_level,\n      'language': this.language,\n      'delivery_speed': this.delivery_speed,\n      'audio_captioning': this.audio_captioning,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.interactions object\n */\nclass CMIInteractions extends CMIArray {\n  /**\n   * Constructor for cmi.objectives Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.interactions_children,\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.objectives object\n */\nclass CMIObjectives extends CMIArray {\n  /**\n   * Constructor for cmi.objectives Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.objectives_children,\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.comments_from_lms object\n */\nclass CMICommentsFromLMS extends CMIArray {\n  /**\n   * Constructor for cmi.comments_from_lms Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.comments_children,\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.comments_from_learner object\n */\nclass CMICommentsFromLearner extends CMIArray {\n  /**\n   * Constructor for cmi.comments_from_learner Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.comments_children,\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi.interaction.n object\n */\nexport class CMIInteractionsObject extends BaseCMI {\n  #id = '';\n  #type = '';\n  #timestamp = '';\n  #weighting = '';\n  #learner_response = '';\n  #result = '';\n  #latency = '';\n  #description = '';\n\n  /**\n   * Constructor for cmi.interaction.n\n   */\n  constructor() {\n    super();\n\n    this.objectives = new CMIArray({\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n      children: scorm2004_constants.objectives_children,\n    });\n    this.correct_responses = new CMIArray({\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n      children: scorm2004_constants.correct_responses_children,\n    });\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.objectives?.initialize();\n    this.correct_responses?.initialize();\n  }\n\n  /**\n   * Getter for #id\n   * @return {string}\n   */\n  get id() {\n    return this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check2004ValidFormat(id, scorm2004_regex.CMILongIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * Getter for #type\n   * @return {string}\n   */\n  get type() {\n    return this.#type;\n  }\n\n  /**\n   * Setter for #type\n   * @param {string} type\n   */\n  set type(type) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(type, scorm2004_regex.CMIType)) {\n        this.#type = type;\n      }\n    }\n  }\n\n  /**\n   * Getter for #timestamp\n   * @return {string}\n   */\n  get timestamp() {\n    return this.#timestamp;\n  }\n\n  /**\n   * Setter for #timestamp\n   * @param {string} timestamp\n   */\n  set timestamp(timestamp) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(timestamp, scorm2004_regex.CMITime)) {\n        this.#timestamp = timestamp;\n      }\n    }\n  }\n\n  /**\n   * Getter for #weighting\n   * @return {string}\n   */\n  get weighting() {\n    return this.#weighting;\n  }\n\n  /**\n   * Setter for #weighting\n   * @param {string} weighting\n   */\n  set weighting(weighting) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(weighting, scorm2004_regex.CMIDecimal)) {\n        this.#weighting = weighting;\n      }\n    }\n  }\n\n  /**\n   * Getter for #learner_response\n   * @return {string}\n   */\n  get learner_response() {\n    return this.#learner_response;\n  }\n\n  /**\n   * Setter for #learner_response. Does type validation to make sure response\n   * matches SCORM 2004's spec\n   * @param {string} learner_response\n   */\n  set learner_response(learner_response) {\n    if (this.initialized && (this.#type === '' || this.#id === '')) {\n      throwDependencyNotEstablishedError();\n    } else {\n      let nodes = [];\n      const response_type = learner_responses[this.type];\n      if (response_type) {\n        if (response_type?.delimiter) {\n          nodes = learner_response.split(response_type.delimiter);\n        } else {\n          nodes[0] = learner_response;\n        }\n\n        if ((nodes.length > 0) && (nodes.length <= response_type.max)) {\n          const formatRegex = new RegExp(response_type.format);\n          for (let i = 0; i < nodes.length; i++) {\n            if (response_type?.delimiter2) {\n              const values = nodes[i].split(response_type.delimiter2);\n              if (values.length === 2) {\n                if (!values[0].match(formatRegex)) {\n                  throwTypeMismatchError();\n                } else {\n                  if (!values[1].match(new RegExp(response_type.format2))) {\n                    throwTypeMismatchError();\n                  }\n                }\n              } else {\n                throwTypeMismatchError();\n              }\n            } else {\n              if (!nodes[i].match(formatRegex)) {\n                throwTypeMismatchError();\n              } else {\n                if (nodes[i] !== '' && response_type.unique) {\n                  for (let j = 0; j < i; j++) {\n                    if (nodes[i] === nodes[j]) {\n                      throwTypeMismatchError();\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          throwGeneralSetError();\n        }\n\n        this.#learner_response = learner_response;\n      } else {\n        throwTypeMismatchError();\n      }\n    }\n  }\n\n  /**\n   * Getter for #result\n   * @return {string}\n   */\n  get result() {\n    return this.#result;\n  }\n\n  /**\n   * Setter for #result\n   * @param {string} result\n   */\n  set result(result) {\n    if (check2004ValidFormat(result, scorm2004_regex.CMIResult)) {\n      this.#result = result;\n    }\n  }\n\n  /**\n   * Getter for #latency\n   * @return {string}\n   */\n  get latency() {\n    return this.#latency;\n  }\n\n  /**\n   * Setter for #latency\n   * @param {string} latency\n   */\n  set latency(latency) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(latency, scorm2004_regex.CMITimespan)) {\n        this.#latency = latency;\n      }\n    }\n  }\n\n  /**\n   * Getter for #description\n   * @return {string}\n   */\n  get description() {\n    return this.#description;\n  }\n\n  /**\n   * Setter for #description\n   * @param {string} description\n   */\n  set description(description) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(description, scorm2004_regex.CMILangString250,\n          true)) {\n        this.#description = description;\n      }\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n\n   *\n   * @return {\n   *    {\n   *      id: string,\n   *      type: string,\n   *      objectives: CMIArray,\n   *      timestamp: string,\n   *      correct_responses: CMIArray,\n   *      weighting: string,\n   *      learner_response: string,\n   *      result: string,\n   *      latency: string,\n   *      description: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n      'type': this.type,\n      'objectives': this.objectives,\n      'timestamp': this.timestamp,\n      'weighting': this.weighting,\n      'learner_response': this.learner_response,\n      'result': this.result,\n      'latency': this.latency,\n      'description': this.description,\n      'correct_responses': this.correct_responses,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi.objectives.n object\n */\nexport class CMIObjectivesObject extends BaseCMI {\n  #id = '';\n  #success_status = 'unknown';\n  #completion_status = 'unknown';\n  #progress_measure = '';\n  #description = '';\n\n  /**\n   * Constructor for cmi.objectives.n\n   */\n  constructor() {\n    super();\n\n    this.score = new Scorm2004CMIScore();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.score?.initialize();\n  }\n\n  /**\n   * Getter for #id\n   * @return {string}\n   */\n  get id() {\n    return this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check2004ValidFormat(id, scorm2004_regex.CMILongIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * Getter for #success_status\n   * @return {string}\n   */\n  get success_status() {\n    return this.#success_status;\n  }\n\n  /**\n   * Setter for #success_status\n   * @param {string} success_status\n   */\n  set success_status(success_status) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(success_status, scorm2004_regex.CMISStatus)) {\n        this.#success_status = success_status;\n      }\n    }\n  }\n\n  /**\n   * Getter for #completion_status\n   * @return {string}\n   */\n  get completion_status() {\n    return this.#completion_status;\n  }\n\n  /**\n   * Setter for #completion_status\n   * @param {string} completion_status\n   */\n  set completion_status(completion_status) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(completion_status, scorm2004_regex.CMICStatus)) {\n        this.#completion_status = completion_status;\n      }\n    }\n  }\n\n  /**\n   * Getter for #progress_measure\n   * @return {string}\n   */\n  get progress_measure() {\n    return this.#progress_measure;\n  }\n\n  /**\n   * Setter for #progress_measure\n   * @param {string} progress_measure\n   */\n  set progress_measure(progress_measure) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(progress_measure, scorm2004_regex.CMIDecimal) &&\n        check2004ValidRange(progress_measure,\n            scorm2004_regex.progress_range)) {\n        this.#progress_measure = progress_measure;\n      }\n    }\n  }\n\n  /**\n   * Getter for #description\n   * @return {string}\n   */\n  get description() {\n    return this.#description;\n  }\n\n  /**\n   * Setter for #description\n   * @param {string} description\n   */\n  set description(description) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(description, scorm2004_regex.CMILangString250,\n          true)) {\n        this.#description = description;\n      }\n    }\n  }\n\n  /**\n   * toJSON for cmi.objectives.n\n   *\n   * @return {\n   *    {\n   *      id: string,\n   *      success_status: string,\n   *      completion_status: string,\n   *      progress_measure: string,\n   *      description: string,\n   *      score: Scorm2004CMIScore\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n      'success_status': this.success_status,\n      'completion_status': this.completion_status,\n      'progress_measure': this.progress_measure,\n      'description': this.description,\n      'score': this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi *.score object\n */\nclass Scorm2004CMIScore extends CMIScore {\n  #scaled = '';\n\n  /**\n   * Constructor for cmi *.score\n   */\n  constructor() {\n    super(\n        {\n          score_children: scorm2004_constants.score_children,\n          max: '',\n          invalidErrorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n          invalidTypeCode: scorm2004_error_codes.TYPE_MISMATCH,\n          invalidRangeCode: scorm2004_error_codes.VALUE_OUT_OF_RANGE,\n          decimalRegex: scorm2004_regex.CMIDecimal,\n          errorClass: Scorm2004ValidationError,\n        });\n  }\n\n  /**\n   * Getter for #scaled\n   * @return {string}\n   */\n  get scaled() {\n    return this.#scaled;\n  }\n\n  /**\n   * Setter for #scaled\n   * @param {string} scaled\n   */\n  set scaled(scaled) {\n    if (check2004ValidFormat(scaled, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(scaled, scorm2004_regex.scaled_range)) {\n      this.#scaled = scaled;\n    }\n  }\n\n  /**\n   * toJSON for cmi *.score\n   *\n   * @return {\n   *    {\n   *      scaled: string,\n   *      raw: string,\n   *      min: string,\n   *      max: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'scaled': this.scaled,\n      'raw': super.raw,\n      'min': super.min,\n      'max': super.max,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.comments_from_learner.n and cmi.comments_from_lms.n object\n */\nexport class CMICommentsObject extends BaseCMI {\n  #comment = '';\n  #location = '';\n  #timestamp = '';\n  #readOnlyAfterInit;\n\n  /**\n   * Constructor for cmi.comments_from_learner.n and cmi.comments_from_lms.n\n   * @param {boolean} readOnlyAfterInit\n   */\n  constructor(readOnlyAfterInit = false) {\n    super();\n    this.#comment = '';\n    this.#location = '';\n    this.#timestamp = '';\n    this.#readOnlyAfterInit = readOnlyAfterInit;\n  }\n\n  /**\n   * Getter for #comment\n   * @return {string}\n   */\n  get comment() {\n    return this.#comment;\n  }\n\n  /**\n   * Setter for #comment\n   * @param {string} comment\n   */\n  set comment(comment) {\n    if (this.initialized && this.#readOnlyAfterInit) {\n      throwReadOnlyError();\n    } else {\n      if (check2004ValidFormat(comment, scorm2004_regex.CMILangString4000,\n          true)) {\n        this.#comment = comment;\n      }\n    }\n  }\n\n  /**\n   * Getter for #location\n   * @return {string}\n   */\n  get location() {\n    return this.#location;\n  }\n\n  /**\n   * Setter for #location\n   * @param {string} location\n   */\n  set location(location) {\n    if (this.initialized && this.#readOnlyAfterInit) {\n      throwReadOnlyError();\n    } else {\n      if (check2004ValidFormat(location, scorm2004_regex.CMIString250)) {\n        this.#location = location;\n      }\n    }\n  }\n\n  /**\n   * Getter for #timestamp\n   * @return {string}\n   */\n  get timestamp() {\n    return this.#timestamp;\n  }\n\n  /**\n   * Setter for #timestamp\n   * @param {string} timestamp\n   */\n  set timestamp(timestamp) {\n    if (this.initialized && this.#readOnlyAfterInit) {\n      throwReadOnlyError();\n    } else {\n      if (check2004ValidFormat(timestamp, scorm2004_regex.CMITime)) {\n        this.#timestamp = timestamp;\n      }\n    }\n  }\n\n  /**\n   * toJSON for cmi.comments_from_learner.n object\n   * @return {\n   *    {\n   *      comment: string,\n   *      location: string,\n   *      timestamp: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'comment': this.comment,\n      'location': this.location,\n      'timestamp': this.timestamp,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.interactions.n.objectives.n object\n */\nexport class CMIInteractionsObjectivesObject extends BaseCMI {\n  #id = '';\n\n  /**\n   * Constructor for cmi.interactions.n.objectives.n\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for #id\n   * @return {string}\n   */\n  get id() {\n    return this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check2004ValidFormat(id, scorm2004_regex.CMILongIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n.objectives.n\n   * @return {\n   *    {\n   *      id: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.interactions.n.correct_responses.n object\n */\nexport class CMIInteractionsCorrectResponsesObject extends BaseCMI {\n  #pattern = '';\n\n  /**\n   * Constructor for cmi.interactions.n.correct_responses.n\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for #pattern\n   * @return {string}\n   */\n  get pattern() {\n    return this.#pattern;\n  }\n\n  /**\n   * Setter for #pattern\n   * @param {string} pattern\n   */\n  set pattern(pattern) {\n    if (check2004ValidFormat(pattern, scorm2004_regex.CMIFeedback)) {\n      this.#pattern = pattern;\n    }\n  }\n\n  /**\n   * toJSON cmi.interactions.n.correct_responses.n object\n   * @return {\n   *    {\n   *      pattern: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'pattern': this.pattern,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's adl object\n */\nexport class ADL extends BaseCMI {\n  /**\n   * Constructor for adl\n   */\n  constructor() {\n    super();\n\n    this.nav = new ADLNav();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.nav?.initialize();\n  }\n\n  /**\n   * toJSON for adl\n   * @return {\n   *    {\n   *      nav: {\n   *        request: string\n   *      }\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'nav': this.nav,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's adl.nav object\n */\nclass ADLNav extends BaseCMI {\n  #request = '_none_';\n\n  /**\n   * Constructor for adl.nav\n   */\n  constructor() {\n    super();\n\n    this.request_valid = new ADLNavRequestValid();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.request_valid?.initialize();\n  }\n\n  /**\n   * Getter for #request\n   * @return {string}\n   */\n  get request() {\n    return this.#request;\n  }\n\n  /**\n   * Setter for #request\n   * @param {string} request\n   */\n  set request(request) {\n    if (check2004ValidFormat(request, scorm2004_regex.NAVEvent)) {\n      this.#request = request;\n    }\n  }\n\n  /**\n   * toJSON for adl.nav\n   *\n   * @return {\n   *    {\n   *      request: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'request': this.request,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's adl.nav.request_valid object\n */\nclass ADLNavRequestValid extends BaseCMI {\n  #continue = 'unknown';\n  #previous = 'unknown';\n  choice = class {\n    /**\n     * Check if target is valid\n     * @param {*} _target\n     * @return {string}\n     */\n    _isTargetValid = (_target) => 'unknown';\n  };\n  jump = class {\n    /**\n     * Check if target is valid\n     * @param {*} _target\n     * @return {string}\n     */\n    _isTargetValid = (_target) => 'unknown';\n  };\n\n  /**\n   * Constructor for adl.nav.request_valid\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for #continue\n   * @return {string}\n   */\n  get continue() {\n    return this.#continue;\n  }\n\n  /**\n   * Setter for #continue. Just throws an error.\n   * @param {*} _\n   */\n  set continue(_) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #previous\n   * @return {string}\n   */\n  get previous() {\n    return this.#previous;\n  }\n\n  /**\n   * Setter for #previous. Just throws an error.\n   * @param {*} _\n   */\n  set previous(_) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * toJSON for adl.nav.request_valid\n   *\n   * @return {\n   *    {\n   *      previous: string,\n   *      continue: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'previous': this.previous,\n      'continue': this.continue,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","// @flow\n\nconst global = {\n  SCORM_TRUE: 'true',\n  SCORM_FALSE: 'false',\n  STATE_NOT_INITIALIZED: 0,\n  STATE_INITIALIZED: 1,\n  STATE_TERMINATED: 2,\n  LOG_LEVEL_DEBUG: 1,\n  LOG_LEVEL_INFO: 2,\n  LOG_LEVEL_WARNING: 3,\n  LOG_LEVEL_ERROR: 4,\n  LOG_LEVEL_NONE: 5,\n};\n\nconst scorm12 = {\n  // Children lists\n  cmi_children: 'core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions',\n  core_children: 'student_id,student_name,lesson_location,credit,lesson_status,entry,score,total_time,lesson_mode,exit,session_time',\n  score_children: 'raw,min,max',\n  comments_children: 'content,location,time',\n  objectives_children: 'id,score,status',\n  correct_responses_children: 'pattern',\n  student_data_children: 'mastery_score,max_time_allowed,time_limit_action',\n  student_preference_children: 'audio,language,speed,text',\n  interactions_children: 'id,objectives,time,type,correct_responses,weighting,student_response,result,latency',\n\n  error_descriptions: {\n    '101': {\n      basicMessage: 'General Exception',\n      detailMessage: 'No specific error code exists to describe the error. Use LMSGetDiagnostic for more information',\n    },\n    '201': {\n      basicMessage: 'Invalid argument error',\n      detailMessage: 'Indicates that an argument represents an invalid data model element or is otherwise incorrect.',\n    },\n    '202': {\n      basicMessage: 'Element cannot have children',\n      detailMessage: 'Indicates that LMSGetValue was called with a data model element name that ends in \"_children\" for a data model element that does not support the \"_children\" suffix.',\n    },\n    '203': {\n      basicMessage: 'Element not an array - cannot have count',\n      detailMessage: 'Indicates that LMSGetValue was called with a data model element name that ends in \"_count\" for a data model element that does not support the \"_count\" suffix.',\n    },\n    '301': {\n      basicMessage: 'Not initialized',\n      detailMessage: 'Indicates that an API call was made before the call to lmsInitialize.',\n    },\n    '401': {\n      basicMessage: 'Not implemented error',\n      detailMessage: 'The data model element indicated in a call to LMSGetValue or LMSSetValue is valid, but was not implemented by this LMS. SCORM 1.2 defines a set of data model elements as being optional for an LMS to implement.',\n    },\n    '402': {\n      basicMessage: 'Invalid set value, element is a keyword',\n      detailMessage: 'Indicates that LMSSetValue was called on a data model element that represents a keyword (elements that end in \"_children\" and \"_count\").',\n    },\n    '403': {\n      basicMessage: 'Element is read only',\n      detailMessage: 'LMSSetValue was called with a data model element that can only be read.',\n    },\n    '404': {\n      basicMessage: 'Element is write only',\n      detailMessage: 'LMSGetValue was called on a data model element that can only be written to.',\n    },\n    '405': {\n      basicMessage: 'Incorrect Data Type',\n      detailMessage: 'LMSSetValue was called with a value that is not consistent with the data format of the supplied data model element.',\n    },\n    '407': {\n      basicMessage: 'Element Value Out Of Range',\n      detailMessage: 'The numeric value supplied to a LMSSetValue call is outside of the numeric range allowed for the supplied data model element.',\n    },\n    '408': {\n      basicMessage: 'Data Model Dependency Not Established',\n      detailMessage: 'Some data model elements cannot be set until another data model element was set. This error condition indicates that the prerequisite element was not set before the dependent element.',\n    },\n  },\n};\n\nconst aicc = {\n  ...scorm12, ...{\n    cmi_children: 'core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions,evaluation',\n    student_preference_children: 'audio,language,lesson_type,speed,text,text_color,text_location,text_size,video,windows',\n    student_data_children: 'attempt_number,tries,mastery_score,max_time_allowed,time_limit_action',\n    student_demographics_children: 'city,class,company,country,experience,familiar_name,instructor_name,title,native_language,state,street_address,telephone,years_experience',\n    tries_children: 'time,status,score',\n    attempt_records_children: 'score,lesson_status',\n    paths_children: 'location_id,date,time,status,why_left,time_in_element',\n  },\n};\n\nconst scorm2004 = {\n  // Children lists\n  cmi_children: '_version,comments_from_learner,comments_from_lms,completion_status,credit,entry,exit,interactions,launch_data,learner_id,learner_name,learner_preference,location,max_time_allowed,mode,objectives,progress_measure,scaled_passing_score,score,session_time,success_status,suspend_data,time_limit_action,total_time',\n  comments_children: 'comment,timestamp,location',\n  score_children: 'max,raw,scaled,min',\n  objectives_children: 'progress_measure,completion_status,success_status,description,score,id',\n  correct_responses_children: 'pattern',\n  student_data_children: 'mastery_score,max_time_allowed,time_limit_action',\n  student_preference_children: 'audio_level,audio_captioning,delivery_speed,language',\n  interactions_children: 'id,type,objectives,timestamp,correct_responses,weighting,learner_response,result,latency,description',\n\n  error_descriptions: {\n    '0': {\n      basicMessage: 'No Error',\n      detailMessage: 'No error occurred, the previous API call was successful.',\n    },\n    '101': {\n      basicMessage: 'General Exception',\n      detailMessage: 'No specific error code exists to describe the error. Use GetDiagnostic for more information.',\n    },\n    '102': {\n      basicMessage: 'General Initialization Failure',\n      detailMessage: 'Call to Initialize failed for an unknown reason.',\n    },\n    '103': {\n      basicMessage: 'Already Initialized',\n      detailMessage: 'Call to Initialize failed because Initialize was already called.',\n    },\n    '104': {\n      basicMessage: 'Content Instance Terminated',\n      detailMessage: 'Call to Initialize failed because Terminate was already called.',\n    },\n    '111': {\n      basicMessage: 'General Termination Failure',\n      detailMessage: 'Call to Terminate failed for an unknown reason.',\n    },\n    '112': {\n      basicMessage: 'Termination Before Initialization',\n      detailMessage: 'Call to Terminate failed because it was made before the call to Initialize.',\n    },\n    '113': {\n      basicMessage: 'Termination After Termination',\n      detailMessage: 'Call to Terminate failed because Terminate was already called.',\n    },\n    '122': {\n      basicMessage: 'Retrieve Data Before Initialization',\n      detailMessage: 'Call to GetValue failed because it was made before the call to Initialize.',\n    },\n    '123': {\n      basicMessage: 'Retrieve Data After Termination',\n      detailMessage: 'Call to GetValue failed because it was made after the call to Terminate.',\n    },\n    '132': {\n      basicMessage: 'Store Data Before Initialization',\n      detailMessage: 'Call to SetValue failed because it was made before the call to Initialize.',\n    },\n    '133': {\n      basicMessage: 'Store Data After Termination',\n      detailMessage: 'Call to SetValue failed because it was made after the call to Terminate.',\n    },\n    '142': {\n      basicMessage: 'Commit Before Initialization',\n      detailMessage: 'Call to Commit failed because it was made before the call to Initialize.',\n    },\n    '143': {\n      basicMessage: 'Commit After Termination',\n      detailMessage: 'Call to Commit failed because it was made after the call to Terminate.',\n    },\n    '201': {\n      basicMessage: 'General Argument Error',\n      detailMessage: 'An invalid argument was passed to an API method (usually indicates that Initialize, Commit or Terminate did not receive the expected empty string argument.',\n    },\n    '301': {\n      basicMessage: 'General Get Failure',\n      detailMessage: 'Indicates a failed GetValue call where no other specific error code is applicable. Use GetDiagnostic for more information.',\n    },\n    '351': {\n      basicMessage: 'General Set Failure',\n      detailMessage: 'Indicates a failed SetValue call where no other specific error code is applicable. Use GetDiagnostic for more information.',\n    },\n    '391': {\n      basicMessage: 'General Commit Failure',\n      detailMessage: 'Indicates a failed Commit call where no other specific error code is applicable. Use GetDiagnostic for more information.',\n    },\n    '401': {\n      basicMessage: 'Undefined Data Model Element',\n      detailMessage: 'The data model element name passed to GetValue or SetValue is not a valid SCORM data model element.',\n    },\n    '402': {\n      basicMessage: 'Unimplemented Data Model Element',\n      detailMessage: 'The data model element indicated in a call to GetValue or SetValue is valid, but was not implemented by this LMS. In SCORM 2004, this error would indicate an LMS that is not fully SCORM conformant.',\n    },\n    '403': {\n      basicMessage: 'Data Model Element Value Not Initialized',\n      detailMessage: 'Attempt to read a data model element that has not been initialized by the LMS or through a SetValue call. This error condition is often reached during normal execution of a SCO.',\n    },\n    '404': {\n      basicMessage: 'Data Model Element Is Read Only',\n      detailMessage: 'SetValue was called with a data model element that can only be read.',\n    },\n    '405': {\n      basicMessage: 'Data Model Element Is Write Only',\n      detailMessage: 'GetValue was called on a data model element that can only be written to.',\n    },\n    '406': {\n      basicMessage: 'Data Model Element Type Mismatch',\n      detailMessage: 'SetValue was called with a value that is not consistent with the data format of the supplied data model element.',\n    },\n    '407': {\n      basicMessage: 'Data Model Element Value Out Of Range',\n      detailMessage: 'The numeric value supplied to a SetValue call is outside of the numeric range allowed for the supplied data model element.',\n    },\n    '408': {\n      basicMessage: 'Data Model Dependency Not Established',\n      detailMessage: 'Some data model elements cannot be set until another data model element was set. This error condition indicates that the prerequisite element was not set before the dependent element.',\n    },\n  },\n};\n\nconst APIConstants = {\n  global: global,\n  scorm12: scorm12,\n  aicc: aicc,\n  scorm2004: scorm2004,\n};\n\nexport default APIConstants;\n","// @flow\nconst global = {\n  GENERAL: 101,\n  INITIALIZATION_FAILED: 101,\n  INITIALIZED: 101,\n  TERMINATED: 101,\n  TERMINATION_FAILURE: 101,\n  TERMINATION_BEFORE_INIT: 101,\n  MULTIPLE_TERMINATION: 101,\n  RETRIEVE_BEFORE_INIT: 101,\n  RETRIEVE_AFTER_TERM: 101,\n  STORE_BEFORE_INIT: 101,\n  STORE_AFTER_TERM: 101,\n  COMMIT_BEFORE_INIT: 101,\n  COMMIT_AFTER_TERM: 101,\n  ARGUMENT_ERROR: 101,\n  CHILDREN_ERROR: 101,\n  COUNT_ERROR: 101,\n  GENERAL_GET_FAILURE: 101,\n  GENERAL_SET_FAILURE: 101,\n  GENERAL_COMMIT_FAILURE: 101,\n  UNDEFINED_DATA_MODEL: 101,\n  UNIMPLEMENTED_ELEMENT: 101,\n  VALUE_NOT_INITIALIZED: 101,\n  INVALID_SET_VALUE: 101,\n  READ_ONLY_ELEMENT: 101,\n  WRITE_ONLY_ELEMENT: 101,\n  TYPE_MISMATCH: 101,\n  VALUE_OUT_OF_RANGE: 101,\n  DEPENDENCY_NOT_ESTABLISHED: 101,\n};\n\nconst scorm12 = {\n  ...global, ...{\n    RETRIEVE_BEFORE_INIT: 301,\n    STORE_BEFORE_INIT: 301,\n    COMMIT_BEFORE_INIT: 301,\n    ARGUMENT_ERROR: 201,\n    CHILDREN_ERROR: 202,\n    COUNT_ERROR: 203,\n    UNDEFINED_DATA_MODEL: 401,\n    UNIMPLEMENTED_ELEMENT: 401,\n    VALUE_NOT_INITIALIZED: 301,\n    INVALID_SET_VALUE: 402,\n    READ_ONLY_ELEMENT: 403,\n    WRITE_ONLY_ELEMENT: 404,\n    TYPE_MISMATCH: 405,\n    VALUE_OUT_OF_RANGE: 407,\n    DEPENDENCY_NOT_ESTABLISHED: 408,\n  },\n};\n\nconst scorm2004 = {\n  ...global, ...{\n    INITIALIZATION_FAILED: 102,\n    INITIALIZED: 103,\n    TERMINATED: 104,\n    TERMINATION_FAILURE: 111,\n    TERMINATION_BEFORE_INIT: 112,\n    MULTIPLE_TERMINATIONS: 113,\n    RETRIEVE_BEFORE_INIT: 122,\n    RETRIEVE_AFTER_TERM: 123,\n    STORE_BEFORE_INIT: 132,\n    STORE_AFTER_TERM: 133,\n    COMMIT_BEFORE_INIT: 142,\n    COMMIT_AFTER_TERM: 143,\n    ARGUMENT_ERROR: 201,\n    GENERAL_GET_FAILURE: 301,\n    GENERAL_SET_FAILURE: 351,\n    GENERAL_COMMIT_FAILURE: 391,\n    UNDEFINED_DATA_MODEL: 401,\n    UNIMPLEMENTED_ELEMENT: 402,\n    VALUE_NOT_INITIALIZED: 403,\n    READ_ONLY_ELEMENT: 404,\n    WRITE_ONLY_ELEMENT: 405,\n    TYPE_MISMATCH: 406,\n    VALUE_OUT_OF_RANGE: 407,\n    DEPENDENCY_NOT_ESTABLISHED: 408,\n  },\n};\n\nconst ErrorCodes = {\n  scorm12: scorm12,\n  scorm2004: scorm2004,\n};\n\nexport default ErrorCodes;\n","const ValidLanguages = {\n  'aa': 'aa', 'ab': 'ab', 'ae': 'ae', 'af': 'af', 'ak': 'ak', 'am': 'am',\n  'an': 'an', 'ar': 'ar', 'as': 'as', 'av': 'av', 'ay': 'ay', 'az': 'az',\n  'ba': 'ba', 'be': 'be', 'bg': 'bg', 'bh': 'bh', 'bi': 'bi', 'bm': 'bm',\n  'bn': 'bn', 'bo': 'bo', 'br': 'br', 'bs': 'bs', 'ca': 'ca', 'ce': 'ce',\n  'ch': 'ch', 'co': 'co', 'cr': 'cr', 'cs': 'cs', 'cu': 'cu', 'cv': 'cv',\n  'cy': 'cy', 'da': 'da', 'de': 'de', 'dv': 'dv', 'dz': 'dz', 'ee': 'ee',\n  'el': 'el', 'en': 'en', 'eo': 'eo', 'es': 'es', 'et': 'et', 'eu': 'eu',\n  'fa': 'fa', 'ff': 'ff', 'fi': 'fi', 'fj': 'fj', 'fo': 'fo', 'fr': 'fr',\n  'fy': 'fy', 'ga': 'ga', 'gd': 'gd', 'gl': 'gl', 'gn': 'gn', 'gu': 'gu',\n  'gv': 'gv', 'ha': 'ha', 'he': 'he', 'hi': 'hi', 'ho': 'ho', 'hr': 'hr',\n  'ht': 'ht', 'hu': 'hu', 'hy': 'hy', 'hz': 'hz', 'ia': 'ia', 'id': 'id',\n  'ie': 'ie', 'ig': 'ig', 'ii': 'ii', 'ik': 'ik', 'io': 'io', 'is': 'is',\n  'it': 'it', 'iu': 'iu', 'ja': 'ja', 'jv': 'jv', 'ka': 'ka', 'kg': 'kg',\n  'ki': 'ki', 'kj': 'kj', 'kk': 'kk', 'kl': 'kl', 'km': 'km', 'kn': 'kn',\n  'ko': 'ko', 'kr': 'kr', 'ks': 'ks', 'ku': 'ku', 'kv': 'kv', 'kw': 'kw',\n  'ky': 'ky', 'la': 'la', 'lb': 'lb', 'lg': 'lg', 'li': 'li', 'ln': 'ln',\n  'lo': 'lo', 'lt': 'lt', 'lu': 'lu', 'lv': 'lv', 'mg': 'mg', 'mh': 'mh',\n  'mi': 'mi', 'mk': 'mk', 'ml': 'ml', 'mn': 'mn', 'mo': 'mo', 'mr': 'mr',\n  'ms': 'ms', 'mt': 'mt', 'my': 'my', 'na': 'na', 'nb': 'nb', 'nd': 'nd',\n  'ne': 'ne', 'ng': 'ng', 'nl': 'nl', 'nn': 'nn', 'no': 'no', 'nr': 'nr',\n  'nv': 'nv', 'ny': 'ny', 'oc': 'oc', 'oj': 'oj', 'om': 'om', 'or': 'or',\n  'os': 'os', 'pa': 'pa', 'pi': 'pi', 'pl': 'pl', 'ps': 'ps', 'pt': 'pt',\n  'qu': 'qu', 'rm': 'rm', 'rn': 'rn', 'ro': 'ro', 'ru': 'ru', 'rw': 'rw',\n  'sa': 'sa', 'sc': 'sc', 'sd': 'sd', 'se': 'se', 'sg': 'sg', 'sh': 'sh',\n  'si': 'si', 'sk': 'sk', 'sl': 'sl', 'sm': 'sm', 'sn': 'sn', 'so': 'so',\n  'sq': 'sq', 'sr': 'sr', 'ss': 'ss', 'st': 'st', 'su': 'su', 'sv': 'sv',\n  'sw': 'sw', 'ta': 'ta', 'te': 'te', 'tg': 'tg', 'th': 'th', 'ti': 'ti',\n  'tk': 'tk', 'tl': 'tl', 'tn': 'tn', 'to': 'to', 'tr': 'tr', 'ts': 'ts',\n  'tt': 'tt', 'tw': 'tw', 'ty': 'ty', 'ug': 'ug', 'uk': 'uk', 'ur': 'ur',\n  'uz': 'uz', 've': 've', 'vi': 'vi', 'vo': 'vo', 'wa': 'wa', 'wo': 'wo',\n  'xh': 'xh', 'yi': 'yi', 'yo': 'yo', 'za': 'za', 'zh': 'zh', 'zu': 'zu',\n  'aar': 'aar', 'abk': 'abk', 'ave': 'ave', 'afr': 'afr', 'aka': 'aka',\n  'amh': 'amh', 'arg': 'arg', 'ara': 'ara', 'asm': 'asm', 'ava': 'ava',\n  'aym': 'aym', 'aze': 'aze', 'bak': 'bak', 'bel': 'bel', 'bul': 'bul',\n  'bih': 'bih', 'bis': 'bis', 'bam': 'bam', 'ben': 'ben', 'tib': 'tib',\n  'bod': 'bod', 'bre': 'bre', 'bos': 'bos', 'cat': 'cat', 'che': 'che',\n  'cha': 'cha', 'cos': 'cos', 'cre': 'cre', 'cze': 'cze', 'ces': 'ces',\n  'chu': 'chu', 'chv': 'chv', 'wel': 'wel', 'cym': 'cym', 'dan': 'dan',\n  'ger': 'ger', 'deu': 'deu', 'div': 'div', 'dzo': 'dzo', 'ewe': 'ewe',\n  'gre': 'gre', 'ell': 'ell', 'eng': 'eng', 'epo': 'epo', 'spa': 'spa',\n  'est': 'est', 'baq': 'baq', 'eus': 'eus', 'per': 'per', 'fas': 'fas',\n  'ful': 'ful', 'fin': 'fin', 'fij': 'fij', 'fao': 'fao', 'fre': 'fre',\n  'fra': 'fra', 'fry': 'fry', 'gle': 'gle', 'gla': 'gla', 'glg': 'glg',\n  'grn': 'grn', 'guj': 'guj', 'glv': 'glv', 'hau': 'hau', 'heb': 'heb',\n  'hin': 'hin', 'hmo': 'hmo', 'hrv': 'hrv', 'hat': 'hat', 'hun': 'hun',\n  'arm': 'arm', 'hye': 'hye', 'her': 'her', 'ina': 'ina', 'ind': 'ind',\n  'ile': 'ile', 'ibo': 'ibo', 'iii': 'iii', 'ipk': 'ipk', 'ido': 'ido',\n  'ice': 'ice', 'isl': 'isl', 'ita': 'ita', 'iku': 'iku', 'jpn': 'jpn',\n  'jav': 'jav', 'geo': 'geo', 'kat': 'kat', 'kon': 'kon', 'kik': 'kik',\n  'kua': 'kua', 'kaz': 'kaz', 'kal': 'kal', 'khm': 'khm', 'kan': 'kan',\n  'kor': 'kor', 'kau': 'kau', 'kas': 'kas', 'kur': 'kur', 'kom': 'kom',\n  'cor': 'cor', 'kir': 'kir', 'lat': 'lat', 'ltz': 'ltz', 'lug': 'lug',\n  'lim': 'lim', 'lin': 'lin', 'lao': 'lao', 'lit': 'lit', 'lub': 'lub',\n  'lav': 'lav', 'mlg': 'mlg', 'mah': 'mah', 'mao': 'mao', 'mri': 'mri',\n  'mac': 'mac', 'mkd': 'mkd', 'mal': 'mal', 'mon': 'mon', 'mol': 'mol',\n  'mar': 'mar', 'may': 'may', 'msa': 'msa', 'mlt': 'mlt', 'bur': 'bur',\n  'mya': 'mya', 'nau': 'nau', 'nob': 'nob', 'nde': 'nde', 'nep': 'nep',\n  'ndo': 'ndo', 'dut': 'dut', 'nld': 'nld', 'nno': 'nno', 'nor': 'nor',\n  'nbl': 'nbl', 'nav': 'nav', 'nya': 'nya', 'oci': 'oci', 'oji': 'oji',\n  'orm': 'orm', 'ori': 'ori', 'oss': 'oss', 'pan': 'pan', 'pli': 'pli',\n  'pol': 'pol', 'pus': 'pus', 'por': 'por', 'que': 'que', 'roh': 'roh',\n  'run': 'run', 'rum': 'rum', 'ron': 'ron', 'rus': 'rus', 'kin': 'kin',\n  'san': 'san', 'srd': 'srd', 'snd': 'snd', 'sme': 'sme', 'sag': 'sag',\n  'slo': 'slo', 'sin': 'sin', 'slk': 'slk', 'slv': 'slv', 'smo': 'smo',\n  'sna': 'sna', 'som': 'som', 'alb': 'alb', 'sqi': 'sqi', 'srp': 'srp',\n  'ssw': 'ssw', 'sot': 'sot', 'sun': 'sun', 'swe': 'swe', 'swa': 'swa',\n  'tam': 'tam', 'tel': 'tel', 'tgk': 'tgk', 'tha': 'tha', 'tir': 'tir',\n  'tuk': 'tuk', 'tgl': 'tgl', 'tsn': 'tsn', 'ton': 'ton', 'tur': 'tur',\n  'tso': 'tso', 'tat': 'tat', 'twi': 'twi', 'tah': 'tah', 'uig': 'uig',\n  'ukr': 'ukr', 'urd': 'urd', 'uzb': 'uzb', 'ven': 'ven', 'vie': 'vie',\n  'vol': 'vol', 'wln': 'wln', 'wol': 'wol', 'xho': 'xho', 'yid': 'yid',\n  'yor': 'yor', 'zha': 'zha', 'chi': 'chi', 'zho': 'zho', 'zul': 'zul',\n};\n\nexport default ValidLanguages;\n","// @flow\n\nconst scorm12 = {\n  CMIString256: '^.{0,255}$',\n  CMIString4096: '^.{0,4096}$',\n  CMITime: '^(?:[01]\\\\d|2[0123]):(?:[012345]\\\\d):(?:[012345]\\\\d)$', // eslint-disable-line\n  CMITimespan: '^([0-9]{2,}):([0-9]{2}):([0-9]{2})(\\.[0-9]{1,2})?$', // eslint-disable-line\n  CMIInteger: '^\\\\d+$',\n  CMISInteger: '^-?([0-9]+)$',\n  CMIDecimal: '^-?([0-9]{0,3})(\\.[0-9]*)?$', // eslint-disable-line\n  CMIIdentifier: '^[\\\\u0021-\\\\u007E\\\\s]{0,255}$',\n  CMIFeedback: '^.{0,255}$', // This must be redefined\n  CMIIndex: '[._](\\\\d+).',\n\n  // Vocabulary Data Type Definition\n  CMIStatus: '^(passed|completed|failed|incomplete|browsed)$',\n  CMIStatus2: '^(passed|completed|failed|incomplete|browsed|not attempted)$',\n  CMIExit: '^(time-out|suspend|logout|)$',\n  CMIType: '^(true-false|choice|fill-in|matching|performance|sequencing|likert|numeric)$',\n  CMIResult: '^(correct|wrong|unanticipated|neutral|([0-9]{0,3})?(\\\\.[0-9]*)?)$', // eslint-disable-line\n  NAVEvent: '^(previous|continue)$',\n\n  // Data ranges\n  score_range: '0#100',\n  audio_range: '-1#100',\n  speed_range: '-100#100',\n  weighting_range: '-100#100',\n  text_range: '-1#1',\n};\n\nconst aicc = {\n  ...scorm12, ...{\n    CMIIdentifier: '^\\\\w{1,255}$',\n  },\n};\n\nconst scorm2004 = {\n  CMIString200: '^[\\\\u0000-\\\\uFFFF]{0,200}$',\n  CMIString250: '^[\\\\u0000-\\\\uFFFF]{0,250}$',\n  CMIString1000: '^[\\\\u0000-\\\\uFFFF]{0,1000}$',\n  CMIString4000: '^[\\\\u0000-\\\\uFFFF]{0,4000}$',\n  CMIString64000: '^[\\\\u0000-\\\\uFFFF]{0,64000}$',\n  CMILang: '^([a-zA-Z]{2,3}|i|x)(\\-[a-zA-Z0-9\\-]{2,8})?$|^$', // eslint-disable-line\n  CMILangString250: '^(\\{lang=([a-zA-Z]{2,3}|i|x)(\\-[a-zA-Z0-9\\-]{2,8})?\\})?((?!\\{.*$).{0,250}$)?$', // eslint-disable-line\n  CMILangcr: '^((\\{lang=([a-zA-Z]{2,3}|i|x)?(\\-[a-zA-Z0-9\\-]{2,8})?\\}))(.*?)$', // eslint-disable-line\n  CMILangString250cr: '^((\\{lang=([a-zA-Z]{2,3}|i|x)?(\\-[a-zA-Z0-9\\-]{2,8})?\\})?(.{0,250})?)?$', // eslint-disable-line\n  CMILangString4000: '^(\\{lang=([a-zA-Z]{2,3}|i|x)(\\-[a-zA-Z0-9\\-]{2,8})?\\})?((?!\\{.*$).{0,4000}$)?$', // eslint-disable-line\n  CMITime: '^(19[7-9]{1}[0-9]{1}|20[0-2]{1}[0-9]{1}|203[0-8]{1})((-(0[1-9]{1}|1[0-2]{1}))((-(0[1-9]{1}|[1-2]{1}[0-9]{1}|3[0-1]{1}))(T([0-1]{1}[0-9]{1}|2[0-3]{1})((:[0-5]{1}[0-9]{1})((:[0-5]{1}[0-9]{1})((\\\\.[0-9]{1,2})((Z|([+|-]([0-1]{1}[0-9]{1}|2[0-3]{1})))(:[0-5]{1}[0-9]{1})?)?)?)?)?)?)?)?$',\n  CMITimespan: '^P(?:([.,\\\\d]+)Y)?(?:([.,\\\\d]+)M)?(?:([.,\\\\d]+)W)?(?:([.,\\\\d]+)D)?(?:T?(?:([.,\\\\d]+)H)?(?:([.,\\\\d]+)M)?(?:([.,\\\\d]+)S)?)?$',\n  CMIInteger: '^\\\\d+$',\n  CMISInteger: '^-?([0-9]+)$',\n  CMIDecimal: '^-?([0-9]{1,5})(\\\\.[0-9]{1,18})?$',\n  CMIIdentifier: '^\\\\S{1,250}[a-zA-Z0-9]$',\n  CMIShortIdentifier: '^[\\\\w\\\\.\\\\-\\\\_]{1,250}$', // eslint-disable-line\n  CMILongIdentifier: '^(?:(?!urn:)\\\\S{1,4000}|urn:[A-Za-z0-9-]{1,31}:\\\\S{1,4000}|.{1,4000})$', // need to re-examine this\n  CMIFeedback: '^.*$', // This must be redefined\n  CMIIndex: '[._](\\\\d+).',\n  CMIIndexStore: '.N(\\\\d+).',\n\n  // Vocabulary Data Type Definition\n  CMICStatus: '^(completed|incomplete|not attempted|unknown)$',\n  CMISStatus: '^(passed|failed|unknown)$',\n  CMIExit: '^(time-out|suspend|logout|normal)$',\n  CMIType: '^(true-false|choice|fill-in|long-fill-in|matching|performance|sequencing|likert|numeric|other)$',\n  CMIResult: '^(correct|incorrect|unanticipated|neutral|-?([0-9]{1,4})(\\\\.[0-9]{1,18})?)$',\n  NAVEvent: '^(previous|continue|exit|exitAll|abandon|abandonAll|suspendAll|\\{target=\\\\S{0,200}[a-zA-Z0-9]\\}choice|jump)$', // eslint-disable-line\n  NAVBoolean: '^(unknown|true|false$)',\n  NAVTarget: '^(previous|continue|choice.{target=\\\\S{0,200}[a-zA-Z0-9]})$',\n\n  // Data ranges\n  scaled_range: '-1#1',\n  audio_range: '0#*',\n  speed_range: '0#*',\n  text_range: '-1#1',\n  progress_range: '0#1',\n};\n\nconst Regex = {\n  aicc: aicc,\n  scorm12: scorm12,\n  scorm2004: scorm2004,\n};\n\nexport default Regex;\n","// @flow\nimport Regex from './regex';\n\nconst scorm2004_regex = Regex.scorm2004;\n\nconst learner = {\n  'true-false': {\n    format: '^true$|^false$',\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n  'choice': {\n    format: scorm2004_regex.CMILongIdentifier,\n    max: 36,\n    delimiter: '[,]',\n    unique: true,\n  },\n  'fill-in': {\n    format: scorm2004_regex.CMILangString250,\n    max: 10,\n    delimiter: '[,]',\n    unique: false,\n  },\n  'long-fill-in': {\n    format: scorm2004_regex.CMILangString4000,\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n  'matching': {\n    format: scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIShortIdentifier,\n    max: 36,\n    delimiter: '[,]',\n    delimiter2: '[.]',\n    unique: false,\n  },\n  'performance': {\n    format: '^$|' + scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIDecimal + '|^$|' +\n        scorm2004_regex.CMIShortIdentifier,\n    max: 250,\n    delimiter: '[,]',\n    delimiter2: '[.]',\n    unique: false,\n  },\n  'sequencing': {\n    format: scorm2004_regex.CMIShortIdentifier,\n    max: 36,\n    delimiter: '[,]',\n    unique: false,\n  },\n  'likert': {\n    format: scorm2004_regex.CMIShortIdentifier,\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n  'numeric': {\n    format: scorm2004_regex.CMIDecimal,\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n  'other': {\n    format: scorm2004_regex.CMIString4000,\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n};\n\nconst correct = {\n  'true-false': {\n    max: 1,\n    delimiter: '',\n    unique: false,\n    duplicate: false,\n    format: '^true$|^false$',\n    limit: 1,\n  },\n  'choice': {\n    max: 36,\n    delimiter: '[,]',\n    unique: true,\n    duplicate: false,\n    format: scorm2004_regex.CMILongIdentifier,\n  },\n  'fill-in': {\n    max: 10,\n    delimiter: '[,]',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMILangString250cr,\n  },\n  'long-fill-in': {\n    max: 1,\n    delimiter: '',\n    unique: false,\n    duplicate: true,\n    format: scorm2004_regex.CMILangString4000,\n  },\n  'matching': {\n    max: 36,\n    delimiter: '[,]',\n    delimiter2: '[.]',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIShortIdentifier,\n  },\n  'performance': {\n    max: 250,\n    delimiter: '[,]',\n    delimiter2: '[.]',\n    unique: false,\n    duplicate: false,\n    format: '^$|' + scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIDecimal + '|^$|' +\n        scorm2004_regex.CMIShortIdentifier,\n  },\n  'sequencing': {\n    max: 36,\n    delimiter: '[,]',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIShortIdentifier,\n  },\n  'likert': {\n    max: 1,\n    delimiter: '',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIShortIdentifier,\n    limit: 1,\n  },\n  'numeric': {\n    max: 2,\n    delimiter: '[:]',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIDecimal,\n    limit: 1,\n  },\n  'other': {\n    max: 1,\n    delimiter: '',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIString4000,\n    limit: 1,\n  },\n};\n\nconst Responses = {\n  learner: learner,\n  correct: correct,\n};\n\nexport default Responses;\n","// @flow\n\nimport APIConstants from './constants/api_constants';\n\nconst scorm12_errors = APIConstants.scorm12.error_descriptions;\nconst aicc_errors = APIConstants.aicc.error_descriptions;\nconst scorm2004_errors = APIConstants.scorm2004.error_descriptions;\n\n/**\n * Base Validation Exception\n */\nexport class ValidationError extends Error {\n  /**\n   * Constructor to take in an error message and code\n   * @param {number} errorCode\n   * @param {string} errorMessage\n   * @param {string} detailedMessage\n   */\n  constructor(errorCode: number, errorMessage: String, detailedMessage: String) {\n    super(errorMessage);\n    this.#errorCode = errorCode;\n    this.#errorMessage = errorMessage;\n    this.#detailedMessage = detailedMessage;\n  }\n\n  #errorCode;\n  #errorMessage;\n  #detailedMessage;\n\n  /**\n   * Getter for #errorCode\n   * @return {number}\n   */\n  get errorCode() {\n    return this.#errorCode;\n  }\n\n  /**\n   * Getter for #errorMessage\n   * @return {string}\n   */\n  get errorMessage() {\n    return this.#errorMessage;\n  }\n\n  /**\n   * Getter for #detailedMessage\n   * @return {string}\n   */\n  get detailedMessage() {\n    return this.#detailedMessage;\n  }\n}\n\n/**\n * SCORM 1.2 Validation Error\n */\nexport class Scorm12ValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(scorm12_errors, String(errorCode))) {\n      super(errorCode, scorm12_errors[String(errorCode)].basicMessage, scorm12_errors[String(errorCode)].detailMessage);\n    } else {\n      super(101, scorm12_errors['101'].basicMessage, scorm12_errors['101'].detailMessage);\n    }\n  }\n}\n\n/**\n * AICC Validation Error\n */\nexport class AICCValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(aicc_errors, String(errorCode))) {\n      super(errorCode, aicc_errors[String(errorCode)].basicMessage, aicc_errors[String(errorCode)].detailMessage);\n    } else {\n      super(101, aicc_errors['101'].basicMessage, aicc_errors['101'].detailMessage);\n    }\n  }\n}\n\n/**\n * SCORM 2004 Validation Error\n */\nexport class Scorm2004ValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(scorm2004_errors, String(errorCode))) {\n      super(errorCode, scorm2004_errors[String(errorCode)].basicMessage, scorm2004_errors[String(errorCode)].detailMessage);\n    } else {\n      super(101, scorm2004_errors['101'].basicMessage, scorm2004_errors['101'].detailMessage);\n    }\n  }\n}\n","// @flow\nexport const SECONDS_PER_SECOND = 1.0;\nexport const SECONDS_PER_MINUTE = 60;\nexport const SECONDS_PER_HOUR = 60 * SECONDS_PER_MINUTE;\nexport const SECONDS_PER_DAY = 24 * SECONDS_PER_HOUR;\n\nconst designations = [\n  ['D', SECONDS_PER_DAY],\n  ['H', SECONDS_PER_HOUR],\n  ['M', SECONDS_PER_MINUTE],\n  ['S', SECONDS_PER_SECOND],\n];\n\n/**\n * Converts a Number to a String of HH:MM:SS\n *\n * @param {Number} totalSeconds\n * @return {string}\n */\nexport function getSecondsAsHHMMSS(totalSeconds: Number) {\n  // SCORM spec does not deal with negative durations, give zero back\n  if (!totalSeconds || totalSeconds <= 0) {\n    return '00:00:00';\n  }\n\n  const hours = Math.floor(totalSeconds / SECONDS_PER_HOUR);\n\n  const dateObj = new Date(totalSeconds * 1000);\n  const minutes = dateObj.getUTCMinutes();\n  // make sure we add any possible decimal value\n  const seconds = dateObj.getSeconds();\n  const ms = totalSeconds % 1.0;\n  let msStr = '';\n  if (countDecimals(ms) > 0) {\n    if (countDecimals(ms) > 2) {\n      msStr = ms.toFixed(2);\n    } else {\n      msStr = String(ms);\n    }\n    msStr = '.' + msStr.split('.')[1];\n  }\n\n  return (hours + ':' + minutes + ':' + seconds).replace(/\\b\\d\\b/g,\n      '0$&') + msStr;\n}\n\n/**\n * Calculate the number of seconds from ISO 8601 Duration\n *\n * @param {Number} seconds\n * @return {String}\n */\nexport function getSecondsAsISODuration(seconds: Number) {\n  // SCORM spec does not deal with negative durations, give zero back\n  if (!seconds || seconds <= 0) {\n    return 'PT0S';\n  }\n\n  let duration = 'P';\n  let remainder = seconds;\n\n  designations.forEach(([sign, current_seconds]) => {\n    let value = Math.floor(remainder / current_seconds);\n\n    remainder = remainder % current_seconds;\n    if (countDecimals(remainder) > 2) {\n      remainder = Number(Number(remainder).toFixed(2));\n    }\n    // If we have anything left in the remainder, and we're currently adding\n    // seconds to the duration, go ahead and add the decimal to the seconds\n    if (sign === 'S' && remainder > 0) {\n      value += remainder;\n    }\n\n    if (value) {\n      if ((duration.indexOf('D') > 0 ||\n          sign === 'H' || sign === 'M' || sign === 'S') &&\n          duration.indexOf('T') === -1) {\n        duration += 'T';\n      }\n      duration += `${value}${sign}`;\n    }\n  });\n\n  return duration;\n}\n\n/**\n * Calculate the number of seconds from HH:MM:SS.DDDDDD\n *\n * @param {string} timeString\n * @param {RegExp} timeRegex\n * @return {number}\n */\nexport function getTimeAsSeconds(timeString: String, timeRegex: RegExp) {\n  if (!timeString || typeof timeString !== 'string' ||\n      !timeString.match(timeRegex)) {\n    return 0;\n  }\n  const parts = timeString.split(':');\n  const hours = Number(parts[0]);\n  const minutes = Number(parts[1]);\n  const seconds = Number(parts[2]);\n  return (hours * 3600) + (minutes * 60) + seconds;\n}\n\n/**\n * Calculate the number of seconds from ISO 8601 Duration\n *\n * @param {string} duration\n * @param {RegExp} durationRegex\n * @return {number}\n */\nexport function getDurationAsSeconds(duration: String, durationRegex: RegExp) {\n  if (!duration || !duration.match(durationRegex)) {\n    return 0;\n  }\n\n  const [, years, months, , days, hours, minutes, seconds] = new RegExp(\n      durationRegex).exec(duration) || [];\n\n  let result = 0.0;\n\n  result += (Number(seconds) || 0.0);\n  result += (Number(minutes) * 60.0 || 0.0);\n  result += (Number(hours) * 3600.0 || 0.0);\n  result += (Number(days) * (60 * 60 * 24.0) || 0.0);\n  result += (Number(years) * (60 * 60 * 24 * 365.0) || 0.0);\n\n  return result;\n}\n\n/**\n * Adds together two ISO8601 Duration strings\n *\n * @param {string} first\n * @param {string} second\n * @param {RegExp} durationRegex\n * @return {string}\n */\nexport function addTwoDurations(\n    first: String,\n    second: String,\n    durationRegex: RegExp) {\n  return getSecondsAsISODuration(\n      getDurationAsSeconds(first, durationRegex) +\n      getDurationAsSeconds(second, durationRegex),\n  );\n}\n\n/**\n * Add together two HH:MM:SS.DD strings\n *\n * @param {string} first\n * @param {string} second\n * @param {RegExp} timeRegex\n * @return {string}\n */\nexport function addHHMMSSTimeStrings(\n    first: String,\n    second: String,\n    timeRegex: RegExp) {\n  return getSecondsAsHHMMSS(\n      getTimeAsSeconds(first, timeRegex) +\n      getTimeAsSeconds(\n          second, timeRegex),\n  );\n}\n\n/**\n * Flatten a JSON object down to string paths for each values\n * @param {object} data\n * @return {object}\n */\nexport function flatten(data) {\n  const result = {};\n\n  /**\n   * Recurse through the object\n   * @param {*} cur\n   * @param {*} prop\n   */\n  function recurse(cur, prop) {\n    if (Object(cur) !== cur) {\n      result[prop] = cur;\n    } else if (Array.isArray(cur)) {\n      for (let i = 0, l = cur.length; i < l; i++) {\n        recurse(cur[i], prop + '[' + i + ']');\n        if (l === 0) result[prop] = [];\n      }\n    } else {\n      let isEmpty = true;\n      for (const p in cur) {\n        if ({}.hasOwnProperty.call(cur, p)) {\n          isEmpty = false;\n          recurse(cur[p], prop ? prop + '.' + p : p);\n        }\n      }\n      if (isEmpty && prop) result[prop] = {};\n    }\n  }\n\n  recurse(data, '');\n  return result;\n}\n\n/**\n * Un-flatten a flat JSON object\n * @param {object} data\n * @return {object}\n */\nexport function unflatten(data) {\n  'use strict';\n  if (Object(data) !== data || Array.isArray(data)) return data;\n  const regex = /\\.?([^.[\\]]+)|\\[(\\d+)]/g;\n  const result = {};\n  for (const p in data) {\n    if ({}.hasOwnProperty.call(data, p)) {\n      let cur = result;\n      let prop = '';\n      let m = regex.exec(p);\n      while (m) {\n        cur = cur[prop] || (cur[prop] = (m[2] ? [] : {}));\n        prop = m[2] || m[1];\n        m = regex.exec(p);\n      }\n      cur[prop] = data[p];\n    }\n  }\n  return result[''] || result;\n}\n\n/**\n * Counts the number of decimal places\n * @param {number} num\n * @return {number}\n */\nexport function countDecimals(num: number) {\n  if (Math.floor(num) === num || String(num).indexOf('.') < 0) return 0;\n  const parts = num.toString().split('.')[1];\n  return parts.length || 0;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Scorm2004API from '../Scorm2004API';\n\nwindow.Scorm2004API = Scorm2004API;\n"],"names":["FUNC_ERROR_TEXT","NAN","symbolTag","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","global","_typeof","Object","freeSelf","self","root","Function","objectProto","prototype","objectToString","toString","nativeMax","Math","max","nativeMin","min","now","Date","debounce","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","toNumber","isObject","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","shouldInvoke","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","arguments","value","type","isObjectLike","isSymbol","call","other","valueOf","replace","isBinary","test","slice","module","exports","CMIArray","ValidationError","ErrorCodes","APIConstants","unflatten","global_constants","scorm12_error_codes","scorm12","_timeout","WeakMap","_error_codes","_settings","BaseAPI","error_codes","settings","_classCallCheck","_classPrivateFieldInitSpec","writable","autocommit","autocommitSeconds","asyncCommit","sendBeaconCommit","lmsCommitUrl","dataCommitFormat","commitRequestDataType","autoProgress","logLevel","LOG_LEVEL_ERROR","selfReportSessionTime","alwaysSendTotalTime","strict_errors","xhrHeaders","xhrWithCredentials","responseHandler","xhr","JSON","parse","responseText","hasOwnProperty","status","SCORM_TRUE","errorCode","SCORM_FALSE","requestHandler","commitObject","onLogMessage","messageLevel","logMessage","console","error","LOG_LEVEL_WARNING","warn","LOG_LEVEL_INFO","info","LOG_LEVEL_DEBUG","debug","log","_defineProperty","constructor","currentState","STATE_NOT_INITIALIZED","lastErrorCode","listenerArray","_classPrivateFieldSet","apiLogLevel","_createClass","key","initialize","callbackName","initializeMessage","terminationMessage","returnValue","isInitialized","throwSCORMError","_classPrivateFieldGet","INITIALIZED","isTerminated","TERMINATED","cmi","setStartTime","STATE_INITIALIZED","processListeners","apiLog","clearSCORMError","get","set","_objectSpread","terminate","checkTerminated","checkState","TERMINATION_BEFORE_INIT","MULTIPLE_TERMINATION","STATE_TERMINATED","storeData","getValue","CMIElement","RETRIEVE_BEFORE_INIT","RETRIEVE_AFTER_TERM","getCMIValue","e","message","GENERAL","setValue","commitCallback","String","STORE_BEFORE_INIT","STORE_AFTER_TERM","setCMIValue","scheduleCommit","commit","clearScheduledCommit","COMMIT_BEFORE_INIT","COMMIT_AFTER_TERM","getLastError","getErrorString","CMIErrorCode","getLmsErrorMessageDetails","getDiagnostic","beforeInitError","afterTermError","isNotInitialized","functionName","formatMessage","baseLength","messageString","fillChars","length","i","CMIElementBaseLength","j","stringMatches","str","tester","match","_checkObjectHasProperty","refObject","attribute","getOwnPropertyDescriptor","getPrototypeOf","_errorNumber","_detail","Error","_CMIElement","_value","_commonSetCMIValue","methodName","scorm2004","structure","split","foundFirstIndex","invalidErrorMessage","concat","invalidErrorCode","UNDEFINED_DATA_MODEL","substr","_isTargetValid","READ_ONLY_ELEMENT","validateCorrectResponse","index","isNaN","item","childArray","newChild","getChildElement","initialized","push","_foundFirstIndex","_commonGetCMIValue","uninitializedErrorMessage","target","VALUE_NOT_INITIALIZED","CHILDREN_ERROR","COUNT_ERROR","on","listenerName","callback","listenerFunctions","listenerSplit","off","_this","_loop","v","removeIndex","findIndex","obj","splice","_ret","clear","_this2","_loop2","filter","_ret2","listener","functionsMatch","listenerHasCMIElement","CMIElementsMatch","substring","indexOf","errorNumber","success","_calculateTotalTime","loadFromFlattenedJSON","json","_this3","testPattern","a","c","a_pattern","a_match","c_match","a_num","Number","c_num","int_pattern","obj_pattern","keys","map","sort","_ref","_ref2","_ref3","_slicedToArray","b","_ref4","d","forEach","element","loadFromJSON","startingData","currentCMIElement","renderCMIToJSONString","stringify","renderCMIToJSONObject","renderCommitCMI","_terminateCommit","processHttpRequest","url","params","immediate","api","process","genericError","httpReq","XMLHttpRequest","open","header","setRequestHeader","withCredentials","onload","Array","send","join","fetch","method","body","headers","credentials","keepalive","when","ScheduledCommit","default","_API","_cancelled","_timeout2","_callback","API","wrapper","bind","ADL","CMI","CMICommentsObject","CMIInteractionsCorrectResponsesObject","CMIInteractionsObject","CMIInteractionsObjectivesObject","CMIObjectivesObject","Utilities","Responses","ValidLanguages","Regex","scorm2004_constants","scorm2004_error_codes","correct_responses","correct","scorm2004_regex","_version","Scorm2004API","_BaseAPI","_inherits","_super","_createSuper","finalSettings","mastery_override","_assertThisInitialized","correct_response","current_index","found","count","_count","adl","Initialize","lmsInitialize","Terminate","lmsTerminate","GetValue","lmsGetValue","SetValue","lmsSetValue","Commit","lmsCommit","GetLastError","lmsGetLastError","GetErrorString","lmsGetErrorString","GetDiagnostic","lmsGetDiagnostic","nav","request","parts","interaction","interactions","DEPENDENCY_NOT_ESTABLISHED","checkDuplicateChoiceResponse","response_type","checkValidResponseType","GENERAL_SET_FAILURE","interaction_type","nodes","delimiter","checkCorrectResponseValue","interaction_count","response","pattern","pattern_index","limit","duplicate","checkDuplicatedPattern","detail","basicMessage","detailMessage","error_descriptions","formatRegex","RegExp","format","removeCorrectResponsePrefixes","delimiter2","values","matches","TYPE_MISMATCH","format2","unique","node","seenOrder","seenCase","seenLang","prefixRegex","langMatches","CMILangcr","lang","toLowerCase","replaceWithAnotherScormAPI","newAPI","terminateCommit","cmiExport","total_time","getCurrentTotalTime","flattened","flatten","_this$startingData","_this$startingData$ad","_this$startingData$ad2","mode","credit","completion_threshold","progress_measure","completion_status","scaled_passing_score","score","scaled","success_status","navRequest","encodeURIComponent","scorm12_constants","scorm12_regex","checkValidFormat","regexPattern","errorClass","allowEmptyString","checkValidRange","rangePattern","ranges","_initialized","_start_time","BaseCMI","getTime","_children2","_score_range","_invalid_error_code","_invalid_type_code","_invalid_range_code","_decimal_regex","_error_class","_raw","_min","_max","CMIScore","_BaseCMI","score_children","score_range","invalidTypeCode","invalidRangeCode","decimalRegex","INVALID_SET_VALUE","VALUE_OUT_OF_RANGE","CMIDecimal","_children","raw","toJSON","jsonString","_errorCode","_errorClass","_children3","_BaseCMI2","_super2","children","Scorm2004ValidationError","Util","learner_responses","learner","throwReadOnlyError","throwWriteOnlyError","WRITE_ONLY_ELEMENT","throwTypeMismatchError","throwDependencyNotEstablishedError","throwGeneralSetError","check2004ValidFormat","check2004ValidRange","_version2","_completion_status","_completion_threshold","_credit","_entry","_exit","_launch_data","_learner_id","_learner_name","_location","_max_time_allowed","_mode","_progress_measure","_scaled_passing_score","_session_time","_success_status","_suspend_data","_time_limit_action","_total_time","cmi_children","learner_preference","CMILearnerPreference","Scorm2004CMIScore","comments_from_learner","CMICommentsFromLearner","comments_from_lms","CMICommentsFromLMS","CMIInteractions","objectives","CMIObjectives","_this$learner_prefere","_this$score","_this$comments_from_l","_this$comments_from_l2","_this$interactions","_this$objectives","_get","_getPrototypeOf","CMICStatus","entry","exit","CMIExit","launch_data","learner_id","learner_name","location","CMIString1000","max_time_allowed","progress_range","session_time","CMITimespan","CMISStatus","suspend_data","CMIString64000","time_limit_action","sessionTime","startTime","start_time","seconds","getSecondsAsISODuration","addTwoDurations","_audio_level","_language","_delivery_speed","_audio_captioning","student_preference_children","audio_level","audio_range","language","CMILang","delivery_speed","speed_range","audio_captioning","CMISInteger","text_range","_CMIArray","_super3","interactions_children","_CMIArray2","_super4","objectives_children","_CMIArray3","_super5","comments_children","_CMIArray4","_super6","_id","_type","_timestamp","_weighting","_learner_response","_result","_latency","_description","_BaseCMI3","_super7","correct_responses_children","_this$objectives2","_this$correct_respons","id","CMILongIdentifier","CMIType","timestamp","CMITime","weighting","learner_response","CMIResult","latency","description","CMILangString250","_id2","_success_status2","_completion_status2","_progress_measure2","_description2","_BaseCMI4","_super8","_this4","_this$score2","_scaled","_CMIScore","_super9","_this5","scaled_range","_comment","_location2","_timestamp2","_readOnlyAfterInit","_BaseCMI5","_super10","_this6","readOnlyAfterInit","comment","CMILangString4000","CMIString250","_id3","_BaseCMI6","_super11","_this7","_pattern","_BaseCMI7","_super12","_this8","CMIFeedback","_BaseCMI8","_super13","_this9","ADLNav","_this$nav","_request","_BaseCMI9","_super14","_this10","request_valid","ADLNavRequestValid","_this$request_valid","NAVEvent","_continue","_previous","_BaseCMI10","_super15","_this11","_class2","_target","_class4","_","previous","continue","LOG_LEVEL_NONE","core_children","student_data_children","aicc","student_demographics_children","tries_children","attempt_records_children","paths_children","INITIALIZATION_FAILED","TERMINATION_FAILURE","ARGUMENT_ERROR","GENERAL_GET_FAILURE","GENERAL_COMMIT_FAILURE","UNIMPLEMENTED_ELEMENT","MULTIPLE_TERMINATIONS","CMIString256","CMIString4096","CMIInteger","CMIIdentifier","CMIIndex","CMIStatus","CMIStatus2","weighting_range","CMIString200","CMIString4000","CMILangString250cr","CMIShortIdentifier","CMIIndexStore","NAVBoolean","NAVTarget","scorm12_errors","aicc_errors","scorm2004_errors","_errorMessage","_detailedMessage","_Error","errorMessage","detailedMessage","_wrapNativeSuper","Scorm12ValidationError","_ValidationError","_possibleConstructorReturn","AICCValidationError","_ValidationError2","_ValidationError3","SECONDS_PER_SECOND","SECONDS_PER_MINUTE","SECONDS_PER_HOUR","SECONDS_PER_DAY","designations","getSecondsAsHHMMSS","totalSeconds","hours","floor","dateObj","minutes","getUTCMinutes","getSeconds","ms","msStr","countDecimals","toFixed","duration","remainder","sign","current_seconds","getTimeAsSeconds","timeString","timeRegex","getDurationAsSeconds","durationRegex","exec","years","months","days","first","second","addHHMMSSTimeStrings","data","recurse","cur","prop","isArray","l","isEmpty","p","regex","m","num","window"],"sourceRoot":""}