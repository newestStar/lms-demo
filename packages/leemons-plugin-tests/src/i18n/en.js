module.exports = {
  questionsBanksList: {
    pageTitle: 'Questions Banks List',
    nameHeader: 'Name',
    nQuestionsHeader: 'Questions',
    levelHeader: 'Level',
    actionsHeader: 'Actions',
    view: 'View',
    show: 'Show',
    goTo: 'Go to',
    published: 'Published',
    draft: 'Drafts',
  },
  questionsBanksDetail: {
    basic: 'Basic',
    coverRequired: 'Cover is required',
    coverImage: 'Cover Image',
    coverImageAdd: 'Add image',
    coverImageRemove: 'Delete image',
    categoriesLabel: 'Categories',
    categoryLabel: 'Category',
    addCategory: 'Add category',
    programLabel: 'Program',
    programRequired: 'Field required',
    subjectLabel: 'Subject',
    subjectRequired: 'Field required',
    pageTitle: 'Editing question bank: {name}',
    pageTitleNew: 'New questions bank: {name}',
    saveDraft: 'Save as draft',
    publish: 'Publish',
    config: 'Config',
    design: 'Design',
    questions: 'Questions',
    nameLabel: 'Name',
    nameRequired: 'Field required',
    taglineLabel: 'Tagline',
    taglineRequired: 'Field required',
    summaryLabel: 'Summary',
    summaryRequired: 'Field required',
    tagsLabel: 'Tags',
    addTag: 'Add tag',
    continue: 'Continue',
    previous: 'Previous',
    addQuestion: 'Add new question',
    save: 'Save',
    saveQuestion: 'Save question',
    returnToList: 'Return to questions bank',
    questionDetail: 'Question detail',
    typeLabel: 'Type',
    typeRequired: 'Field required',
    levelLabel: 'Level',
    withImagesLabel: 'With images',
    questionLabel: 'Question',
    questionRequired: 'You must add at least one question',
    questionImage: 'Add featured image',
    responsesLabel: 'Responses',
    responseLabel: 'Response',
    errorMarkGoodResponse: 'You must mark a good response',
    needImages: 'Answers must have images',
    needExplanationAndResponse: 'All answers need a text and an explanation',
    needResponse: 'Answers must have a text',
    responsesDescription:
      'Select the correct answer by clicking on the circular icon, mark ({{icon}}) the response that will be hidden when the user requests a hint (you can set the hint mode in the assignment section).',
    addResponse: 'Add response',
    responseRequired: 'Field required',
    explanationRequired: 'Field required',
    includeExplanationToEveryAnswerLabel:
      'Include an explanation to every answer (right and wrong ones)',
    explanationLabel: 'Explanation',
    caption: 'Caption/ Alt text',
    cluesLabel: 'Clues',
    addClue: 'Add clue',
    cluesDescription:
      'You can give hints to students providing information that facilitates the memory retrieval task.',
    imageLabel: 'Image',
    saveImage: 'Save image',
    addImage: 'Add image',
    captionAltLabel: 'Caption / alt text',
    saveResponse: 'Save response',
    monoResponse: 'Mono response',
    map: 'Map',
    mapLabel: 'Map',
    addMap: 'Add map',
    itemsLabel: 'Items',
    itemsDescriptionBeforeMap:
      'Once you have added the number stickers to the image you can include the names',
    itemsDescription:
      'Mark ({{icon}}) the item that will be solved when the user requests a hint (you can set the hint mode in the assignment section).',
    createNumbering: 'Create numbering',
    savedAsDraft: 'Saved as draft',
    published: 'Published',
    actionsHeader: 'Actions',
    markersRequired: 'You must mark at least one item',
    markersNeedResponseInAllItems: 'A text must be added to all elements',
  },
  questionImageModal: {
    createNumbering: 'Create numbering',
    save: 'Save',
    cancel: 'Cancel',
    type: 'Type',
    color: 'Color',
    delete: 'Delete',
    move: 'Move',
    numberingStyle1: 'Numbering style 1 (1, 2, 3, ...)',
    numberingStyle2: 'Numbering style 2 (A, B, C, ...)',
  },
  testsList: {
    pageTitle: 'Test library',
    nameHeader: 'Name',
    nQuestionsHeader: 'Questions',
    levelHeader: 'Level',
    actionsHeader: 'Actions',
    view: 'View',
    show: 'Show',
    goTo: 'Go to',
    published: 'Published',
    draft: 'Drafts',
  },
  testsEdit: {
    gradableLabel: 'Gradable',
    programLabel: 'Program',
    programRequired: 'Field required',
    subjectLabel: 'Subject',
    subjectRequired: 'Field required',
    basic: 'Basic',
    pageTitle: 'Editing test: {name}',
    pageTitleNew: 'New test',
    saveDraft: 'Save as draft',
    publish: 'Publish',
    config: 'Config',
    nameLabel: 'Name',
    nameRequired: 'Field required',
    taglineLabel: 'Tagline',
    taglineRequired: 'Field required',
    typeLabel: 'Type',
    typeRequired: 'Field required',
    learn: 'Learn',
    summaryLabel: 'Summary',
    summaryRequired: 'Field required',
    tagsLabel: 'Tags',
    addTag: 'Add tag',
    previous: 'Previous',
    continue: 'Continue',
    onlyPublish: 'Only publish',
    publishAndAssign: 'Publish and assign',
    questionsBank: 'Questions Bank',
    design: 'Design',
    questionsBanksDescription: 'Select a question bank to use in this test',
    questionsBanks: 'Questions Banks',
    nameHeader: 'Name',
    nQuestionsHeader: 'Questions',
    noQuestionBanks: 'No question bank available for the selected subjects',
    levelHeader: 'Level',
    actionsHeader: 'Actions',
    questionBankRequired: 'You must select one question bank',
    questions: 'Questions',
    savedAsDraft: 'Saved as draft',
    published: 'Published',
    questionsDescription:
      'Select the questions you want to add to this test question bank to use in this test.',
    questionBank: 'Question Bank: {name}',
    nQuestions: '{n} questions',
    questionFiltersDescription1:
      'The system allows, by default, automatic filtering by question type, category and level.',
    questionFiltersDescription2:
      'To choose specific questions, click on the "Select questions manually" option and click on "continue".',
    numberOfQuestions: 'Number of questions',
    useAllQuestions: 'Select questions manually',
    addType: 'Add type',
    levelLabel: 'Level',
    categoriesLabel: 'Categories',
    addLevel: 'Add level',
    all: 'All',
    selectByTag: 'Select by tag',
    showQuestions: 'Continue',
    nQuestionsRequired: 'Field required',
    minOneQuestion: 'Minimum one question',
    selectQuestionDescription:
      'These are the selected questions, check if this is the content you want for this test or edit the questions you are interested in.',
    selectQuestionNothingToSelect:
      'No questions were found for the criteria you entered, please go back and expand your search settings.',
    returnFilters: 'Return to Select questions',
    assignSelectedQuestions: 'Select questions and continue',
    responsesLabel: 'Responses',
    questionLabel: 'Question',
    questionsRequired: 'Minimum select one question',
    reorderQuestionsDescription:
      'These are the questions you have selected for this test, if you wish, you can order them at your convenience',
    statementLabel: 'Test statement',
    statementRequired: 'Field required',
    contentLabel: 'Content',
    instructionsForTeacherLabel: 'Instructions for teacher',
    instructionsForStudentLabel: 'Instructions for student',
    instructions: 'Instructions',
  },
  testsDetail: {
    assign: 'Assign test',
    edit: 'Edit test',
    undefined: 'Undefined',
    questionTypes: 'Question types',
    levels: 'Levels',
    categories: 'Categories',
    questions: 'Questions',
    chartLabel: 'Composition of questions',
    showInTests: 'Preview',
  },
  testsCard: {
    view: 'Preview',
    edit: 'Edit',
    tests: 'Tests',
    assign: 'Assign',
    questionBank: 'Question bank',
    delete: 'Delete',
    deleted: 'Deleted',
    questions: 'Questions:',
    categories: 'Categories:',
    evaluation: 'Evaluation:',
    gradable: 'Gradable',
    nogradable: 'No gradable',
    task: 'Task',
    toggle: 'Close',
    open: 'Open',
  },
  studentInstance: {
    multiSubject: 'Multi-Subject',
    delivery: 'Delivery',
    resume: 'Statement',
    statement: 'Statement',
    prev: 'Previous',
    next: 'Continue',
    development: 'Instructions',
    // ----- Test
    test: 'TEST',
    instructionsForTest: 'Instructions for this test',
    questions: 'Questions',
    perQuestion: 'Per question',
    totalPoints: 'Total points',
    minScore: 'Minimum score',
    maxScore: 'Maximum score',
    importantInformation: 'Important information',
    informationOnlyView: 'This test is in "query only" mode',
    informationStart: 'The starting date to be able to perform this test is: {date}',
    minToApprove: 'Min. to approve',
    beforeStart: 'To be considered',
    withoutPause: 'Without pause',
    noTimeLimit: 'No time limit',
    makeTheTest: 'Make the test',
    howItWorks: 'How it works?',
    limitedTime: 'Limited time',
    limitedTimeDescription:
      'Once started you have {time} to finish the test, if the time ends before you answer all the questions, only the questions answered up to the moment of the interruption will be scored.',
    canNotStop: 'The test cannot be paused',
    canNotStopDescription:
      'If you exit the application with the test in progress, the test will be terminated, scoring only the questions answered up to the moment of interruption. If an error occurs in the system and you are expelled from the test, you will be able to notify it and if your error is verified you will be able to retake the test.',
    questionNumber: 'QUESTION: {number}',
    theQuestionValueIs: 'The question value is',
    pointsInTotal: 'Points',
    askForAHint: 'Ask for a hint',
    hint: 'Hint',
    skipButton: 'Skip',
    nextButton: 'Next',
    finishButton: 'Finish',
    selectResponse: 'Select response',
    noBlankQuestions: "You can't leave questions blank",
    blankQuestions:
      '<strong>You can leave questions blank</strong> and these will not score (i.e. they score 0).',
    blankQuestionsScores:
      '<strong>You can leave questions blank</strong> and these will <strong>subtract {per}%</strong> of their value (i.e. they score {points}).',
    errorQuestions:
      '<strong>Wrong answers subtract {per}% of their value</strong>, that is, they score {points}',
    finishTestModalTitle: 'Complete and submit this test',
    finishTestModalDescription:
      'If you click on "Confirm submission", your test will be sent to a reviewer and you will no longer be able to modify any answers or answer unanswered questions <br/><br/> Once you confirm the submission, the system will show you the test results (except for open questions).',
    confirmSubmission: 'Confirm submission',
    cancelSubmission: 'Cancel',
    finishForceTestModalTitle: 'The time established to complete this test has expired.',
    finishForceTestModalDescription:
      'The questions answered up to this point have been correctly submitted. <br/><br/> You can check the test result or consult your current activities.',
    activitiesInCourse: 'Activities in course',
    reviewResults: 'Review results',
    warnNoResponseTitle: 'UNANSWERED QUESTION',
    warnNoResponseDescription:
      'This question has not been answered, please see below for the correct answer and explanation (if any).',
    mapNeedResponses:
      'This question requires you to answer all the options presented in order to be evaluated (otherwise it will count as an unanswered question).',
    attention: 'Attention',
    correctResponse: 'Correct response',
    explanation: 'Explanation',
    returnToTable: 'Return to table',
    clueN: '{number}ª Clue',
  },
  testAssign: {
    pageTitle: 'Assign Test:',
    assign: 'Assignar',
    config: 'Config',
    next: 'Continue',
    prev: 'Previous',
    assignDone: 'Assignment created successfully',
    configTitle: 'Selection of test content',
    advancedSettings: 'Advanced settings',
    allowAdvancedSettings: 'Allow advanced settings',
    useSettings: 'Use settings',
    configDescription: 'Create groups and then assign the options to them',
    totalQuestions: '{n} questions',
    requirementsQuestions: '{n} meet requirements',
    nOfQuestions: 'Number of questions',
    useAllQuestions: 'Use all questions',
    levelLabel: 'Level',
    nQuestionsRequired: 'Field required',
    minOneQuestion: 'Minimum one question',
    all: 'All',
    new: 'New',
    settingsAsPreset: 'Save this settings as a preset',
    presetName: 'Settings name',
    wrongAnswerLabel: 'Wrong answers',
    wrongAnswerDescription: 'What impact do wrong answers have on the test score?',
    wrongAnswerDoNotScore: 'Do not score',
    wrongAnswerPercentage: 'Subtract {number}% of the value',
    unansweredLabel: 'Unanswered',
    unansweredDescriptions: 'Allow students to leave questions unanswered.',
    unansweredDescription2: 'What impact do unanswers have on the test score?',
    clues: 'Clues',
    allowClues: 'Allow students to ask for clues',
    clueExtraInfo: 'Extra info',
    clueHideOption: 'Hide/Show options',
    cluePer: '{number}% reduction in value',
    clueReduction: 'Reduction',
    clueType: 'Type',
    clueCanUse: 'Can use',
    clueNoImpact: 'No impact',
    categoriesLabel: 'Categories',
    noRequiredQuestions: 'The filtered questions are fewer than those requested',
  },
  testResult: {
    testResult: 'Statistics by type of question',
    questions: 'Questions',
    test: 'Test',
    notGradable: 'Not gradable',
    gradable: 'Gradable',
    category: 'Category',
    level: 'Level',
    undefined: 'Undefined',
    question: 'Question',
    result: 'Result',
    showInTests: 'Show in the tests',
    feedbackForStudent: 'Feedback for student',
    sendFeedback: 'Send feedback',
    feedbackRequired: 'Feedback required',
    feedbackDone: 'Feedback sent successfully',
    ok: 'Successful',
    ko: 'Wrong',
    nsnc: 'NS/NC',
  },
};
